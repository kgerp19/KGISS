@model KGERP.Service.Implementation.EmployeeLogService.EmployeeViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }

    #file-upload-box {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        background-color: #f9f9f9;
    }

    .upload-label {
        cursor: pointer;
        font-size: 16px;
    }

    .plus-icon {
        font-size: 24px;
        margin-right: 8px;
    }

    .file-list {
        margin-top: 10px;
    }

    .file-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 12px;
        border: 1px solid #ccc;
        background-color: #fff;
        margin-bottom: 5px;
    }

    .remove-button {
        cursor: pointer;
        color: #ff0000;
    }

    #attachmentTable {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
    }

        #attachmentTable th, #attachmentTable td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
        }

        /* Style the table header row */
        #attachmentTable th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        /* Style alternating rows for better readability */
        #attachmentTable tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        /* Style links within the table */
        #attachmentTable a {
            text-decoration: none;
            color: #0074a2;
        }

        /* Apply a hover effect to rows */
        #attachmentTable tbody tr:hover {
            background-color: #e0e0e0;
        }

    .log-type {
        font-weight: bold;
    }

        .log-type[type="Type1"] {
            color: red;
        }

        .log-type[type="Type2"] {
            color: blue;
        }

        .log-type[type="Type3"] {
            color: green;
        }
</style>

<div class="row">
    <div class="col-md-12" style="background-color:#f1f1f1;padding:5px">
        <span style="font-size:20px;color:#000000">Create New Inventory </span>
    </div>
</div>



@using (Html.BeginForm("Index", "EmployeeLogs", FormMethod.Post, new { @id = "idForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="box" style="background-color:aliceblue;padding:15px">


        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label>Effective Date</label>
                    <div style="display: flex; max-width: 100%">
                        @Html.EditorFor(model => model.logdate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off", @style = "max-width: 100%" } })
                        @Html.ValidationMessageFor(model => model.logdate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="col-md-4">
                <div class="form-group" style="padding:0px">
                    <label for="message-text" class="col-form-label">Employee</label>
                    @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Title", @id = "txtEmployeeKGId", @style = "max-width: 100%" } })
                    @Html.HiddenFor(model => model.EmpId, new { id = "ddlREmployeeKGId" })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-group">
                    <label for="message-text" class="col-form-label"> Inventory Types:</label>
                    @Html.DropDownListFor(model => model.logtype, Model.EmployeeLogTypes as SelectList, "-- Inventory Types--", new { id = "ddlCommon_DivisionFk", @class = "form-control", @style = "max-width: 100%", required = "true" })
                    @Html.ValidationMessageFor(model => model.logtype, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Description</label>
                    @Html.TextAreaFor(model => model.Description, new { id = "ext", placeholder = "Description", @class = "form-control", @style = "max-width: 100%" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-6">

                <div id="file-upload-box">
                    <label for="file-input" class="upload-label">
                        <span class="plus-icon">+</span> Add File
                    </label>
                    <input type="file" name="Attachments" id="file-input" multiple>


                </div>

            </div>

        </div>


        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary">Add</button>
            </div>
            <div class="col-md-4"></div>
        </div>

    </div>
}

<br />
<div class="employeeInformation">
    <div class="bg-w">
        <b>Employee Information </b>
    </div>

    <div class="row">
        <table class="table">
            <tr>
                <th style="width:18%">
                    Name
                </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="Name"> </label>
                </td>
                <th style="width:18%"> Designation </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="Designation"> </label>
                </td>
            </tr>

            <tr>
                <th style="width:18%">
                    Department
                </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="Department"> </label>
                </td>
                <th style="width:18%"> Joining Date </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="JoiningDate"> </label>
                </td>
            </tr>

            <tr>
                <th style="width:18%">
                    Office Email
                </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="OfficeEmail"> </label>
                </td>
                <th style="width:18%"> MobileNo </th>
                <th style="width:2%">:</th>
                <td style="width:30%">
                    <label class="col-form-label" id="MobileNo"> </label>
                </td>
            </tr>

        </table>
    </div>
</div>

<div class="bg-w" style="margin-top:15px">
    <b> Employee Inventory   </b>
</div>

<div id="showLog">

</div>
<div id="popup" style="display: none;">
    <!-- Your pop-up content goes here -->
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        function saveSuccess(data) {
            if (data.result == 1) {
                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {
                        location.reload(true);
                    }
                });
            }
            else {
                $.alert.open("error", data.message);
            }
        }
        $(document).ready(function () {
          $(".employeeInformation").hide();
            $('#summernote').summernote({
                // placeholder: 'Hello Bootstrap 4',
                tabsize: 2,
                height: 100
            });
            $('#summernoted').summernote({
                // placeholder: 'Hello Bootstrap 4',
                tabsize: 2,
                height: 100
            });
        });

        $("#txtEmployeeKGId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                       url:"@Url.Action("getallEmployeeId", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                
                $("#ddlREmployeeKGId").val(i.item.val);
                $('#ddlREmployeeKGId').focus();
$.ajax({
    type: "GET",
    url: "@Url.Action("getloglistByEmp", "EmployeeLogs")",
    datatype: "json",
    data: {
        EmpId: i.item.val
    },
    success: function (data) {
        if (data) {


            var tag = '';
            var table = '<table style="border-collapse: collapse; width: 100%; border: 1px solid #000;">';


            table += '<tr>';
            table += '<th style="border: 1px solid #000; padding: 5px;">Inventory Type</th>';
            table += '<th style="border: 1px solid #000; padding: 5px;">Effective Date</th>';
            table += '<th style="border: 1px solid #000; padding: 5px;">Description</th>';
            table += '<th style="border: 1px solid #000; padding: 5px;">Attachments</th>';
            table += '<th style="border: 1px solid #000; padding: 5px;text-align: center;">Action</th>';
            table += '</tr>';
 
            $.each(data.models, function (key, item) {
                
                table += '<tr>';

                table += '<td class="log-type" type="' + item.logtypeName + '" style="border: 2px solid #000; padding: 5px;">' + item.logtypeName + '</td>';
                table += '<td style="border: 2px solid #000; padding: 5px;">' + item.stringlogdate + '</td>';
                table += '<td style="border: 2px solid #000; padding: 5px;">' + item.Description + '</td>';


                var attachmentData = '';
                $.each(item.Attachments2, function (index, attachment) {
                    attachmentData += (index + 1) + '. ';

                    if (attachment.Extension === ".jpg" || attachment.Extension === ".jpeg" || attachment.Extension === ".png") {
                        attachmentData += '<a href="/Upload/DownloadFTP?docid=' + attachment.DocId + '"><img width="40" style="height:70px;width:70px;" src="/Upload/DownloadFTP?docid=' + attachment.DocId + '" alt="' + attachment.Title + '"></a>';
                    } else {
                        attachmentData += '<a target="_blank" class="btn btn-primary btn-sm" title="Download File" href="/Upload/DownloadFTP?docid=' + attachment.DocId + '">' + attachment.Title + ' <i class="glyphicon glyphicon-download"></i></a>';
                    }

                    attachmentData += '<br>';
                    attachmentData += '<br>';
                });

                table += '<td style="border: 2px solid #000; padding: 5px;">' + attachmentData + '</td>';
                table += '<td style="border: 2px solid #000; padding: 5px;text-align: center;color: red;"><i onclick="btnDelete(' + item.Id +')" class="glyphicon glyphicon-trash" aria-hidden="true"></i></td>';
                table += '</tr>';
            });

            table += '</table>';

            $('#showLog').empty();
            $('#showLog').html(table);


        }

        }


});


           $.ajax({
                 type: "GET",
                  url: "@Url.Action("GetEmployeeInformation", "Employee")",
                  datatype: "Json",
               data: { id: i.item.val },
                     success: function (data) {
                         if (data) {
                             var datalist = JSON.parse(data);

                             $(".employeeInformation").show();
                             $("#Name").text(datalist.Name);
                             $("#MobileNo").text(datalist.MobileNo);
                             $("#OfficeEmail").text(datalist.OfficeEmail);
                             $("#Designation").text(datalist.DesignationName);
                             $("#Department").text(datalist.DepartmentName);
                             $("#JoiningDate").text(datalist.JoiningDate);
                             
                      }
                        }
                      });
                },

                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });





        let btnDelete = (Id) => {
            $.alert.open('confirm', 'Are you sure to delete this record?', function (button) {
                if (button == 'yes') {
                    HttpRequest.Ajax("GET", '/EmployeeLogs/DeleteEmployeeLogsById', { "EmpLogsId": Id }, saveSuccess, true);
                } else {

                }
            });
        }

        function openAttachmentInNewWindow(docId) {
            var pdfViewerUrl = "https://docs.google.com/viewer?url=" + encodeURIComponent("/Upload/DownloadFTP?docid=" + docId);
            var newWindow = window.open(pdfViewerUrl, '_blank', 'width=800, height=600');
            newWindow.focus();
        }


    </script>
}