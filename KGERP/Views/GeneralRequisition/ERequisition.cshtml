@model KGERP.ViewModel.EmployeeViewModel
@using KGERP.Utility
@{
    /**/

    ViewBag.Title = "Exit Interview";
}
<style>
    class {
        padding: 70px;
        border: 1px solid #4CAF50;
    }
</style>

<div class="row" style="background-color:rgb(254, 254, 254)">
    <div class="col-md-12">
        <card class="card-header">
            <h3 class="text-center">
                EMPLOYEE EXIT INTERVIEW
            </h3>
        </card>
        <hr style="border-color:forestgreen; padding:0px;margin-top: 08px;margin-bottom: 08px; border-width: 2px;" />
    </div>
    <div class="col-md-12">
        <card class="card">
            <div class="card-header">
                PURPOSE
            </div>
            <div class="card-title">
                The intent of this Exit Interview is to ensure that any employee is informed of his/her rights, benefits,
                and the records are collected and maintained regarding the termination of employment.
            </div>
            <br />
            <div class="card-title">
                POLICY
            </div>
            <div class="card-body">
                It is the policy of Krishibid Group to ensure that any employee whose employment is being terminated, whether voluntary or involuntarily, receives an exit interview. The exit interview shall be conducted by Sharon Williams and/ or Natalia Winfree. The objectives of the exit interview are as follows:
                <ul>
                    <li>To determine and discuss the employee’s reason for resignation, if applicable.</li>
                    <li>To discover and discuss any misunderstandings the employee may have had about his/her job or with his/her manager.</li>
                    <li>To maintain good will and teamwork amongst current and future employees.</li>
                    <li> To review administrative details with the employee such as benefit continuation rights and conversion privileges, if any, final pay, re-employment policy, and employment compensation.</li>
                    <li>To arrange for the return of any company property to the operations team.</li>
                </ul>
            </div>
            <br />
            <div class="card-title">
                PROCEDURE
            </div>
            <div class="card-body">
                <p>
                    Upon an employee’s announcement of his/her intent to resign, the project director or manager shall schedule an exit interview for the employee with Human Resource Department as soon as possible.
                    <br />
                    In the event that a decision has been made to terminate an employee, the employee shall meet with Sharon Williams or Natalia Winfree for an exit interview as soon as possible, or as deemed appropriate.
                    <br />
                    Throughout the duration of the exit interview, Sharon Williams or Natalia Winfree shall seek to meet all objectives listed within the exit interview policy.
                    <br />
                    The departing employee shall complete the following exit interview form as thoroughly as possible.
                    <br />
                    Any information obtained during the exit interview may be disclosed to and/or discussed with the employee manager, the project Director and Partners, as deemed necessary, in order to investigate any allegations made or to inform them of any emerging problems.
                </p>
            </div>
            <br />
            <div class="card-title">
                REMINDERS
            </div>
            <div class="card-body">
                <p>
                    Please remember that your work with Acme Global Company was completed under a non-disclousure agreement. We highly value client confidentiality and all terms of the agreement. Feel free to request a copy for your reference if you do not already have one.
                    <br />
                    <br />
                    All Krishibid Group equipment must be returned to the main office in order to received final payment.
                </p>
            </div>
        </card>
    </div>
</div>


<div class="row">
    <div class="form-group">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.EmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.EmployeeId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.ManagerId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.ManagerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.CompanyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @*@Html.DropDownListFor(model => model.Employee.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm", @data_show_subtext = "true", @data_live_search = "true" })*@
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.DepartmentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.DesignationName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.DesignationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.JoiningDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.StrJoiningDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Service Length", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.Editor("TotalLength", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group" style="display:flex;">
                @Html.LabelFor(model => model.Employee.EndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Employee.EndDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd/mm/yyyy", @autocomplete = "off", @onchange = "checkServiceLength()" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Resign Reason", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Employee.Remarks, 2, 53, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group" style="display:flex;">
                @Html.Label("Have you accepted another position?", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Reason to seek another job?", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Employee.Remarks, 2, 53, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>
</div>