@model  KGERP.Data.CustomModel.TeamLeaveBalanceCustomModel
@{
    ViewBag.Title = "Employee Leave Balance";
    int sl = 0;
}
<style>
    textarea,input {
        max-width: 100%;
    }
</style>

<h3 style="margin-bottom:15px;">Companywise Leave Status</h3>
@using (Html.BeginForm("CompanywiseLeaveBalance", "LeaveApplication", FormMethod.Post, new { @class = "" }))
{
    <div class="row mb-2">
         <div class="col-md-4">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Company</label>
                @Html.EditorFor(x=> x.CompanyName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @data_val = "false" } })
                @Html.HiddenFor(x=> x.CompanyId)
            </div>
        </div>
         <div class="col-md-4">
             <div class="form-group">
                 <label for="message-text" class="col-form-label">Department</label>
                 @Html.EditorFor(x => x.DepartmentName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @data_val = "false" } })
                 @Html.HiddenFor(x => x.DepartmentId)
             </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Selected Year</label>
                @Html.DropDownListFor(model => model.SelectedYear, new SelectList(string.Empty, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @Id = "Year" })

            </div>
        </div>
        <div class="col-md-2" style="padding: 0px 2px 0px 8px;">
            <div class="form-group">
                <label>&nbsp;</label>
                <button type="submit" id="btnSave" class="btn btn-primary btn-block">Show</button>
            </div>
        </div>
    </div>
}
<table class="table table-bordered">
    <thead>
        <tr>
            <th></th>
            <th colspan="2">Employee Information</th>
            <th colspan="2" class="text-center">Casual Leave</th>
            <th colspan="2" class="text-center">Sick Leave</th>
            <th colspan="2" class="text-center">Earn Leave</th>
            <th colspan="2" class="text-center">Marriage Leave</th>
            <th colspan="2" class="text-center">Maternity Leave</th>
            <th colspan="2" class="text-center">Hajj Leave (By Management)</th>
            <th colspan="2" class="text-center">Leave Without Pay</th>
        </tr>
        <tr>
            <th>SL.</th>
            <th>Employee ID</th>
            <th>Name</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
            <th>Availed</th>
            <th>Due</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.DataList != null && Model.DataList.Count() > 0)
        {
            foreach (var item in Model.DataList)
            {
                <tr>
                    <th>@(++sl)</th>
                    <td>
                        <a href="~/LeaveApplication/EmployeeLeaveBalance?employeeId=@item.EmployeeId" target="_blank" title="detail history"> <b>@item.EmployeeId</b> </a>
                    </td>
                    <td><b>@item.Name</b></td>
                    <td style="color:red"><b>@item.CLAvailed</b></td>
                    <td style="color:green"><b>@item.CLDue</b></td>
                    <td style="color:red"><b>@item.SLAvailed</b></td>
                    <td style="color:green"><b>@item.SLDue</b></td>
                    <td style="color:red"><b>@item.ELAvailed</b></td>
                    <td style="color:green"><b>@item.ELDue</b></td>
                    <td style="color:red"><b>@item.MrgAvailed</b></td>
                    <td style="color:green"><b>@item.MrgDue</b></td>
                    <td style="color:red"><b>@item.MtrAvailed</b></td>
                    <td style="color:green"><b>@item.MtrDue</b></td>
                    <td style="color:red"><b>@item.HjAvailed</b></td>
                    <td style="color:green"><b>@item.HjDue</b></td>
                    <td style="color:red"><b>@item.LwAvailed</b></td>
                    <td style="color:green"><b>@item.LwDue</b></td>
                </tr>
            }
        }
    </tbody>

</table>


@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")
@section scripts {
    <script type="text/javascript">

        $(() => {
            $("#CompanyName").on("change", function () {
                var companyName = $(this).val(); // Get the value of the CompanyName input field
                // Check if companyName is empty or null
                if (!companyName) {
                    // If it is empty or null, set the company ID to zero
                    $("#CompanyId").val(0);
                }                
            });
            $("#DepartmentName").on("change", function () {
                var departmentName = $(this).val();
                // Check if companyName is empty or null
                if (!departmentName) {
                    // If it is empty or null, set the company ID to zero
                    $("#DepartmentId").val(0);
                }   
            });
            LoadFiscalYear(2, 5);
            $("#CompanyName").autocomplete({              
                source: function (request, response) {
                    $("#CompanyId").val("0");
                    $.ajax({
                        type: "GET",
                        url: "/AutoComplete/GetAllCompanyAutoComplete",
                        dataType: "json",
                        data: { prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Name, value: item.Name, id: item.Id };
                            }));
                        },
                        error: function (e) {
                            // Handle error, if needed
                        }
                    });
                },
                minLength: 1,
                delay: 500,
                autoFocus: true,
                select: function (event, ui) {
                    $("#CompanyId").val(ui.item.id);
                }
            });


            $("#DepartmentName").autocomplete({
                source: function (request, response) {
                    $("#DepartmentId").val("0");
                    $.ajax({
                        type: "GET",
                        url: "/AutoComplete/GetAllDepartmentAutoComplete",
                        dataType: "json",
                        data: { prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Name, value: item.Name, id: item.Id };
                            }));
                        },
                        error: function (e) {
                            // Handle error, if needed
                        }
                    });
                },
                minLength: 1,
                delay: 500,
                autoFocus: true,
                select: function (event, ui) {
                    $("#DepartmentId").val(ui.item.id);
                }
            });

        })


    </script>
}
