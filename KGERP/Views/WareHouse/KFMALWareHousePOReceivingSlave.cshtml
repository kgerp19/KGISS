
@model KGERP.Services.WareHouse.VMWareHousePOReceivingSlave
@using KGERP.Utility

@{
    ViewData["Title"] = "Store In";
    Layout = "~/Views/Shared/_Layout.cshtml";

    decimal totalValue = 0;
    decimal totalValueInBdt = 0;
    decimal? totalLandedValue = 0;
    //decimal? totalAmendmentValue = 0;

    if (Model.SupplierPaymentMethodEnumFK == (int)VendorsPaymentMethodEnum.LC)
    {
        totalValueInBdt = 0;

        // totalAmendmentValue = Model.LCAmendmentList.Select(x => x.AmendmentValue).DefaultIfEmpty(0).Sum();
        totalLandedValue = Math.Round(((Model.InsuranceValue ?? 0)), 2) +
                           Math.Round(((Model.CommissionValue ?? 0)), 2) +
                           Math.Round(((Model.BankCharge ?? 0)), 2) +
                           Math.Round(((Model.OtherCharge ?? 0)), 2) +
                           Math.Round(((Model.FreightCharges ?? 0)), 2) +

                           Math.Round((Model.FinancialCharge ?? 0), 2) +
                           Math.Round(Model.TruckFare, 2) +
                           Math.Round(Model.LabourBill, 2) +
                           Math.Round((Model.CandFBill ?? 0), 2) +
                           Math.Round((Model.ValueAdjustment ?? 0), 2) +
                           Math.Round((Model.WareHouseRentBill ?? 0), 2) +
                           Math.Round((Model.TotalLCAmendment), 2)
                           ;
        int d = 0;
    }


}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.MaterialReceiveId > 0)
        {
            <span>
                Receiving History of Challan No
                <a target="_blank" href="~/WareHouse/WareHousePOReceivingSlaveReport?companyId=@Model.CompanyFK&materialReceiveId=@Model.MaterialReceiveId">@Model.ChallanCID</a>
                @if (Model.CompanyFK == 24)
                {
                    <a target="_blank" href="~/Report/GCCLPurchseInvoiceReport?companyId=@Model.CompanyFK&materialReceiveId=@Model.MaterialReceiveId&reportName=GCCLPurchaseInvoiceReports">Purchase Invoice</a>
                }
            </span>
        }
        else
        {
            <span> Purchase Invoice</span>
        }
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li><a href="~/WareHouse/WareHousePOReceivingSlave">Store In</a></li>
        <li class="active">Store in Information</li>
    </ol>
</section>
@using (Html.BeginForm("KFMALWareHousePOReceivingSlave", "WareHouse", FormMethod.Post, new { id = "wareHousePOReceivingSlaveFromID", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">
                    <div class="box-header">

                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.MaterialReceiveId > 0)
                        {
                            @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })


                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                @if (Model.SupplierPaymentMethodEnumFK == (int)VendorsPaymentMethodEnum.LC)
                                {
                                    <table class="table">

                                        <tr>
                                            <td><b>Challan</b></td>
                                            <td>:</td>
                                            <td><b>@Model.ChallanCID</b></td>

                                            <td width="18%"><b>Challan Date</b></td>
                                            <td width="5%">:</td>
                                            <td width="27%">@Model.ChallanDate.Value.ToString("dd/MM/yyyy")</td>

                                        </tr>
                                        <tr>
                                            <td><b>L/C NO</b></td>
                                            <td>:</td>
                                            <td><b>@Model.LcNo</b></td>
                                            <td><b>L/C Date</b></td>
                                            <td>:</td>
                                            <td><b>@Model.lcDate.ToString("dd/MM/yyyy")</b></td>
                                        </tr>
                                        <tr>
                                            <td><b>PI No</b></td>
                                            <td>:</td>
                                            <td>@Model.PiNO</td>
                                            <td><b>PI Date</b></td>
                                            <td>:</td>
                                            <td>@Model.PIDate.Value.ToString("dd/MM/yyyy")</td>

                                        </tr>
                                        <tr>
                                            <td><b>PO No</b></td>
                                            <td>:</td>
                                            <td><a href="~/WareHouse/WareHousePOSlaveReceivingDetailsByPO/@Model.Procurement_PurchaseOrderFk" target="_blank" title="See All Receiving History of This PO">@Model.POCID</a> </td>

                                            <td><b>PO Date</b></td>
                                            <td>:</td>
                                            <td>@Model.PODate.Value.ToString("dd/MM/yyyy")</td>

                                        </tr>
                                        <tr>
                                            <td><b>L/C Value</b></td>
                                            <td>:</td>
                                            <td>@Model.LCValue</td>
                                            <td><b>L/C Value (BDT)</b></td>
                                            <td>:</td>
                                            <td>@Model.LCValueInBDT</td>
                                        </tr>
                                        <tr>
                                            <td><b>Currency Rate</b></td>
                                            <td>:</td>
                                            <td>@Model.CurrenceyRate</td>
                                            <td><b>Currency Name</b></td>
                                            <td>:</td>
                                            <td>@Model.CurancYName</td>

                                        </tr>

                                        <tr>
                                            <td><b>Cash Margin (%)</b></td>
                                            <td>:</td>
                                            <td>@Model.CashMarginPercent</td>
                                            <td><b>Cash Margin</b></td>
                                            <td>:</td>
                                            <td>@Model.CashMarginAmount</td>

                                        </tr>
                                        <tr>
                                            <td><b>Freight Charges</b></td>
                                            <td>:</td>
                                            <td>@Model.FreightCharges</td>
                                            <td><b>Bank Charge</b></td>
                                            <td>:</td>
                                            <td>@Model.BankCharge</td>

                                        </tr>
                                        <tr>
                                            <td><b>Commission</b></td>
                                            <td>:</td>
                                            <td>@Model.CommissionValue</td>
                                            <td><b>Insurance</b></td>
                                            <td>:</td>
                                            <td>@Model.InsuranceValue</td>

                                        </tr>
                                        <tr>
                                            <td><b>Other Charge</b></td>
                                            <td>:</td>
                                            <td>@Model.OtherCharge</td>
                                            <td><b>Supplier</b></td>
                                            <td>:</td>
                                            <td>@Model.SupplierName</td>

                                        </tr>
                                        <tr>
                                            <td><b>Load Unload Cost</b></td>
                                            <td>:</td>
                                            <td>
                                                @Model.LabourBill

                                            </td>
                                            <td><b>Transportation Cost</b></td>
                                            <td>:</td>
                                            <td>
                                                @Model.TruckFare
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><b>Ware House Rent</b></td>
                                            <td>:</td>
                                            <td>@Model.WareHouseRentBill BDT</td>

                                            <td><b>C&F Bill</b></td>
                                            <td>:</td>
                                            <td>
                                                @Model.CandFBill
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><b>Financial Charge</b></td>
                                            <td>:</td>
                                            <td>@Model.FinancialCharge</td>

                                            <td><b>Value Adjustment</b></td>
                                            <td>:</td>
                                            <td>
                                                @Model.ValueAdjustment
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><b>Stock</b></td>
                                            <td>:</td>
                                            <td>@Model.stockname</td>
                                            <td><b>Received By</b></td>
                                            <td>:</td>
                                            <td>@Model.ReceiverName</td>
                                        </tr>
                                        <tr>
                                            <td colspan="6">
                                                <table class="table">
                                                    <tr>
                                                        <th>Remarks</th>
                                                        <th>Amendment Date</th>

                                                        <th>Amendment Value</th>
                                                    </tr>
                                                    @foreach (var item in Model.LCAmendmentList)
                                                    {

                                                        <tr>
                                                            <th>@item.Remarks</th>
                                                            <th>@item.AmendmentDate.ToShortDateString()</th>

                                                            <th>@item.AmendmentValue</th>
                                                        </tr>
                                                    }
                                                    <tr>
                                                        <th colspan="2">
                                                            Total Amendment Value
                                                        </th>
                                                        <th>
                                                            @Model.TotalLCAmendment
                                                        </th>
                                                    </tr>

                                                </table>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><b>Delivery Address</b></td>
                                            <td>:</td>
                                            <td>@Model.DeliveryAddress</td>
                                            <td><b>Total Landed Value</b></td>
                                            <td>:</td>
                                            <th>
                                                @(totalLandedValue)
                                            </th>

                                        </tr>


                                    </table>
                                }
                                else
                                {
                                    <div class="col-md-10">
                                        <table class="table">
                                            <tr>
                                                <td><b>Challan</b></td>
                                                <td>:</td>
                                                <td colspan="4"><b>@Model.ChallanCID</b></td>

                                            </tr>
                                            <tr>
                                                <td width="18%"><b>Supplier Challan</b></td>
                                                <td width="5%">:</td>
                                                <td width="27%">@Model.Challan</td>

                                                <td width="18%"><b>Challan Date</b></td>
                                                <td width="5%">:</td>
                                                <td width="27%">@Model.ChallanDate</td>

                                            </tr>
                                            <tr>
                                                <td><b>Purchase Order</b></td>
                                                <td>:</td>
                                                @*<td><a href="#" title="See All Receiving History of This PO">@Model.POCID</a> </td>*@
                                                <td><a href="~/WareHouse/WareHousePOSlaveReceivingDetailsByPO/@Model.Procurement_PurchaseOrderFk" target="_blank" title="See All Receiving History of This PO">@Model.POCID</a> </td>

                                                <td><b>PO Date</b></td>
                                                <td>:</td>
                                                <td>@Model.PODate.Value.ToString("dd/MM/yyyy")</td>
                                            </tr>
                                            <tr>
                                                <td><b>Supplier Name</b></td>
                                                <td>:</td>
                                                <td>@Model.SupplierName</td>

                                                <td><b>Delivery Address</b></td>
                                                <td>:</td>
                                                <td>@Model.DeliveryAddress</td>
                                            </tr>
                                        </table>
                                    </div>
                                }

                            </div>
                            <div class="col-md-1"> </div>

                            if (Model.MaterialReceiveId > 0)
                            {
                                <div class="box-header" style="clear:both">
                                    <h4><b>Received Item:</b> </h4>
                                </div>
                                <div class="table-responsive col-md-12 text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            @if (Model.SupplierPaymentMethodEnumFK == (int)VendorsPaymentMethodEnum.LC)
                                            {
                                                <tr>
                                                    <th>SL</th>
                                                    <th class="center">Item Name </th>
                                                    <th class="center">HS Code </th>
                                                    <th class="center">PI Quantity</th>
                                                    <th class="center">Received Quantity</th>
                                                    <th>Unit Price</th>
                                                    <th>Unit Price in BDT</th>
                                                    <th class="center">Total Price</th>
                                                    <th class="center">Price In BDT</th>
                                                    <th>Total Landed Value</th>
                                                    <th>Total COGS</th>
                                                    <th>COGS Per Unit</th>
                                                    <th>Sale Price</th>
                                                    <th>GP%</th>
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr>
                                                    <th>SL</th>
                                                    <th class="center">Item Name </th>
                                                    <th class="center">PO Quantity</th>
                                                    <th class="center">Received Quantity</th>
                                                    <th class="center">Total Received</th>
                                                    <th>Return Quantity</th>
                                                    <th class="center">Remaining Quantity</th>
                                                </tr>
                                            }

                                        </thead>
                                        @{
                                            int sl = 0;
                                        }
                                        <tbody>
                                            @if (Model.SupplierPaymentMethodEnumFK == (int)VendorsPaymentMethodEnum.LC)
                                            {
                                                foreach (var item in Model.DataListSlave)
                                                {
                                                    totalValue += Math.Round(item.ReceivedQuantity * item.PurchasingPrice, 2);
                                                    totalValueInBdt += Math.Round((item.ReceivedQuantity * item.PurchasingPrice) * Model.CurrenceyRate, 2);

                                                    <tr>
                                                        <td>@(++sl)</td>
                                                        <td>@item.ProductSubCategory @item.ProductName</td>
                                                        <td>@item.HSCode</td>
                                                        <td>@item.POQuantity</td>
                                                        <th>@item.ReceivedQuantity</th>
                                                        @*<td>@item.PriviousReceivedQuantity</td>*@
                                                        <td>@item.PurchasingPrice @Model.CurancYName</td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round(item.PurchasingPrice * Model.CurrenceyRate,2))) BDT</td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round(item.ReceivedQuantity * item.PurchasingPrice,2))) @Model.CurancYName</td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round(item.SubTotalInBDT,2)) + " BDT")  </td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round(((totalLandedValue??0) * Math.Round(item.SubTotalInBDT,2)) / Math.Round(Model.TotalBDTPrice,2),2)) )</td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round((((totalLandedValue??0) * Math.Round(item.SubTotalInBDT,2)) / Math.Round(Model.TotalBDTPrice,2)) + Math.Round(item.SubTotalInBDT,2),2)) )</td>
                                                        <td>@(String.Format("{00:00.00}", Math.Round(((((totalLandedValue??0) * Math.Round(item.SubTotalInBDT,2)) / Math.Round(Model.TotalBDTPrice,2)) + Math.Round(item.SubTotalInBDT,2))  / item.ReceivedQuantity,2)))</td>

                                                        <td>@String.Format("{00:00.00}", item.SalePrice)</td>

                                                        <td>
                                                            @(String.Format("{00:00.00}",
                                                    (((item.SalePrice  -
                                                    ((((totalLandedValue * item.SubTotalInBDT) / Model.TotalBDTPrice) + item.SubTotalInBDT) / item.ReceivedQuantity)) /
                                                    item.SalePrice) * 100))) %

                                                        </td>


                                                    </tr>
                                                }

                                            }
                                            else
                                            {
                                                foreach (var item in Model.DataListSlave)
                                                {
                                                    <tr>
                                                        <td>@(++sl)</td>
                                                        <td>@item.ProductSubCategory @item.ProductName</td>
                                                        <td>@item.POQuantity</td>
                                                        <th>@item.ReceivedQuantity</th>
                                                        <td>@item.PriviousReceivedQuantity</td>
                                                        <td>@item.ReturnQuantity</td>
                                                        <td>@item.RemainingQuantity</td>
                                                    </tr>
                                                }
                                            }

                                        </tbody>
                                        @if (Model.SupplierPaymentMethodEnumFK == (int)VendorsPaymentMethodEnum.LC)
                                        {
                                            <tfoot>
                                                <tr>
                                                    <td></td>
                                                    <th colspan="6">Total Invoice Value</th>

                                                    <th>@String.Format("{00:00.00}", Math.Round(totalValue, 2)) </th>
                                                    @if (Model.CurancYName != "BDT")
                                                    {
                                                        <th>@(String.Format("{00:00.00}", Math.Round(totalValueInBdt,2))) BDT </th>

                                                    }
                                                </tr>
                                                <tr>
                                                    <td></td>
                                                    <th colspan="7">Total Cost of Goods Sold (COGS)</th>


                                                    @if (Model.CurancYName != "BDT")
                                                    {
                                                        <th>@(String.Format("{00:00.00}", Math.Round(totalValueInBdt + (totalLandedValue??0),2))) BDT</th>

                                                    }
                                                </tr>
                                            </tfoot>
                                        }
                                        else
                                        {

                                        }

                                    </table>
                                </div>
                            }

                        }
                        else
                        {


                            <div class="row">
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->
                                    <div class="box-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Challan No</label>
                                                    @Html.TextBoxFor(model => model.Challan, new { @class = "form-control ", @placeholder = "Challan No", @required = "required", data_bv_message = "Challan no is required.", })
                                                    @Html.ValidationMessageFor(model => model.Challan, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Challan Date</label>
                                                    <input name="ChallanDate" asp-for="ChallanDate" type="text" value="@DateTime.Now.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtDate" placeholder="Challan Date" autocomplete="on">
                                                    @Html.ValidationMessageFor(model => model.ChallanDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Warehouse:</label>
                                                    @Html.DropDownListFor(model => model.StockInfoId, Model.StockInfoList as SelectList, "==Warehouse==", new { id = "ddlStockInfoId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.StockInfoId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Receive By:</label>
                                                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @name = "receiverName", @id = "receiverName" } })
                                                    @Html.HiddenFor(x => x.ReceivedBy, new { @id = "receivedBy", @name = "receivedBy" })
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Transport Cost</label>
                                                    @Html.EditorFor(model => model.TruckFare, new { htmlAttributes = new { @class = "form-control", @name = "Transport", @id = "Transport" } })

                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Load Unload Cost</label>
                                                    @Html.EditorFor(model => model.LabourBill, new { htmlAttributes = new { @class = "form-control", @name = "Unload", @id = "Unload" } })

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> C&F Bill</label>
                                                    @Html.EditorFor(model => model.CandFBill, new { htmlAttributes = new { @class = "form-control", @name = "C&F", @id = "C&F" } })

                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Ware House Rent</label>
                                                    @Html.EditorFor(model => model.WareHouseRentBill, new { htmlAttributes = new { @class = "form-control", @name = "Rent", @id = "Rent" } })

                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Financial Charge</label>
                                                    @Html.EditorFor(model => model.FinancialCharge, new { htmlAttributes = new { @class = "form-control", @name = "FinancialCharge", @id = "FinancialCharge" } })

                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Value Adjustment</label>
                                                    @Html.EditorFor(model => model.ValueAdjustment, new { htmlAttributes = new { @class = "form-control", @name = "ValueAdjustment", @id = "ValueAdjustment" } })

                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- /.box-body -->
                                    <!-- /.box -->
                                </div>
                                <!--/.col (left) -->
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->

                                    <div class="box-body">
                                        <div class="form-group" style="padding:0px">
                                            <label>Supplier</label>
                                            @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @id = "txtSupplier" } })

                                            @Html.HiddenFor(model => model.Common_SupplierFK, new { id = "ddlCommon_SupplierFK" })
                                            @Html.HiddenFor(model => model.CurrenceyRate, new { id = "txtCurrenceyRate" })
                                            @Html.HiddenFor(model => model.LcID, new { id = "txtLcID" })
                                            @Html.ValidationMessageFor(model => model.Common_SupplierFK, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="form-group" style="padding:0px">
                                            <label>Purchase Order Number</label>
                                            @Html.DropDownListFor(model => model.Procurement_PurchaseOrderFk, Model.PoList as SelectList, new { id = "ddlPurchaseOrderFk", @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })

                                            @*@Html.EditorFor(model => model.POCID, new { htmlAttributes = new { @class = "form-control", @name = "Requisition CID", @id = "txtPOCID" } })

                                                @Html.HiddenFor(model => model.Procurement_PurchaseOrderFk, new { id = "ddlProcurementPurchaseOrderFk" })
                                                @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })*@

                                        </div>

                                        <table id="poDetailsTable" class="table">
                                            <tr>
                                                <td id="sup">Supplier</td>
                                                <td>
                                                    @Html.HiddenFor(x => x.Common_SupplierFK, new { id = "hiddenCommonSupplierFK" })
                                                    <span id="txtSupplierNaame"></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td id="PodT">
                                                    PI Date
                                                </td>
                                                <td><span id="txtApprovedDate"></span></td>
                                            </tr>
                                            <tr>
                                                <td id="delAdd">
                                                    Delivery Address
                                                </td>
                                                <td><span id="txtDeliveryAddress"></span></td>
                                            </tr>
                                            <tr>
                                                <td id="DelDt">
                                                    Delivery Date
                                                </td>
                                                <td><span id="txtDeliveryDate"></span></td>
                                            </tr>

                                        </table>
                                    </div>

                                </div>
                                <!-- /.box-body -->



                                <br />
                                <div>
                                    <div class="card-body px-2 py-2 " id="tbl" style="min-height: 100px;display:none;">
                                        <table class="table table-bordered " id="EduInfo">
                                            <thead>
                                                <tr class="text-center">
                                                    <th>Serial</th>
                                                    <th>Item</th>
                                                    <th>PI Quantity</th>
                                                    <th>Privious Received</th>
                                                    <th>Return</th>
                                                    <th>Remaining</th>
                                                    <th>Receive Goods</th>
                                                    <th>Damage</th>
                                                    <th>Action</th>

                                                </tr>
                                            </thead>
                                            <tbody id="Installment" class="text-right">
                                            </tbody>

                                        </table>
                                    </div>
                                    <div class="w3-container w3-pale-blue w3-leftbar w3-border-blue" id="altItm" style="display: none; border: 1px solid #00FFFF; background-color: #00FFFF; padding: 5px; text-align: center; font-style: oblique; " role="alert">
                                        There Is No Item
                                    </div>

                                </div>

                                <div class="col-md-12">
                                    <div class="box">

                                        <div class="box-footer">
                                            <div id="procurementPurchaseOrderSlaveData"></div>
                                        </div>
                                    </div>

                                </div>



                            </div>

                        }

                        @if (Model.MaterialReceiveId > 0)
                        {
                            <div class="box-footer">
                                <div class="row">
                                    <div class="col-md-2">

                                    </div>
                                    <div class="col-md-5">
                                        <a target="_blank" class="btn btn-warning btn-block" style="width:100%" href="~/Report/GCCLProductionReport?companyId=@Model.CompanyFK&prodReferenceId=@Model.MaterialReceiveId&reportName=GCCLProductionReports">Challan Report of @Model.ChallanCID</a>

                                    </div>
                                    <div class="col-md-5">
                                        @if (!Model.IsSubmitted)
                                        {
                                            <a onclick="makeMaterialReceiveSubmitable(@Model.MaterialReceiveId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitProdReferenceModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                                        }
                                        else
                                        {
                                            <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                                        }
                                        @*<button type="submit" id="sbmt" style="width:100%">Y</button>*@
                                        @*<button type="button"  id="sbmt" style="width:100%" >Y</button>*@

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Challan Item</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "challanSlaveId" })

                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btncloseandreset" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="btnsave" class="btn btn-primary">&nbsp;Delete</button>&nbsp;

                </div>
            </div>
        </div>
    </div>
}



@using (Html.BeginForm("KFMALWareHousePOReceivingSlave", "WareHouse", FormMethod.Post, new { id = "submitGCCLPOReceivingSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProdReferenceModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Submit</b></h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                    @Html.HiddenFor(model => model.MaterialReceiveId, new { id = "submitMaterialReceiveId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })
                    @Html.HiddenFor(model => model.SupplierPaymentMethodEnumFK, new { id = "submitSupplierPaymentMethodEnumFK" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Submit this Production?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>

}

@section scripts {

    <script type="text/javascript">
        function makeMaterialReceiveSubmitable(rowId) {
            $("#submitMaterialReceiveId").val(rowId)
            $('#submitCompanyFK').val("@Model.CompanyFK");
            $('#submitActionId').val(10);
            $('#submitSupplierPaymentMethodEnumFK').val(@Model.SupplierPaymentMethodEnumFK);
        }
        var z = 1;
        var pid = 0;
        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
            $("#chkIsDefineBin input:checkbox").change(function () {
                var ischecked = $(this).is(':checked');
                if (ischecked) {
                    alert('uncheckd ' + $(this).val());
                }
                else {
                    alert('uncheckd ' + $(this).val());

                }


            });




            $('#txtSupplier').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("AutoCompleteSupplier", "Configuration")",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {

                        },
                        failure: function (response) {

                        },

                    });
                },
                select: function (e, i) {

                    var supplierFk = i.item.val;
                    var test = $('#ddlCommon_SupplierFK').val(supplierFk);
                    console.log(test);
                    pid = supplierFk;




                },
                minLength: 1,
                cache : true
            });



            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
        function DateCustom(orderDate) {
            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }

            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#challanSlaveId').val(id);
                $('#ActionId').val(3);

            }
        }
        function resetForm() {
            $('#deliveryChallanSlaveFormId')[0].reset();
            $('#ActionId').val(1);
        }


       /* --ani--*/
            $("#txtSupplier").on('change', function () {
           $.ajax({
               url: "@Url.Action("GetPurchaseOrder", "WareHouse")",
               data: { id: pid },
                        dataType: "json",
                        Method: "GET",
               success: function (data1) {
                   console.log(data1);

                   var select = $("#ddlPurchaseOrderFk");
                   select.children().remove();
                   select.append($("<option>").val('').text('Select'));
                   $(data1).each(function (index, item) {
                       select.append($("<option data-toggle='tooltip' title='" + item.PurchaseOrderId + "'>").val(item.PurchaseOrderId).text(item.PurchaseOrderNo));
                   });
                   return false;

                        },
               error: function (data1) {

                        },
               failure: function (data1) {

                        },

                    });
            });
        $("#ddlPurchaseOrderFk").change(function () {
            $('#EduInfo tbody').empty();
            $('#PodT').empty();
            $('#delAdd').empty();
            $('#sup').empty();
            var PoId = $("#ddlPurchaseOrderFk").find(":selected").val();
           $.ajax({
               url: "@Url.Action("KFMALWareHousePODetails", "WareHouse")",
               data: { id: PoId },
                        dataType: "json",
                        Method: "GET",
               success: function (data) {

                   //console.log(data);
                   $("#txtCurrenceyRate").val(data.CurrenceyRate)
                   $("#txtLcID").val(data.LcID)

                   $("#sup").append(data.SupplierName);
                   /*      $("#PodT").append(d);*/
                   var apprDate = DateCustom(data.PODate);
                   $('#PodT').text(apprDate);
                   $("#delAdd").append(data.DeliveryAddress);

                        },
               error: function (data1) {

                        },
               failure: function (data1) {

                        },
           });
                       $.ajax({
                    type: "POST",
                    url: "@Url.Action("ProcurementPurchaseOrderSlaveData", "WareHouse")",
                    datatype: "Json",
                           data: { poId: PoId },
                     success: function (data) {
                         console.log(data);
                         $("#procurementPurchaseOrderSlaveData").html(data);
                    }
                });
        });




        function DateCustom(orderDate) {
            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }
          $(function () {
            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });



    </script>
}