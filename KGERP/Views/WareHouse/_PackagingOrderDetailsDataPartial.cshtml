@model KGERP.Services.WareHouse.VMOrderDeliverDetailPartial
@using KG.Core.Services



<div class="row">
    <div class="col-lg-12">
        @{
            int styleScheduleCount = Model.DataToList.Count();
            if (styleScheduleCount > 0)
            {
                <div class="table-responsive">
                    <table id="datatableid" class="table table-bordered text-nowrap">
                        <thead>
                            <tr class="bg-success">
                                <th>SL</th>

                                <th>Item</th>

                                <th class="center">
                                    Order Quantity
                                </th>
                                <td>
                                    Unit Price
                                </td>
                                <td>
                                    Total Price
                                </td>
                                <th class="center">
                                    Delivered Quantity
                                </th>
                                <th class="center">
                                    Deliver Quantity
                                </th>

                                <th class="center">
                                    Gross Weight
                                </th>
                                <th class="center">
                                    No of Reels
                                </th>
                                <th class="center">
                                    No of Bags
                                </th>


                                <th class="center">
                                    VAT
                                </th>
                                <th class="center">
                                    TDS
                                </th>
                                <th class="center">
                                    Current Stock
                                </th>

                                <th><input type="checkbox" id="select_all" />&nbsp;Check All</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.DataToList.Count(); i++)
                            {
                                <tr>
                                    <th>
                                        @Html.HiddenFor(model => model.DataToList[i].OrderDetailId)
                                        @Html.HiddenFor(model => model.DataToList[i].ProductId)
                                        @Html.HiddenFor(model => model.DataToList[i].OrderQty)

                                        @Html.HiddenFor(model => model.DataToList[i].UnitPrice)
                                        @Html.HiddenFor(model => model.DataToList[i].VATPercent)
                                        @Html.HiddenFor(model => model.DataToList[i].IsVATInclude)

                                        @Html.HiddenFor(model => model.DataToList[i].TDSPercent)
                                        @Html.HiddenFor(model => model.DataToList[i].UnitPriceDisplay)


                                        @(i + 1)
                                    </th>

                                    <td>
                                        @Html.DisplayFor(model => model.DataToList[i].ProductName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.DataToList[i].OrderQty) @Html.DisplayFor(model => model.DataToList[i].UnitName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.DataToList[i].UnitPriceDisplay)
                                    </td>
                                    <td>
                                        @(Model.DataToList[i].OrderQty * Model.DataToList[i].UnitPriceDisplay)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.DataToList[i].DeliveredQty) @Html.DisplayFor(model => model.DataToList[i].UnitName)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.DataToList[i].DeliverQty, new { Value = Model.DataToList[i].OrderQty - Model.DataToList[i].DeliveredQty, @class = "form-control" })

                                    </td>

                                    <td>
                                        @Html.TextBoxFor(model => model.DataToList[i].GrossWeight, new { @class = "form-control" })

                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.DataToList[i].NoofReels, new { @class = "form-control" })

                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.DataToList[i].NoofBags, new { @class = "form-control" })

                                    </td>
                                    <td>
                                        @(Math.Round( Model.DataToList[i].VATPercent))%

                                    </td>
                                    <td>
                                        @(Math.Round( Model.DataToList[i].TDSPercent))%

                                    </td>
                                    <td>
                                        @if (Model.DataToList[i].CurrentStock < Convert.ToDecimal(Model.DataToList[i].DeliverQty))
                                        {
                                            <span style="color:red">
                                                @Html.DisplayFor(model => model.DataToList[i].CurrentStock)
                                            </span> }
                                        else
                                        {
                                            <span>
                                                @Html.DisplayFor(model => model.DataToList[i].CurrentStock)
                                            </span>
                                        }
                                    </td>

                                    <td>
                                        @Html.CheckBoxFor(model => model.DataToList[i].Flag, new { @class = "checkbox checkToInstruction" })

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Remarks</label>
                            @Html.TextAreaFor(model => model.Remarks, new { placeholder = "Remarks", @class = "form-control", rows = 2 })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">

                    </div>
                    <div class="col-lg-4 col-md-4">
                        <button type="submit" id="btnsave" class="btn btn-primary btn-block"><i class='fa fa-plus'></i>Deliver</button>
                    </div>

                </div>

            }
            else
            {
                <div class="col-md-12">
                    <div class="box box-success box-solid">

                        <!-- /.box-header -->
                        <div class="box-body">

                            <div class="form-group" style="text-align:center;">
                                <h3>
                                    There are no Item yet.
                                </h3>
                            </div>



                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
            }
        }

    </div>
</div>


<script>
    function toggleSaveButton() {
        debugger
        if ($('.checkToInstruction:checked').length > 0) {
            $('#btnsave').show(); // Show the button if at least one checkbox is checked
        } else {
            $('#btnsave').hide(); // Hide the button if no checkboxes are checked
        }
    }
    $(document).ready(function () {

        $("#select_all").change(function () {
            $(".checkToInstruction").prop('checked', $(this).prop("checked"));
            toggleSaveButton();
        });


        $('.checkToInstruction').change(function () {
            debugger
            if (false == $(this).prop("checked")) {
                $("#select_all").prop('checked', false);
            }

            if ($('.checkToDownload:checked').length == $('.checkToDownload').length) {
                $("#select_all").prop('checked', false);
            }
            toggleSaveButton();
        });

    });


</script>