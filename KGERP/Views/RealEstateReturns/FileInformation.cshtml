@model KGERP.Service.Implementation.RealEstateReturnSystemService.RealEstateReturnSystemVM
@using KGERP.Utility
@{
    ViewBag.Title = "FileInformation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /*Attachment table Css*/
    .alert-warning, .label-warning, .modal-warning .modal-body {
        background-color: #f5c5a926 !important;
        color: #000 !important;
    }

    .alert .close {
        color: #fff;
        opacity: 2.2;
    }

    .approval {
        padding: 10px 10px;
        background: #87bf87;
        border: 1px solid #87bf87;
        /* border-radius: 30px;*/
    }

    .approval-no {
        padding: 10px 10px;
        background: #a8b1a833;
        border: 1px solid #a8b1a833;
        border-radius: 30px;
    }

    .approval-no-re {
        padding: 10px 10px;
        background: #891919;
        border: 1px solid red;
        border-radius: 30px;
        color: #fff;
    }

    button.close {
        -webkit-appearance: none;
        padding: 0;
        cursor: pointer;
        background: #f10f0f8f;
        border: 0;
    }

    .table-wrapper {
        max-width: 100%;
        margin: auto;
        background: #fff;
        padding: 20px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

    .table-title {
        padding-bottom: 10px;
        margin: 0 0 10px;
    }

        .table-title h2 {
            margin: 6px 0 0;
            font-size: 22px;
        }

        .table-title .add-new {
            float: right;
            height: 30px;
            font-weight: bold;
            font-size: 12px;
            text-shadow: none;
            min-width: 100px;
            border-radius: 50px;
            line-height: 13px;
        }

            .table-title .add-new i {
                margin-right: 4px;
            }

    /*   table.table {
        table-layout: fixed;
    }*/

    .attachment table.table tr th, table.table tr td {
        border-color: #e9e9e9;
    }

    .attachment table.table th i {
        font-size: 13px;
        margin: 0 5px;
        cursor: pointer;
    }

    .attachment table.table th:last-child {
        width: 100px;
    }

    .attachment table.table td a {
        cursor: pointer;
        display: inline-block;
        margin: 0 5px;
        min-width: 24px;
    }

        .attachment table.table td a.add {
            color: #27C46B;
        }

        .attachment table.table td a.edit {
            color: #FFC107;
        }

        .attachment table.table td a.delete {
            color: #E34724;
        }

    .attachment table.table td i {
        font-size: 19px;
    }

    .attachment table.table td a.add i {
        font-size: 24px;
        margin-right: -1px;
        position: relative;
        top: 3px;
    }

    .attachment table.table .form-control {
        height: 32px;
        line-height: 32px;
        box-shadow: none;
        border-radius: 2px;
    }

        .attachment table.table .form-control.error {
            border-color: #f50000;
        }

    .attachment table.table td .add {
        display: none;
    }

    /*Attachment table Css*/

    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }

    .modal-header .close {
        margin-top: -18px;
    }

    .hiddenRow {
        padding: 0 !important;
    }

    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        /* border-top: 1px solid #f4f4f4; */
        border-top: 1px solid #dbdbdb !important;
    }

    .accordion .hj:after {
        content: "+";
        float: right;
    }

    .accordion .card-header.collapsed:after {
        /* symbol for "collapsed" panels */
        content: "-";
    }

    .preview {
        height: 100px;
    }

    .cloud-uplode-btn {
        background: #009688;
        padding: 16px 22px;
        font-size: 20px;
        border-radius: 50px;
        cursor: pointer;
        transition: 0.3s ease-in-out;
        color: #fff;
        border: 1px solid #009688;
    }

        .cloud-uplode-btn:hover {
            background: #fff;
            color: #009688;
        }

    .shadow {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important
    }

    hr {
        margin-top: 20px;
        margin-bottom: 20px;
        border: 0;
        border-top: 8px solid #fff !important;
    }

    .alert {
        padding: 10px !important;
    }

    .alert-dismissable .close, .alert-dismissible .close {
        position: relative;
        top: -8px;
        right: -7px;
    }

    .badge-primary {
        color: #fff;
        background-color: #007bff;
    }

    .badge-success {
        color: #fff;
        background-color: #28a745;
    }

    .badge-danger {
        color: #fff;
        background-color: #dc3545;
    }

    .badge-dark {
        color: #fff;
        background-color: #343a40;
    }

    .badge-info {
        color: #fff;
        background-color: #17a2b8;
    }
</style>
<div class="row">
    <div class="col-md-12" style="background-color:lightblue">
        @Html.Label("Real Estate Returns File Information", new { @style = "font-size:17px" })
    </div>
</div>
<br />
<div class="bg-w">
    <b>General Information </b>
</div>

<div class="row">
    <table class="table">
        <tr>
            <th style="width:18%">
                Name of Applicant
            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                <label class="col-form-label">@Model.BookingViewModel.CustomerGroupName</label>
            </td>
            <th style="width:18%"> Application Date</th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                @if (Model.BookingViewModel.ApplicationDate == null)
                { }
                else
                {@Model.BookingViewModel.ApplicationDate.Value.ToLongDateString();
            }
            </td>
        </tr>

        <tr>
            <th style="width:18%">
                Contact No
            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                <label class="col-form-label">@Model.BookingViewModel.PrimaryContactNo</label>
            </td>
            <th style="width:18%"> Contact Address</th>
            <th style="width:2%">:</th>
            <td style="width:30%">@Model.BookingViewModel.PrimaryContactAddr</td>
        </tr>
        <tr>
            <th style="width:18%">
                Email
            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                <label class="col-form-label">@Model.BookingViewModel.PrimaryEmail</label>
            </td>
            <th style="width:18%"> Booking Date</th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                @if (Model.BookingViewModel.BookingDate == null)
                { }
                else
                {@Model.BookingViewModel.BookingDate.Value.ToLongDateString();
            }
            </td>
        </tr>
        <tr>
            <th style="width:18%">
                Project Name
            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">
                <label class="col-form-label">@Model.BookingViewModel.ProjectName</label>
            </td>
            <th style="width:18%">
                @if (Model.CompanyId == 7)
                {
                    <Span> Plot No </Span>
                }
                else
                {
                    <Span>  Flat No </Span>
                }
            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">@Model.BookingViewModel.PlotName</td>
        </tr>

        <tr>
            <th style="width:18%">
                @if (Model.CompanyId == 7)
                {
                    <Span> Plot Size </Span>
                }
                else
                {
                    <Span>  Flat Size</Span>
                }

            </th>
            <th style="width:2%">:</th>
            <td style="width:30%">

                <label class="col-form-label"><span> @Model.BookingViewModel.PlotSize (@Model.BookingViewModel.UnitName)</span> </label>
            </td>
            <th style="width:18%"> Rate Per @Model.BookingViewModel.UnitName</th>
            <th style="width:2%">:</th>
            <td style="width:30%">@Model.BookingViewModel.RatePerKatha</td>
        </tr>

        <tr>

            <th style="width:18%"> Booking No</th>
            <th style="width:2%">:</th>
            <td style="width:30%">@Model.BookingViewModel.BookingNo</td>


            <th style="width:18%"> File No</th>
            <th style="width:2%"> :</th>
            <td style="width:30%;text-align:left">
                <a href="/Report/ProductBookingInformation?companyId=@Model.BookingViewModel.CompanyId&&CGId=@Model.BookingViewModel.CGId" target="_blank">@Model.BookingViewModel.FileNo</a>
            </td>
        </tr>
    </table>
</div>



<div class="bg-w" style="margin-top:10px;">
    <b> Mode of Payment </b>
</div>

<div class="table-responsive">
    <table class="table">
        @{int sl = 1;


        }
        <thead>
            <tr>
                <th>
                    SL
                </th>
                <th>
                    Cost Head
                </th>

                <th>
                    Amount
                </th>

        </thead>
        <tbody>
            <tr>
                <td> 1</td>
                <td>
                    @if (Model.CompanyId == 7)
                    {
                        <b> Land Value </b>
                    }
                    else
                    {
                        <b> Flat Value </b>
                    }

                </td>
                <td>
                    <b>  @(Convert.ToDecimal(Model.BookingViewModel.PlotSize)* Convert.ToDecimal(Model.BookingViewModel.RatePerKatha)) </b>
                </td>
            </tr>
            @foreach (var item in Model.BookingViewModel.LstPurchaseCostHeads)
            {
                if (item.Amount > 0)
                {
                    <tr>
                        <td>
                            @(++sl)
                        </td>
                        <td>
                            @item.CostName
                        </td>
                        <td>
                            @item.Amount
                        </td>
                    </tr>
                }
            }

            <tr>
                <td colspan="2" class="text-right">
                    <b> Total Amount : </b>
                </td>
                <td>
                    @Model.BookingViewModel.TotalAmount
                </td>

            </tr>


            <tr>
                <td>Discount (Land Value) </td>
                <td> @Model.BookingViewModel.Discount % </td>
                <td>
                    @((Model.BookingViewModel.LandValue/100m) * Convert.ToDecimal(Model.BookingViewModel.Discount))
                </td>
            </tr>

            <tr>
                <td colspan="2" class="text-right">  <b> Special Discount :</b> </td>

                <td>
                    @Model.BookingViewModel.SpecialDiscountAmt
                </td>
            </tr>

            <tr>
                <td colspan="2" class="text-right">  <b> Total Discount :</b> </td>

                <td>
                    @Model.BookingViewModel.TotalDiscount
                </td>
            </tr>

            <tr>
                <td colspan="2" class="text-right">
                    <b>Grand Total :</b>
                </td>
                <td> @Model.BookingViewModel.GrandTotalAmount  </td>
            </tr>

            <tr>
                <td colspan="2" class="text-right">
                    <b>Booking Money :</b>
                </td>
                <td> @Model.BookingViewModel.BookingMoney  </td>
            </tr>
            <tr>
                <td colspan="2" class="text-right">
                    <b>Rest of Amount :</b>
                </td>
                <td> @Model.BookingViewModel.RestofAmount  </td>
            </tr>
            <tr>
                <td colspan="2" class="text-right">
                    <b>Installment Amount :</b>
                </td>
                <td> @Model.BookingViewModel.InstallmentAmount  </td>
            </tr>

        </tbody>
    </table>
</div>

@if (Model.BookingViewModel.InstallmentAmount != Model.BookingViewModel.InstallmentSumOfAmount)
{
    <div class="" style="position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem; border: 1px solid transparent; border-radius: 0.25rem; color: #721c24; background-color: #f8d7da; border-color: #f5c6cb; display: block !important ">
        <b> Installment Amount = @(Model.BookingViewModel.InstallmentAmount) </b>  <br />
        <b> Installment Sum Of Amount =  @(Model.BookingViewModel.InstallmentSumOfAmount)</b> <br />
        <b> Total fraction = @(Model.BookingViewModel.InstallmentAmount- Model.BookingViewModel.InstallmentSumOfAmount)</b>

    </div>
}

<div class="bg-w">
    <b> Installment Schedule </b>
</div>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    SL
                </th>
                <th>
                    Installment Title
                </th>

                <th>
                    Installment Date
                </th>
                <th>
                    Amount
                </th>
                <th>
                    PaidAmount
                </th>
                <th>
                    Action
                </th>
        </thead>

        @{int sl1 = 0;
        }
        <tbody>
            @foreach (var item in Model.BookingViewModel.Schedule)
            {

                <tr>
                    <td>
                        @(++sl1)
                    </td>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.InstallmentDate.ToString("dd-MM-yyyy")
                    </td>
                    <td>
                        @item.PayableAmount
                    </td>
                    <td>
                        @item.PaidAmount
                    </td>
                    <td>
                        @{ if (item.IsPaid)
                            {
                                <b class=" text-dark" disabled> Paid</b>
                            }
                            else
                            {
                                <b disabled class="text-warning">Pending </b>

                            }
                        }
                    </td>

                </tr>

            }

            <tr>
                <td colspan="3" class="text-right"> <b> Total Installment Amount :</b>  </td>
                <td colspan="3"> <b> @Model.BookingViewModel.InstallmentSumOfAmount </b></td>
            </tr>
        </tbody>
    </table>
</div>

@if (Model.BookingViewModel.FileStatus == 1|| Model.BookingViewModel.FileStatus == 0)
{
    <div style="background-color:aliceblue;padding:30px">
        @using (Html.BeginForm("ConfirmReturn", "RealEstateReturns", FormMethod.Post, new { enctype = "multipart/form-data", @class = "formReset" }))
        {
        <input type="hidden" name="CompanyId" value="@Model.CompanyId" />
        <input type="hidden" name="CGId" value="@Model.CGId" />
        <input type="hidden" name="StatusId" value="@Model.StatusId" />


        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label> Cancel Date </label>
                    @Html.EditorFor(model => model.strCancelDate, new { htmlAttributes = new { @class = "datepicker form-control", @id = "strCancelDate", @style = "max-width: 100%;" } })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Tolal Collection </label>
                    @Html.EditorFor(model => model.BookingViewModel.TolalCollaction, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "TolalCollaction", @style = "max-width: 100%;" } })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnFeePercentage, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ReturnFeePercentage, new { htmlAttributes = new { @class = "form-control", @id = "ReturnFeePercentage", @style = "max-width: 100%;" } })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnFee, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ReturnFee, new { htmlAttributes = new { @class = "form-control", @style = "max-width: 100%;", @id = "ReturnFee" } })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label for="exampleFormControlTextarea1"> Narration </label>
                    <textarea style="max-width:100%" class="form-control" name="Purpose" id="Purpose" rows="5"></textarea>
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-group" style="padding-top:50px">
                    <input type="file" name="UploadedFile" accept="image/jpg, image/jpeg, image/png" />
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary">Confirm Return</button>
            </div>
        </div>
        }
    </div>
}
else
{


    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger" role="alert">
                <b> @((RealStateReturnsStatus) Model.BookingViewModel.FileStatus)</b>
            </div>
        </div>

    </div>
}










@section Scripts
{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });

        function information() {
            var text = $("#exampleFormControlTextarea1").val();
            window.location.href = "/RealEstateReturns/ConfirmReturn?companyid=" +@Model.CompanyId+"&&CGId=" + @Model.CGId + "&&StatusId=" + @Model.StatusId +"&&particular=" +text+"";
        }

        //Image Preview Begin
        function showImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }

        //Image Preview End

        //Nominee Image Preview Begin
        function showNomineeImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }


        $('#ReturnFeePercentage').keyup(function () {
            var total = $("#TolalCollaction").val();
            var Percentage = $("#ReturnFeePercentage").val();
            var calculation = (total * Percentage) / 100;
            console.log("ddddddd", calculation);
            $("#ReturnFee").val(calculation);
        })

        $('#ReturnFee').keyup(function () {
            var total = $("#TolalCollaction").val();
            var ReturnFee = $("#ReturnFee").val();
            var calculation = (ReturnFee * 100) / total;
            $("#ReturnFeePercentage").val(calculation);
        })

    </script>
}






