@model KGERP.Service.Implementation.ComparativeStatementService.Comparative_Statement.ComparativeStatementVm
@{
    ViewBag.Title = "CreateStatement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .container {
        width: 80%;
        margin: 50px auto;
    }

    h2 {
        text-align: center;
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    th, td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #f2f2f2;
        color: #333;
    }

    tr:last-child td {
        border-bottom: none;
    }

    tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    tr:hover {
        background-color: #f2f2f2;
    }

    td {
        color: #666;
    }

    .float-right {
        float: right;
    }

    .disabled {
        opacity: 0.5; /* Or any other styling to visually indicate it's disabled */
        pointer-events: none; /* This prevents clicks on the element */
        /* You can add additional styling as needed */
    }
</style>


@if (Model.CSID <= 0)
{<h4 class="text-center" style="background-color: #F2F2F2; margin-top: 10px; padding:5px; "><b>Create Comparative Statement</b></h4>
    using (Html.BeginForm("CreateStatement", "ComparativeStatement", FormMethod.Post))
    {
        <div class="row">
            @Html.HiddenFor(model => model.CompanyId, new { @class = "form-control" })
            <!-- Divided into three equal parts -->
            <!-- First column -->
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CSNO)
                @Html.TextBoxFor(model => model.CSNO, new { @class = "form-control", @readonly = "readonly" })

                @Html.ValidationMessageFor(model => model.CSNO, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CSDate)
                @Html.TextBoxFor(model => model.CSDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.CSDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.DeliveryDate)
                @Html.TextBoxFor(model => model.DeliveryDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PrductName)
                @Html.HiddenFor(model => model.ProductID, new { @class = "form-control", id = "ProductId" })
                @Html.TextBoxFor(model => model.PrductName, new { @class = "form-control", id = "ProductName" })
            </div>



            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Brand)
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Origin)
                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.RequiredQuantity)
                @Html.EditorFor(model => model.RequiredQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequiredQuantity, "", new { @class = "text-danger" })
            </div>
            <div class="form-groupcol-md-4 col-md-8">
                @Html.LabelFor(model => model.Specification)
                @Html.TextAreaFor(model => model.Specification, new { @class = "form-control", style = "height: 50px;" })
                @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
            </div>




        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    }
}
else
{
    <h4 class="text-center" style="background-color: #F2F2F2; margin-top: 10px; padding:5px; "><b>Comparative Statement </b></h4>
    <div>
        <div class="col-md-1"> </div>
        <div class="col-md-12">
            <table class="table">
                <tr>
                    <th style="width:18%">
                        CSNO
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.CSNO
                    </td>
                    <th style="width:18%"> CS Date</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.CSDate.ToString("dd/MMM/yyyy")</td>
                </tr>
                <tr>
                    <th style="width:18%">
                        Delivery Date
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.DeliveryDate.Value.ToString("dd/MMM/yyyy")
                    </td>
                    <th style="width:18%"> Product Name</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.PrductName</td>
                </tr>
                <tr>
                    <th style="width:18%">
                        Brand
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.Brand
                    </td>
                    <th style="width:18%"> Origin</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.Origin</td>
                </tr>
                <tr>
                    <th style="width:18%">
                        Requirement Quantity
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.RequiredQuantity</td>

                    <th style="width:18%">Specification</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.Specification</td>
                </tr>
                <tr>
                    <th style="width:18%">
                        Status
                    </th>
                    <th style="width:2%">:</th>
                    <td>
                        @if (Model.Status)
                        {
                            <text>Submitted</text>
                        }
                        else
                        {
                            <text>Not Submit</text>
                        }
                    </td>


                    <th style="width:18%">Created By</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">@Model.CreatedBy</td>
                </tr>
            </table>
        </div>
        <div class="col-md-1"> </div>
    </div>

    if (Model.Status == false)
    {
        using (Html.BeginForm("CreateStatementDetails", "ComparativeStatement", FormMethod.Post))
        { <h4 class="text-center" style="margin-top:200px;">Add Details</h4>
            <div class="row">
                @Html.HiddenFor(model => model.CSID, new { @class = "form-control" })
                @Html.HiddenFor(model => model.CompanyId, new { @class = "form-control" })
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DetaliesObjectVm.VendorName)
                    @Html.HiddenFor(model => model.DetaliesObjectVm.SupplierID, new { @class = "form-control", id = "SuplierId" })
                    @Html.TextBoxFor(model => model.DetaliesObjectVm.VendorName, new { @class = "form-control", id = "VendorName" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.DetaliesObjectVm.QuotedPrice)
                    @Html.EditorFor(model => model.DetaliesObjectVm.QuotedPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DetaliesObjectVm.QuotedPrice, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DetaliesObjectVm.Remarks)
                    @Html.EditorFor(model => model.DetaliesObjectVm.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DetaliesObjectVm.Remarks, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <button type="submit" style="margin-top:20px;" class="btn btn-primary">Add</button>
                </div>
            </div>
        }
    }









    if (Model.ComparativeStatementDetailvmList.Any())
    {
        <h4 class="text-center" style="margin-top: 10px;  padding:5px; "><b>Comparative Statement Details</b></h4>

        <table>
            <thead>
                <tr>
                    <th>Serial Number</th>
                    <th>Vendor Name</th>
                    <th>Quoted Price</th>
                    <th>Total Price</th>
                    <th>Remarks</th>

                    <th>Action</th>
                    <th>Recommendation</th>
                    <th>Chioce</th>
                </tr>
            </thead>
            <tbody>
                @{

                    decimal? totalCalculatedValue = 0;
                    var serialNumber = 1;
                }
                @foreach (var item in Model.ComparativeStatementDetailvmList)
                {
                    <tr>
                        <td>@serialNumber</td>
                        <td>@item.VendorName</td>
                        <td>@item.QuotedPrice</td>
                        <td>@( (item.QuotedPrice * Model.RequiredQuantity).Value.ToString("0.00") )</td>
                        <td>@item.Remarks</td>
                        <td>
                            @if (Model.Status == true)
                            {
                                <i class="fa fa-pencil text-warning disabled" data-csdetailid="@item.CSDetailID"></i>

                                <i class="fa fa-trash text-danger pr-2 disabled" data-csdetailid="@item.CSDetailID" disabled></i>

                            }

                            else
                            {
                                <i class="fa fa-pencil text-warning " data-csdetailid="@item.CSDetailID"></i>
                                <i class="fa fa-trash text-danger pr-2" data-csdetailid="@item.CSDetailID"></i>
                            }








                        </td>
                        <td>
                            @if (item.Recommendation)
                            {
                                <span class="text-primary"> <b>Recommended</b></span>
                            }

                            else
                            {
                                <span>
                                    Not Recommended
                                </span>
                            }
                        </td>
                        <td>
                            @if (Model.Status == true)
                            {
                                <input type="checkbox" class="checkbox-item disabled" name="selectedItems" value="@item.CSDetailID" @(item.Recommendation ? "checked" : "") />
                            }
                            else
                            {
                                <input type="checkbox" class="checkbox-item" name="selectedItems" value="@item.CSDetailID" @(item.Recommendation ? "checked" : "") />
                            }

                        </td>
                    </tr>
                    totalCalculatedValue += (item.QuotedPrice * Model.RequiredQuantity);

                    serialNumber++;
                }
                <tr>
                    <td colspan="3"><b>Total:</b></td>

                    <td>@totalCalculatedValue.Value.ToString("0.00")</td>
                    <td colspan="4"></td> <!-- This cell spans across the remaining columns -->
                </tr>
            </tbody>

        </table>
    }
    using (Html.BeginForm("SubmitCS", "ComparativeStatement", FormMethod.Post, new { @class = "float-right" }))
    { @Html.HiddenFor(model => model.CSID, new { @class = "form-control" })
    { @Html.HiddenFor(model => model.CompanyId, new { @class = "form-control" })

    if (Model.Status == false)
    {

        <div class="form-group" style="margin-top: 40px;">
            <button type="submit" class="btn btn-primary " style="width: 450px;">Submit</button>
        </div>
    }


    else
    {

        <div class="form-group" style="margin-top: 40px;">
            <button class="btn btn-success disabled " style="width: 450px;">Submitted</button>
        </div>

    }

}

}


<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Employee Id</th>
            <th scope="col">Signatory</th>
            <th scope="col">Designation</th>
            <th scope="col">Status</th>
            <th scope="col">Approved Time</th>
            <th scope="col">Comment</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.RADataList != null)
        {
            int ii = 1;
            foreach (var item in Model.RADataList)
            {
                <tr>
                    <td>@(ii++)</td>
                    <td>@item.EmployeeIdString</td>
                    <td>@item.EmployeeName</td>
                    <td>@item.DesignationName</td>
                    <td>@item.StatusString</td>
                    <td>@item.ApprovedTime</td>
                    <td>@item.Comment</td>
                </tr>
            }
        }
    </tbody>
</table>

<div id="formModal" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Item</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">

                    <div class="form-group col-md-3">
                        <label for="QuotedPrice">Quoted Price</label>
                        <input type="text" class="form-control" id="QuotedPrice" name="QuotedPrice">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="Remarks">Remarks</label>
                        <input type="text" class="form-control" id="Remarks" name="Remarks">
                    </div>
                    <!-- Hidden input field for CSDetailID -->
                    <input id="CSDetailID" type="hidden" name="CSDetailID">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChangesBtn">Save changes</button>
            </div>
        </div>
    </div>
</div>
}
<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to edit this?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmEditBtn">Confirm</button>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {
    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "dd/mm/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });




        $("#ProductName").autocomplete({
                source: function (request, response) {


                    $.ajax({
                        url:"@Url.Action("GetProducts", "ComparativeStatement")",
                        data: { companyId: "@Model.CompanyId", prefix: request.term, productType : "R" },
                        dataType: "json",
                        type: "GET",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            console.log(data);
                            response($.map(data, function (item) {
                                return item
                            }));
                        },

                        error: function (response) {

                        },
                        failure: function (response) {

                        }
                    });
                },

            select: function (e, i) {
                console.log(i.item.val);
                //$("#ProductName").val(i.item.label);
                $("#ProductId").val(i.item.val);

            },
            minLength: 1,
            cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });

  $("#VendorName").autocomplete({
                source: function (request, response) {


                    $.ajax({
                        url:"@Url.Action("GetSupplier", "ComparativeStatement")",
                        data: { companyId: "@Model.CompanyId", prefix: request.term},
                        dataType: "json",
                        type: "GET",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            console.log(data);
                            response($.map(data, function (item) {
                                return item
                            }));
                        },

                        error: function (response) {

                        },
                        failure: function (response) {

                        }
                    });
                },

            select: function (e, i) {
                console.log(i.item.val);
                //$("#ProductName").val(i.item.label);
                $("#SuplierId").val(i.item.val);

            },
            minLength: 1,
            cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });

        // Add click event listener to the pencil icon
        $('.fa-pencil').click(function () {
            var csDetailID = $(this).data('csdetailid');
            var row = $(this).closest('tr');
            var quotedPrice = row.find('td:nth-child(3)').text().trim();
            var remarks = row.find('td:nth-child(5)').text().trim();

            $('#QuotedPrice').val(quotedPrice);
            $('#Remarks').val(remarks);
            $('#CSDetailID').val(csDetailID);
            $('#formModal').modal('show');
        });

       $('#saveChangesBtn').click(function () {
      $('#confirmationModal').modal('show');
    });

    $('#confirmEditBtn').click(function () {
      var CSDetailID = $('#CSDetailID').val();
      var QuotedPrice = $('#QuotedPrice').val();
      var Remarks = $('#Remarks').val();

      $.ajax({
        url: "@Url.Action("EditStatementDetails", "ComparativeStatement")",
        type: 'POST',
        dataType: 'json',
        data: {
          CSDetailID: CSDetailID,
          QuotedPrice: QuotedPrice,
          Remarks: Remarks
        },
        success: function (response) {
          location.reload();
        },
        error: function (xhr, status, error) {
          console.error('Error occurred while saving item:', error);
        }
      });

      $('#confirmationModal').modal('hide');
    });

    $('i.fa.fa-trash').click(function () {
    var csDetailID = $(this).data('csdetailid');

    // Show confirmation alert
    var confirmation = confirm('Are you sure you want to delete this item?');
    if (confirmation) {
        // AJAX request to perform deletion
        $.ajax({
            url: "@Url.Action("DeletetatementDetails", "ComparativeStatement")",
            type: 'POST', // or 'DELETE', depending on your server configuration
            dataType: 'json', // Change data type if needed
            data: {
                csDetailID: csDetailID
            },
            success: function (response) {
                // Show success alert
                alert('Item Deleted Successfully!');
                location.reload(); // Reload page after alert is closed
            },
            error: function (xhr, status, error) {
                // Show error alert
                alert('An error occurred while deleting item. Please try again later.');
                console.error('Error occurred while deleting item:', error);
            }
        });
    }
});


        $('.checkbox-item').change(function () {
            if (this.checked) {
                var csDetailID = $(this).val();
                // Perform your AJAX request here
                $.ajax({
                    url:"@Url.Action("RecomendationCheck", "ComparativeStatement")",
                    type: 'POST',
                    data: { csDetailID: csDetailID },
                    success: function (response) {
                       location.reload();
                    },
                    error: function (xhr, status, error) {
                        // Handle errors
                    }
                });
            }
        });
    </script>
}