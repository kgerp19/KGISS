
@model KGERP.Service.Configuration.VMCommonSupplier

@{
    ViewData["Title"] = "Dealer / Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
    .inputBoxContainer {
        display: none;
    }
    
    }
</style>

<section class="content-header">
    <h1>
        Dealer / Customer
        <a href="@Url.Action("ZoneWiseCustomer","Report", new { companyId = Request.QueryString["companyId"]})" target="_blank" class="btn btn-primary btn-xs">
            Export @Model.CompanyName Customer
        </a>
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">
            <a class="btn btn-link" data-toggle="modal" data-target="#editPOModal" title="Add of Edit" data-placement="top">
                <i class="fa fa-user "></i>Add Customer
            </a>
        </li>
    </ol>
</section>
<section class="content">


    <div class="box">
        <div class="box-success">
            <div class="box-header">

            </div>
            <div class="box-body">


                @using (Html.BeginForm("CommonCustomer", "Configuration", FormMethod.Post, new { id = "commonCustomerformId", @class = "formValidator", @enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID, new { id = "customerId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                    @Html.HiddenFor(model => model.Condition, new { id = "Condition" })
                    @*@Html.HiddenFor(model => model.MonthlyIncentive, new { id = "MonthlyIncentive" })
                    @Html.HiddenFor(model => model.YearlyIncentive, new { id = "YearlyIncentive" })*@


                    <div class="modal fade modal-fullscreen" id="editPOModal" data-toggle="modal">
                        <div class="modal-content">
                            <div class="box">
                                <div class="box-body">
                                    <div class="modal-header">
                                        <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                                            &times;
                                        </button>
                                        <h4 class="modal-title">
                                            <b>
                                                Dealer / Customer Addition or Modification
                                            </b>
                                        </h4>
                                    </div>
                                    <div class="modal-body">



                                        <div class="bg-success">
                                            <span style="padding:15px;font-size:large;">
                                                Basic Information
                                            </span>

                                        </div>

                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Dealer/Customer Name:</label>
                                                    @Html.TextBoxFor(model => model.Name, new { id = "txtCustomerName", @class = "form-control", @autocomplete = "off", @placeholder = "Customer Name", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Mobile:</label>
                                                    @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "form-control", @placeholder = "Mobile" })
                                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Email:</label>
                                                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", @autocomplete = "off", @placeholder = "Email" })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Propietor:</label>
                                                    @Html.TextBoxFor(model => model.ContactPerson, new { id = "txtContactPerson", @class = "form-control", @placeholder = "Propietor" })
                                                    @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Division:</label>
                                                    @Html.DropDownListFor(model => model.Common_DivisionFk, Model.DivisionList as SelectList, "--Division--", new { id = "ddlCommon_DivisionFk", @class = "form-control", required = "true" })
                                                    @Html.ValidationMessageFor(model => model.Common_DivisionFk, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">District:</label>
                                                    @Html.DropDownListFor(model => model.Common_DistrictsFk, Model.DistrictList as SelectList, "--District--", new { id = "ddlCommon_DistrictsFk", @class = "form-control", required = "true" })
                                                    @Html.ValidationMessageFor(model => model.Common_DistrictsFk, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Upazila:</label>
                                                    @Html.DropDownListFor(model => model.Common_UpazilasFk, Model.UpazilasList as SelectList, "--Upazila--", new { id = "ddlCommon_UpazilasFk", @class = "form-control", required = "true" })
                                                    @Html.ValidationMessageFor(model => model.Common_UpazilasFk, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Zone:</label>
                                                    @Html.DropDownListFor(model => model.ZoneId, Model.ZoneListList as SelectList, "--Select Zone--", new { id = "ddlZoneId", @class = "form-control", required = "true" })
                                                    @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Sales Officer:</label>
                                                    @Html.DropDownListFor(model => model.SalesOfficerEmpId, Model.EmployeeList as SelectList, "--Select Sales Officer--", new { id = "ddlSalesOfficerEmpId", @class = "form-control", required = "true" })
                                                    @Html.ValidationMessageFor(model => model.SalesOfficerEmpId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Monthly Target:</label>
                                                    @Html.TextBoxFor(model => model.MonthlyTarget, new { id = "txtMonthlyTarget", @class = "form-control", @placeholder = "Monthly Target" })
                                                    @Html.ValidationMessageFor(model => model.MonthlyTarget, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Yearly Target:</label>
                                                    @Html.TextBoxFor(model => model.YearlyTarget, new { id = "txtYearlyTarget", @class = "form-control", @placeholder = "Yearly Target" })
                                                    @Html.ValidationMessageFor(model => model.YearlyTarget, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Monthly Incentive:</label>
                                                    @Html.TextBoxFor(model => model.MonthlyIncentive, new { id = "txtMonthlyIncentive", @class = "form-control", @placeholder = "Monthly Incentive" })
                                                    @Html.ValidationMessageFor(model => model.MonthlyIncentive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Yearly Incentive:</label>
                                                    @Html.TextBoxFor(model => model.YearlyIncentive, new { id = "txtYearlyIncentive", @class = "form-control", @placeholder = "Yearly Incentive" })
                                                    @Html.ValidationMessageFor(model => model.YearlyIncentive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row" style="margin-left:3px;">
                                            @*<div class="col-md-3">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Is Incentive In Invoice:</label>
                <br />
                @Html.CheckBoxFor(model => model.IsIncentiveInInvoice, new { id = "txtIsIncentiveInInvoice" })
                @Html.ValidationMessageFor(model => model.FixedIncentive, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="message-text" class="col-form-label">Fixed Incentive: (% in Ton)</label>
                @Html.TextBoxFor(model => model.FixedIncentive, new { id = "txtFixedIncentive", @class = "form-control", @placeholder = "Monthly Target" })
                @Html.ValidationMessageFor(model => model.FixedIncentive, "", new { @class = "text-danger" })
            </div>
        </div>*@
                                            <div class="col-md-3 border-danger " style="border:2px solid grey; padding:10px;">
                                                <div style="border-bottom:1px solid grey;">
                                                    Fixed Incentive
                                                </div>

                                                <br />
                                                <label>
                                                    <input type="radio" name="options" value="option1" checked onchange="toggleInputBox('inputBox1Container')">
                                                    All Item Avg.
                                                </label>
                                                <label>
                                                    <input type="radio" name="options" value="option2" onchange="toggleInputBox('inputBoxContainer2')">
                                                    Product Wise
                                                </label>

                                                <br><br>

                                                <div id="inputBox1Container" class="inputBoxContainer">
                                                    @*<label for="inputBox1">Incentive In Avg:</label>*@
                                                    @*<input type="text" id="inputBox1Text" name="inputBox1" class="form-control " style="width:200px;">*@


                                                    <label for="message-text" class="col-form-label">Incentive In Avg: (% in Ton)</label>
                                                    @Html.TextBoxFor(model => model.FixedIncentive, new
                                                    {
                                                        id = "txtFixedIncentive",
                                                        @class = "form-control",
                                                        @placeholder = "Monthly Target",
                                                   @style = "width:200px"
                                                    })
                                                    @Html.ValidationMessageFor(model => model.FixedIncentive, "", new { @class = "text-danger" })

                                                </div>

                                                <div id="inputBoxContainer2" class="inputBoxContainer">
                                                    <label for="inputBox2">Cattle:</label>
                                                    @*<input type="text" id="inputBox2" name="inputBox2" class="form-control " style="width:200px;">*@
                                                    @Html.TextBoxFor(model => model.FixedCommissionCattle, new
                                                    {
                                                        id = "txtFixedCommissionCattle",
                                                        @class = "form-control",
                                                        @placeholder = "Monthly Target",
                                                     @style = "width:200px"
                                                    })
                                                    <label for="inputBox3">Poultry:</label>
                                                    @*<input type="text" id="inputBox3" name="inputBox3" class="form-control " style="width:200px;">*@
                                                    @Html.TextBoxFor(model => model.FixedCommissionPoultry, new
                                                  {
                                                      id = "txtFixedCommissionPoultry",
                                                      @class = "form-control",
                                                      @placeholder = "Monthly Target",
                                                   @style = "width:200px"
                                                  })
                                                    <label for="inputBox4">Fish:</label>
                                                    @*<input type="text" id="inputBox4" name="inputBox4" class="form-control " style="width:200px;">*@
                                                    @Html.TextBoxFor(model => model.FixedCommissionFish, new
                                              {
                                                  id = "txtFixedCommissionFish",
                                                  @class = "form-control",
                                                  @placeholder = "Monthly Target",
                                               @style = "width:200px"
                                              })
                                                </div>
                                                <div class="form-group" style="margin-top:10px;">
                                                    <label for="message-text" class="col-form-label">Is Incentive In Invoice:</label>
                                                    <br />
                                                    @Html.CheckBoxFor(model => model.IsIncentiveInInvoice, new { id = "txtIsIncentiveInInvoice" })
                                                    @Html.ValidationMessageFor(model => model.FixedIncentive, "", new { @class = "text-danger" })
                                                </div>

                                            </div>






                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Factory Carrying Commission:</label>
                                                    @Html.TextBoxFor(model => model.FactoryCarrying, new { id = "txtFactoryCarrying", @class = "form-control", @placeholder = "Factory Carrying" })
                                                    @Html.ValidationMessageFor(model => model.FactoryCarrying, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Cash Commission Poultry:</label>
                                                    @Html.TextBoxFor(model => model.CashCommissionPoultry, new { id = "txtCashCommissionPoultry", @class = "form-control", @placeholder = "Cash Commission Poultry" })
                                                    @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Security Amount:</label>
                                                    @Html.TextBoxFor(model => model.SecurityAmount, new { id = "txtSecurityAmount", @class = "form-control", @placeholder = "Security Amount" })
                                                    @Html.ValidationMessageFor(model => model.SecurityAmount, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Depot Carrying Commission:</label>
                                                    @Html.TextBoxFor(model => model.DepotCarrying, new { id = "txtDepotCarrying", @class = "form-control", @placeholder = "Monthly Target" })
                                                    @Html.ValidationMessageFor(model => model.DepotCarrying, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Cash Commission Fish:</label>
                                                    @Html.TextBoxFor(model => model.CashCommissionFish, new { id = "txtCashCommissionFish", @class = "form-control", @placeholder = "Cash Commission Fish" })
                                                    @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Address:</label>
                                                    @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Address", @Rows = 1 })
                                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                </div>
                                            
                                            </div>
                                            <div class="col-md-3">
                                                <p> <b>Product Name</b></p>

                                                <div class="form-group row" style="display: flex; align-items: center;">
                                                    <label class="col-form-label col-md-4" style="margin-bottom: 0;">Poultry:</label>
                                                    <div class="col-md-2" style="margin-top: 0;">
                                                        <div class="form-check">
                                                            @Html.CheckBoxFor(model => model.IsPoultry, new { id = "txtIsPoultry", @class = "form-check-input", style = "margin-top: 0;" })
                                                            <label class="form-check-label" for="txtIsPoultry"></label>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.IsPoultry, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-form-label col-md-2 mt-1">Fish:</label>
                                                    <div class="col-md-2">
                                                        <div class="form-check">
                                                            @Html.CheckBoxFor(model => model.IsFish, new { id = "txtIsFish", @class = "form-check-input mt-1" })
                                                            <label class="form-check-label" for="txtIsFish"></label>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.IsFish, "", new { @class = "text-danger" })
                                                    </div>

                                                    <label class="col-form-label col-md-2 mt-1">Cattle:</label>
                                                    <div class="col-md-2">
                                                        <div class="form-check">
                                                            @Html.CheckBoxFor(model => model.IsCattle, new { id = "txtIsCattle", @class = "form-check-input mt-1" })
                                                            <label class="form-check-label" for="txtIsCattle"></label>
                                                        </div>
                                                        @Html.ValidationMessageFor(model => model.IsCattle, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Cash Commission Cattle:</label>
                                                    @Html.TextBoxFor(model => model.CashCommissionCattle, new { id = "txtCashCommissionCattle", @class = "form-control", @placeholder = "Cash Commission Cattle" })
                                                    @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group">

                                                    <label for="message-text" class="col-form-label">Image Uplode:</label>
                                                    <input type="file" name="file" id="file" />
                                                </div>


                                            </div>
                                        </div>
                                       
                                            
                                            <!--<div class="row">-->

                                                @*<div class="col-md-1">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Poultry:</label>
                                                        @Html.CheckBoxFor(model => model.IsPoultry, new { id = "txtIsPoultry" })
                                                        @Html.ValidationMessageFor(model => model.IsPoultry, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                                @*<div class="col-md-1">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Fish:</label>
                                                        @Html.CheckBoxFor(model => model.IsFish, new { id = "txtIsFish" })
                                                        @Html.ValidationMessageFor(model => model.IsFish, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@

                                                <!--<div class="col-md-3">-->
                                                    @*<div class="form-group">
                                                        <label for="message-text" class="col-form-label">Cash Commission Poultry:</label>
                                                        @Html.TextBoxFor(model => model.CashCommissionPoultry, new { id = "txtCashCommissionPoultry", @class = "form-control", @placeholder = "Cash Commission Poultry" })
                                                        @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                    </div>*@
                                                <!--</div>

                                                <div class="col-md-3">-->
                                                    @*<div class="form-group">
                                                        <label for="message-text" class="col-form-label">Cash Commission Fish:</label>
                                                        @Html.TextBoxFor(model => model.CashCommissionFish, new { id = "txtCashCommissionFish", @class = "form-control", @placeholder = "Cash Commission Fish" })
                                                        @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                    </div>*@
                                                <!--</div>
                                                <div class="col-md-3">-->
                                                    @*<div class="form-group">
                                                        <label for="message-text" class="col-form-label">Cash Commission Cattle:</label>
                                                        @Html.TextBoxFor(model => model.CashCommissionCattle, new { id = "txtCashCommissionCattle", @class = "form-control", @placeholder = "Cash Commission Cattle" })
                                                        @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                    </div>*@
                                                <!--</div>


                                            </div>-->

                                    <div class="row">
                                        <!--<div class="col-md-2">-->
                                        @*<div class="form-group">
            <label for="message-text" class="col-form-label">Security Amount:</label>
            @Html.TextBoxFor(model => model.SecurityAmount, new { id = "txtSecurityAmount", @class = "form-control", @placeholder = "Security Amount" })
            @Html.ValidationMessageFor(model => model.SecurityAmount, "", new { @class = "text-danger" })
        </div>*@
                                        <!--</div>
    <div class="col-md-2">-->
                                        @*<div class="form-group">
            <label for="message-text" class="col-form-label">NID NO:</label>
            @Html.TextBoxFor(model => model.NID, new { id = "txtNID", @class = "form-control", @placeholder = "NID NO" })
            @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
        </div>*@
                                        <!--</div>
    <div class="col-md-2">-->
                                        @*<div class="form-group">
            <label for="message-text" class="col-form-label">Address:</label>
            @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Address", @Rows = 1 })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>*@
                                        <!--</div>-->
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Business Address:</label>
                                                @Html.TextAreaFor(model => model.BusinessAddress, new { id = "txtBusinessAddress", @class = "form-control", @placeholder = "Business Address", @Rows = 1 })
                                                @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Guarantor:</label>
                                                @Html.TextBoxFor(model => model.GuarantorName, new { id = "txtGuarantorName", @class = "form-control", @placeholder = "Guarantor Name" })
                                                @Html.ValidationMessageFor(model => model.GuarantorName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Guarantor Mobile NO:</label>
                                                @Html.TextBoxFor(model => model.GurantorMobileNo, new { id = "txtGurantorMobileNo", @class = "form-control", @placeholder = "Guarantor Mobile NO" })
                                                @Html.ValidationMessageFor(model => model.GurantorMobileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Gurantor Address:</label>
                                                @Html.TextAreaFor(model => model.GurantorAddress, new { id = "txtGurantorAddress", @class = "form-control", @placeholder = "GurantorAddress", @Rows = 1 })
                                                @Html.ValidationMessageFor(model => model.GurantorAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @*<div class="col-md-3">
            <div class="form-group">

                <label for="message-text" class="col-form-label">Image Uplode:</label>
                <input type="file" name="file" id="file" />
            </div>
        </div>*@

                                    </div>

                                            <div class="row">
                                                @*<div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Guarantor:</label>
                                                        @Html.TextBoxFor(model => model.GuarantorName, new { id = "txtGuarantorName", @class = "form-control", @placeholder = "Guarantor Name" })
                                                        @Html.ValidationMessageFor(model => model.GuarantorName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                                @*<div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Guarantor Mobile NO:</label>
                                                        @Html.TextBoxFor(model => model.GurantorMobileNo, new { id = "txtGurantorMobileNo", @class = "form-control", @placeholder = "Guarantor Mobile NO" })
                                                        @Html.ValidationMessageFor(model => model.GurantorMobileNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                                @*<div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Gurantor Address:</label>
                                                        @Html.TextAreaFor(model => model.GurantorAddress, new { id = "txtGurantorAddress", @class = "form-control", @placeholder = "GurantorAddress", @Rows = 1 })
                                                        @Html.ValidationMessageFor(model => model.GurantorAddress, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Customer Type:</label>
                                                        @Html.DropDownListFor(model => model.CustomerTypeFk, Model.CustomerTypeList as SelectList, "--Customer Type--", new { id = "ddCustomerTypeFk", @class = "form-control", required = "true" })
                                                        @Html.ValidationMessageFor(model => model.CustomerTypeFk, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="bg-warning">
                                                <span style="padding:15px;font-size:large;">
                                                    Nominee Information
                                                </span>

                                            </div>
                                            <br />

                                            <div class="row">
                                                <div class="col-md-5">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Nominee Name:</label>
                                                        @Html.TextBoxFor(model => model.NomineeName, new { id = "txtNomineeName", @class = "form-control", @placeholder = "Nominee Name" })
                                                        @Html.ValidationMessageFor(model => model.NomineeName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Nominee Phone:</label>
                                                        @Html.TextBoxFor(model => model.NomineePhone, new { id = "txtNomineePhone", @class = "form-control", @placeholder = "Nominee Phone" })
                                                        @Html.ValidationMessageFor(model => model.NomineePhone, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Nominee Relation:</label>
                                                        @Html.DropDownListFor(model => model.NomineeRelation, Model.NomineeRelationList as SelectList, "--Select Relation--", new { id = "ddNomineeRelation", @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.NomineeRelation, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Nominee NID NO:</label>
                                                        @Html.TextBoxFor(model => model.NomineeNID, new { id = "txtNomineeNID", @class = "form-control", @placeholder = "Nominee NID NO" })
                                                        @Html.ValidationMessageFor(model => model.NomineeNID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>

                                            <div class="bg-danger">
                                                <span style="padding:15px;font-size:large;">
                                                    Customer Policy
                                                </span>

                                            </div>
                                            <br />

                                            <div class="row">

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label">Payment Type :</label>
                                                        Cash
                                                        @Html.RadioButtonFor(model => model.PaymentType, "Cash", new { @id = "cash", @name = "Vendor.CustomerType", @checked = "checked" })
                                                        Credit
                                                        @Html.RadioButtonFor(model => model.PaymentType, "Credit", new { @id = "credit", @name = "Vendor.CustomerType" })
                                                    </div>
                                                </div>
                                            </div>
                                            @*creditParty*@
                                            <div class="">
                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <label for="message-text" class="col-form-label">Credit Ratio:</label>
                                                            <br />
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.CreditRatioFrom, new { id = "txtCreditRatioFrom", @class = "form-control", @placeholder = "Credit Ratio From" })
                                                                @Html.ValidationMessageFor(model => model.CreditRatioFrom, "", new { @class = "text-danger" })
                                                            </div>
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.CreditRatioTo, new { id = "txtCreditRatioTo", @class = "form-control", @placeholder = "Credit Ratio To" })
                                                                @Html.ValidationMessageFor(model => model.CreditRatioTo, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label for="message-text" class="col-form-label">Credit Commission:</label>
                                                            @Html.TextBoxFor(model => model.CreditCommission, new { id = "txtCreditCommission", @class = "form-control", @placeholder = "Credit Commission" })
                                                            @Html.ValidationMessageFor(model => model.CreditCommission, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>



                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label for="message-text" class="col-form-label">No of Check:</label>
                                                            @Html.TextBoxFor(model => model.NoOfCheck, new { id = "txtNoOfCheck", @class = "form-control", @placeholder = "No Of Check" })
                                                            @Html.ValidationMessageFor(model => model.NoOfCheck, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            <label for="message-text" class="col-form-label">Check No (Comma Separated):</label>
                                                            @Html.TextBoxFor(model => model.CheckNo, new { id = "txtCheckNo", @class = "form-control", @placeholder = "Check No" })
                                                            @Html.ValidationMessageFor(model => model.CheckNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="message-text" class="col-form-label">Closing Time:</label>
                                                            @Html.DropDownListFor(model => model.ClosingTime, new SelectList(Model.Months, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlDistrict" })
                                                            @Html.ValidationMessageFor(model => model.ClosingTime, "", new { @class = "text-danger" })

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                            @*<div class="form-group">
            <div class="col-md-12" style="border: 2px solid red; border-style: dashed; margin-top:15px; padding: 20px;">

                <span style="color:red;font-size:smaller">
                    * Monthly Incentive: @Model.MonthlyIncentive .
                    * Yearly Incentive @Model.YearlyIncentive .
                    * @Model.Condition . <br />
                    * Cash Commisssion will be set based on Product Category Cash Commisssion.<br />
                    * Base Commisssion will be set based on Product Subcategory Base Commisssion.<br />
                    * Carrying Commission will be set based on Upazila Factory Carrying Commission & Depo Carrying Commission.
                </span>
            </div>
        </div>*@

                                        </div>
                                    <div class="modal-footer">
                                        <div class="col-md-8">
                                            <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        </div>
                                        <div class="col-md-4">
                                            <button type="submit" id="btnSave" class="btn btn-primary btn-block "><i class='fa fa-plus'></i> Save Customer</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                }


            </div>

            <div class="box-body">
                <table id="KgErpDataTable" style="background-color:#ddd;width:100%" class="table table-striped">
                    <thead>
                        <tr>
                            <th style="width:5%">SL</th>

                            <th style="width:15%">Code</th>
                            <th style="width:20%">

                                Name
                            </th>

                            <th style="width:10%">
                                Type
                            </th>
                            <th style="width:10%">
                                Phone
                            </th>
                            <th style="width:10%">
                                Email
                            </th>
                            <th style="width:10%">
                                Zone
                            </th>
                            <th style="width:10%">
                                NID
                            </th>




                            <th style="width:10%">Action</th>
                        </tr>
                    </thead>
                    @{int sl = 0;
                    }
                    <tbody>
                        @foreach (var item in Model.DataList)
                        {
                            <tr>
                                <td style="width:5%">@(++sl)</td>
                                @*<td>@item.Common_CountriesFk || @item.HeadGLId || @item.NomineeName</td>*@
                                <td style="width:15%">
                                    @item.Code
                                </td>
                                <td style="width:20%">
                                    <a href="~/Report/FeedCustomerInfoReport?companyId=@Model.CompanyFK&vendorId=@item.ID"> @item.Name</a>


                                </td>

                                <td style="width:10%">
                                    <span class="bg-gray-light">
                                        @item.CustomerType
                                    </span>
                                </td>

                                <td style="width:6%">
                                    @item.Phone
                                </td>
                                <td style="width:10%">
                                    @item.Email
                                </td>
                                <td style="width:10%">
                                    @item.ZoneName
                                </td>
                                <td style="width:10%">
                                    @item.NID
                                </td>


                                <td style="width:14%">
                                    @*<a href="~/Vendor/CreateVendorDeed?companyId=8&vendorDeedId=@item.VendorDeedId&customerId=@item.ID" target="_blank" class="linkPointer btn btn-default btn-xs" title="Deed Configuration"><i class="fa fa-cog"></i></a>*@

                                    <a href="~/Configuration/CustomerUplode?customerId=@item.ID" target="_blank" class="linkPointer btn btn-success btn-xs" title="File Upload"><i class="fa fa-file"></i></a>
                                    <button id="@item.ID" type="button" onclick="makeEditble(@item.ID);" data-toggle="modal" data-target="#editPOModal" data-placement="top" class="linkPointer btn btn-warning btn-xs" title="Edit"><i class="fa fa-pencil-square-o"></i></button>
                                    <button id="@item.ID" type="button" onclick="makeDeletable(@item.ID);" class="linkPointer btn btn-danger btn-xs" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                            data-placement="top">
                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                    </button>

                                    @if (item.VendorTypeId == 2)
                                    {
                                        <a href="@Url.Action("Index","VendorOffer", new { vendorId = item.ID , productType ='F'})" title="Customer Offer" class="btn btn-primary btn-xs">
                                            <i class="fa fa-wrench" aria-hidden="true"></i>
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>














</section>





@using (Html.BeginForm("CommonCustomer", "Configuration", FormMethod.Post, new { id = "commonCustomerformId", @class = "formValidator", @enctype = "multipart/form-data" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { Value = "", id = "customerIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Customer Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this customer?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i>Confirm</button>
                </div>
            </div>
        </div>
    </div>
}






@section scripts {

    <script type="text/javascript">

        $(function () {
            var inputValue = $('input[name="Vendor.CustomerType"]:checked').val();
            if (inputValue == '1') {

                $('.creditParty').show();
            }
            else {
                $('#txtCreditCommission').val(0);

                $('.creditParty').hide();
            }
        })

        $('input[type="radio"]').click(function () {
            var inputValue = $(this).attr("value");
            if (inputValue == '1') {
                $('#txtCreditCommission').val(0.5);

                $('.creditParty').show();
            }
            else {
                $('#txtCreditCommission').val(0);

                $('.creditParty').hide();
            }

        });
        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();


        });
        $("#ddlZoneId").change(function (e) {
            var zoneId = $("#ddlZoneId :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonSubZonesGet", "Configuration")",
                datatype: "Json",
                    data: { id: zoneId },
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlSubZoneId").empty();
                            $("#ddlSubZoneId").append("<option value=''>==Select Territory==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlSubZoneId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
       });

         $("#ddlCommon_DivisionFk").change(function (e) {
                var commonDivisionFk = $("#ddlCommon_DivisionFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonDistrictsGet","Configuration")",
                datatype: "Json",
                data: { id:  commonDivisionFk },
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_DistrictsFk").empty();
                            $("#ddlCommon_DistrictsFk").append("<option value=''>==Select District==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_DistrictsFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
       });


        $("#ddlCommon_UpazilasFk").change(function (e) {
            var upazilasId = $("#ddlCommon_UpazilasFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("UpazilaGetById", "Configuration")",
                datatype: "Json",
                    data: { id: upazilasId},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            console.log(data);
                            $("#txtDepotCarrying").val(data.DepoCarryingCommission);
                            $("#txtFactoryCarrying").val(data.FacCarryingCommission);

                        }
                    }
                });
        });



         $("#ddlCommon_DistrictsFk").change(function (e) {
                var commonDistrictsFk = $("#ddlCommon_DistrictsFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonUpazilasGet", "Configuration")",
                datatype: "Json",
                data: { id:  commonDistrictsFk},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_UpazilasFk").empty();
                            $("#ddlCommon_UpazilasFk").append("<option value=''>==Select Police Station==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_UpazilasFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
        });


        $("#ddlZoneId").change(function (e) {
            var zoneId = $("#ddlZoneId :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("EmployeeGet", "Configuration")",
                datatype: "Json",
                    data: { zoneId: zoneId},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlSalesOfficerEmpId").empty();
                            $("#ddlSalesOfficerEmpId").append("<option value=''>==Select Sales Officer==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlSalesOfficerEmpId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
        });


        @*$("#ddlCommon_UpazilasFk").change(function (e) {
                var policeStationsFk = $("#ddlCommon_PoliceStationsFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonPostOfficesGet","Configuration")",
                datatype: "Json",
                data: { id:  policeStationsFk},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_PostOfficesFk").empty();
                            $("#ddlCommon_PostOfficesFk").append("<option value=''>==Select Post Office==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_PostOfficesFk").append("<option value='" + item.value + "'>" + item.text + "</option>");
                            });

                        }
                    }
                });
        });*@

        //<ani>


        function makeEditble(id) {
            console.log(id);
            if (id !== null) {
                $.ajax({
                type: "get",
                url: "@Url.Action("FeedCommonCustomerByIDGet", "Configuration")",
                    data: { id: id },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        console.log(data);

                        $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                        $('#customerId').val(data.ID);
                        $('#ActionId').val(2);
                        $('#CompanyFK').val(data.CompanyFK);
                        $('#txtCustomerName').val(data.Name);
                        $('#txtContactPerson').val(data.ContactPerson);
                        $('#txtPhone').val(data.Phone);


                        $('#txtEmail').val(data.Email);
                        $('#ddlCommon_DivisionFk').val(data.Common_DivisionFk);
                        $('#ddlSalesOfficerEmpId').val(data.SalesOfficerEmpId);

                        $('#ddlCommon_DistrictsFk').val(data.Common_DistrictsFk);
                        $('#ddlCommon_UpazilasFk').val(data.Common_UpazilasFk);
                        $('#ddlZoneId').val(data.ZoneId);
                        $('#ddlSubZoneId').val(data.SubZoneId);
                        $('#txtAddress').val(data.Address);
                        $('#txtNID').val(data.NID);
                        $('#txtCreditLimit').val(data.CreditLimit);
                        $('#ddCustomerTypeFk').val(data.CustomerTypeFk);
                        $('#ddNomineeRelation').val(data.NomineeRelation);
                        $('#txtSecurityAmount').val(data.SecurityAmount);
                        $('#ddlCustomerStatus').val(data.CustomerStatus);
                        //$('#txtPropietor').val(data.Propietor);
                        $('#txtPaymentType').val(data.PaymentType);
                        $('#txtBusinessAddress').val(data.BusinessAddress);
                        $('#txtNomineeNID').val(data.NomineeNID);
                        $('#txtNomineePhone').val(data.NomineePhone);
                        $('#txtNomineeName').val(data.NomineeName);

                        $('#txtFixedIncentive').val(data.FixedIncentive);
                        $('#txtFactoryCarrying').val(data.FactoryCarrying);
                        $('#txtDepotCarrying').val(data.DepotCarrying);

                        $('#txtMonthlyIncentive').val(data.MonthlyIncentive);
                        $('#txtYearlyIncentive').val(data.YearlyIncentive);
                        $('#txtFixedCommissionCattle').val(data.FixedCommissionCattle);
                        $('#txtFixedCommissionFish').val(data.FixedCommissionFish);
                        $('#txtFixedCommissionPoultry').val(data.FixedCommissionPoultry);


                        if (data.IsIncentiveInInvoice == true) {
                            $("#txtIsIncentiveInInvoice").prop("checked", true);
                        }
                        else {
                            $("#txtIsIncentiveInInvoice").prop("checked", false);

                        }

                        if (data.IsPoultry == true) {
                            $("#txtIsPoultry").prop("checked", true);
                        }
                        else {
                            $("#txtIsPoultry").prop("checked", false);

                        }
                        if (data.IsFish == true) {
                            $("#txtIsFish").prop("checked", true);
                        }
                        else {
                            $("#txtIsFish").prop("checked", false);

                        }
                        if (data.IsCattle == true) {
                            $("#txtIsCattle").prop("checked", true);
                        }
                        else {
                            $("#txtIsCattle").prop("checked", false);
                        }


                        $('#txtCashCommissionPoultry').val(data.CashCommissionPoultry);
                        $('#txtCashCommissionFish').val(data.CashCommissionFish);
                        $('#txtCashCommissionCattle').val(data.CashCommissionCattle);

                        $('#txtMonthlyTarget').val(data.MonthlyTarget);
                        $('#txtYearlyTarget').val(data.YearlyTarget);
                        $('#txtCreditRatioFrom').val(data.CreditRatioFrom);
                        $('#txtCreditRatioTo').val(data.CreditRatioTo);



                        window.scrollTo({ top: 0, behavior: 'smooth' });
                    },
                    error: function (error) {
                        console.error(error);
                    }

            });
            }
        }
        function resetForm() {
            $('#commonCustomerformId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#customerIdDelete').val(id);
                $('#ActionIdDelete').val(3);

            }
        }
        var fileIdCounter = 1;

        function addFileInput() {
            fileIdCounter++;

            var container = document.getElementById("file-container");
            var newInput = document.createElement("input");
            newInput.type = "file";
            newInput.id = "file-input-" + fileIdCounter;
            newInput.name = "Attachments";
            container.appendChild(newInput);
        }

        /*Ani*/
        

        window.onload = function () {
            toggleInputBox();
        };

        window.onload = function () {
            toggleInputBox('inputBox1Container');
        };

        function toggleInputBox(containerId) {
            var allContainers = document.querySelectorAll('.inputBoxContainer');
            allContainers.forEach(function (container) {
                container.style.display = 'none';
            });

            var selectedContainer = document.getElementById(containerId);
            if (selectedContainer) {
                selectedContainer.style.display = 'block';
            }
        }


    </script>
}

