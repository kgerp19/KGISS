@model KGERP.Service.HR_Pay_Roll_Service.PRoll_AdvanceCash.PRoll_AdvanceViewModel
@{
    ViewBag.Title = "AddAdvance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    input, select, textarea {
        max-width: 100%;
    }

    .content-header {
        padding: 10px 0.5rem;
    }

        .content-header .breadcrumb {
            background-color: white;
            line-height: 1.8rem;
            margin-bottom: 0;
            padding: 5px;
        }

    content-header .breadcrumb {
        line-height: 1.5rem;
    }

    .shadow {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important;
    }

    .align-items-center {
        -webkit-align-items: center !important;
        -ms-flex-align: center !important;
        align-items: center !important;
    }

    .justify-content-between {
        -webkit-justify-content: space-between !important;
        -ms-flex-pack: justify !important;
        justify-content: space-between !important;
    }

    .d-flex {
        display: -webkit-flex !important;
        display: -ms-flexbox !important;
        display: flex !important;
    }

    .breadcrumb {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 0.75rem 1rem;
        margin-bottom: 1rem;
        list-style: none;
        background-color: #e9ecef;
        border-radius: 0.25rem;
    }

    .card {
        box-shadow: 0 0 1px rgb(0 0 0 / 13%), 0 1px 3px rgb(0 0 0 / 20%);
        margin-bottom: 1rem;
    }

    .card {
        position: relative;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: 0.25rem;
    }

    .card-header:first-child {
        border-radius: calc(.25rem - 0) calc(.25rem - 0) 0 0;
    }

    .card-header {
        background-color: transparent;
        border-bottom: 1px solid rgba(0,0,0,.125);
        padding: 0.75rem 1.25rem;
        position: relative;
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }

    .card-header {
        padding: 0.75rem 1.25rem;
        margin-bottom: 0;
        background-color: #3f51b51f;
        border-bottom: 0 solid rgba(0,0,0,.125);
    }

    .card-body {
        -webkit-flex: 1 1 auto;
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        min-height: 1px;
        padding: 1.25rem;
    }

    .text-sm .card-title {
        font-size: 1rem;
    }

    .card-title {
        float: left;
        font-size: 2.1rem;
        font-weight: 400;
        margin: 0;
    }

    .card-title {
        margin-bottom: 0.75rem;
    }

    .mt-2 {
        margin-top: 15px
    }

    .mt-3 {
        margin-top: 20px
    }

    element.style {
        max-width: 100%;
    }

    .form-control:not(select) {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .form-control:not(select) {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .form-control {
        border-radius: 0;
        box-shadow: none;
        border-color: #d2d6de;
    }

        .form-control.intro {
            border: 1px solid #db1a1a !important;
        }

    .ui-datepicker-trigger .fa {
        padding: 10px;
        background: #ff9800;
        color: #fff;
    }

    .ui-datepicker-trigger {
        background: #ff9800;
        border: none;
    }

    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }
</style>

<div class="bg-w">
    <b style="padding:5px"> Add Advance Cash </b>
</div>


@using (Html.BeginForm("AddAdvance", "PRoll_Advance_Cash", FormMethod.Post))
{

    <div class="container-fluid" style="margin-top: 20px; border: 1px solid #f0ffff; padding: 28px 18px 21px 18px; background: #fff ">

        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label">Companies<b style="color:red"> *</b> </label>
                    @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select Company---", new { id = "CompanyId", @class = "searchingDropdown  customStyle", @style = "width: 100%;", required = "required" })
                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Employee:</label><br />
                    @Html.DropDownListFor(model => model.EmployeeId, new SelectList(string.Empty), "==Select Employee==", new { id = "EmployeeId", @class = "form-control searchingDropdown", required = "required", @style = "max-width: 100%;" })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label>Advance Date</label>
                    <div style="display:flex">
                        @Html.EditorFor(model => model.AdvanceDateString, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.AdvanceDateString, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label>Installment Start Date</label>
                    <div style="display:flex">
                        @Html.EditorFor(model => model.InstallmentStartDateString, new { htmlAttributes = new { @class = "datepicker form-control", @id = "InstallmentStartDateString", @autocomplete = "off" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.InstallmentStartDateString, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Installment Type:</label>
                    @Html.DropDownListFor(model => model.InstallmentTypeId, new SelectList(Model.InstallmentType, "Value", "Text"), "---Select Installment Type---", new { id = "InstallmentTypeId", @class = "searchingDropdown  customStyle", @style = "width: 100%;" })
                    @Html.ValidationMessageFor(model => model.InstallmentTypeId, "", new { @class = "text-danger" })
                </div>
            </div> 
            
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">AdVance Type:</label>
                    @Html.DropDownListFor(model => model.AdvanceTypeId, new SelectList(Model.AdVanceType, "Value", "Text"), "---Select AdVance Type---", new { id = "AdVanceTypeId", @class = "searchingDropdown  customStyle", @style = "width: 100%;" })
                    @Html.ValidationMessageFor(model => model.AdvanceTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            
            
            
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label"> No of Installment <b style="color:red"> </b> </label>
                    @Html.EditorFor(model => model.NoOfInstallment, new { htmlAttributes = new { @class = "form-control customStyle", @id = "NoOfInstallment", @autocomplete = "off", @style = "max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.NoOfInstallment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label"> Total Amount<b style="color:red"> </b> </label>
                    @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control customStyle", @id = "TotalAmount", @autocomplete = "off", @style = "max-width: 100%;" } })
                    @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <button type="button" class="btn btn-primary" id="process"> Installment Process </button>
            </div>
            <div class="col-md-4"></div>
        </div>
        <h4> <b> Installment List </b> </h4>
        <div class="progress" style="height: 3px;">
            <div class="progress-bar" role="progressbar" style="width: 11%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
        </div>

        <div class="row">
            <table class="table">
                <thead>
                    <tr>
                        <th style="width:10%;">SL</th>
                        <th style="width:10%;">Title </th>
                        <th style="width:10%;">Date </th>
                        <th style="width:10%;">Amount </th>
                    </tr>
                </thead>
                <tbody id="Installment">
                </tbody>
            </table>

        </div>


        <div class="row">
            <div class="col-md-5"></div>
            <div class="col-md-2 " style="margin-top:20px">
                <input type="submit" value="Add New" style="width:100%;height:45px" class="btn btn-primary" />
            </div>
            <div class="col-md-5 "></div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
<script>
          $("#process").click(function () {
              onlode();
           
          });

    $(document).ready(function () {
        getEmployee();
    });
        function getEmployee() {
                /*var companyId = $("#CompanyId option:selected").val();*/
                $.ajax({
                    type: "GET",
                    url: "/FoodBill/GetAllEmployeeinfo",
                    datatype: "Json",
                    data: { companyId: @Model.CompanyId },
                    success: function (data) {
                        $("#EmployeeId").empty();
                        $("#EmployeeId").append("<option value=''>==Select Employee==</option>");
                        $(data).each(function (index, item) {
                            $("#EmployeeId").append("<option value='" + item.Id + "'>" + item.Name + "(" + item.EmployeeId + ")</option>");
                        });
                    }
                });
          };


        $("#CompanyId").change(function () {
        var companyId = $("#CompanyId option:selected").val();
        $.ajax({
            type: "GET",
            url: "/FoodBill/GetAllEmployeeinfo",
            datatype: "Json",
            data: { companyId:companyId},
            success: function (data) {
            $("#EmployeeId").empty();
            $("#EmployeeId").append("<option value=''>==Select Employee==</option>");
            $(data).each(function (index, item) {
            $("#EmployeeId").append("<option value='" + item.Id + "'>" + item.Name + "(" + item.EmployeeId + ")</option>");
            });
            }
            });
        });



           function onlode() {
               var typeid = $('#InstallmentTypeId').val();
                //var datalist = installmentType.find(d => d.Value == parseFloat(typeid));
                var restofAmountId = $("#TotalAmount").val();
                var noOfInstallMent = $("#NoOfInstallment").val();
               /*var bookingDate = $("#txtBookingDate").val();*/
                var bookingDate = $("#InstallmentStartDateString").val();
                if (bookingDate == null || bookingDate == undefined) {
                    alert('Please select Booking Date First');
                    return;
                }

                //console.debug(applicationDate);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("InstallmentSchedule", "PRoll_Advance_Cash")",
                    datatype: "Json",
                    data: { conmpanyId:@Model.CompanyId, installmentId: typeid, NoOfInstallment: noOfInstallMent, restofAmount: restofAmountId, BookingDate: bookingDate },
                    success: function (data) {
                        console.log("ffffffffff", data);
                        InstallmentTotal = 0;
                        if (data) {
                            var tag = '';
                            $.each(data.LstSchedules, function (key, item) {
                               // var InstallmentDate = DateCustom(item.InstallmentDate);
                                console.log(data.LstSchedules);
                                tag += '<tr id="' + key + '">';
                                tag += '<td> ' + (key + 1) + '</td>';
                                tag += '<td><input  type="hidden" id="' + key + item.Title + '" name="Schedule[' + key + '].Title" value="' + item.Title + '"/>' + item.Title + '</td>';
                                tag += '<td><input class="form-control js-date"  name="Schedule[' + key + '].StringDate" value="' + item.StringDate + '"/></td>';
                                tag += '<td><input id="' + key + "Schedule" + '"type="number" min="0" class="ScheduleAmount form-control" name="Schedule[' + key + '].Amount" value="' + item.PayableAmount.toFixed(2) + '"/> <input type="hidden" name="Schedule[' + key + '].SortOrder" value="' + item.SortOrder + '"/> <input type="hidden" name="Schedule[' + key + '].Title" value="' + item.Title + '"/> <input type="hidden" name="Schedule[' + key + '].InstallmentId" value="' + item.InstallmentId + '"/> </td>';
                                // tag += '<td> <a onclick="removecell(' + item.VendorId + ',' + key + ')" class=" btn-outline-danger btn-flat btn-sm sm"> <i class="fa fa-trash"></i></a> <a onclick="Editcell(' + item.VendorId + ',' + key + ')" class=" btn-outline-danger btn-flat btn-sm sm"> <i class="fa fa-pencil-square-o"></i></a></td>';
                                tag += '</tr>';
                                InstallmentTotal = parseFloat(InstallmentTotal) + parseFloat(item.PayableAmount);
                            });

                            tag += '<tr>';
                            tag += '<td colspan="3"> <b> Total </b></td>';
                            tag += '<td> ' + InstallmentTotal.toFixed(2) + '</td>';
                            tag += '</tr>';
                            $('#Installment').empty();
                            $('#Installment').html(tag);
                        }
                    },
                    error: function (xhr) {
                        //console.log(xhr);
                    }

                });
            }

</script>
}




