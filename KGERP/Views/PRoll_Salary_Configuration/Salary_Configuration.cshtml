@model KGERP.Service.HR_Pay_Roll_Service.PRoll_SalaryConfiguration_Services.PRoll_SalaryConfigurationViewModel
@{
    ViewBag.Title = "Salary_Configuration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }
</style>
<div class="bg-w">
    <b style="padding:5px"> Salary Configuration </b>
</div>



@using (Html.BeginForm("Salary_Configuration", "PRoll_Salary_Configuration", FormMethod.Post))
{
    <div class="container-fluid" style="margin-top: 20px; border: 1px solid #f0ffff; padding: 28px 18px 21px 18px; background: #fff ">

        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label">Companies<b style="color:red"> *</b> </label>
                    @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select Company---", new { id = "CompanyId", @class = "searchingDropdown  customStyle", @style = "width: 100%;", required = "required" })
                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="col-md-3" >
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Employee:</label><br />
                    @Html.DropDownListFor(model => model.EmployeeId, new SelectList(string.Empty), "==Select Employee==", new { id = "EmployeeId", @class = "form-control searchingDropdown", required = "required", @style = "max-width: 100%;" })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Gross:</label>
                    @Html.EditorFor(model => model.Gross, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Gross", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Gross, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Basic (54% of Gross):</label>
                    @Html.EditorFor(model => model.Basic, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Basic", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Basic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">House Rent:</label>
                    @Html.EditorFor(model => model.HouseRent, new { htmlAttributes = new { @class = "form-control customStyle", @id = "HouseRent", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.HouseRent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Medical:</label>
                    @Html.EditorFor(model => model.Medical, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Medical", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Medical, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Transportation:</label>
                    @Html.EditorFor(model => model.Transportation, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Transportation", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Transportation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Mobile Bill:</label>
                    @Html.EditorFor(model => model.MobileBill, new { htmlAttributes = new { @class = "form-control customStyle", @id = "MobileBill", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.MobileBill, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Tax:</label>
                    @Html.EditorFor(model => model.Tax_D, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Tax_D", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Tax_D, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Provident Fund (%): <span id="ProvidentFund_DValue" /></label>
                    @Html.EditorFor(model => model.ProvidentFund_D, new { htmlAttributes = new { @class = "form-control customStyle", @id = "ProvidentFund_D", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.ProvidentFund_D, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Welfare:</label>
                    @Html.EditorFor(model => model.Welfare_D, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Welfare_D", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Welfare_D, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Rent :</label>
                    @Html.EditorFor(model => model.Rent_D, new { htmlAttributes = new { @class = "form-control customStyle", @id = "Rent_D", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Rent_D, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Transport (Add):</label>
                    @Html.EditorFor(model => model.TransportationAddition, new { htmlAttributes = new { @class = "form-control customStyle", @id = "TransportationAddition", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.TransportationAddition, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">PayRoll Sheet:</label><br />
                    @Html.DropDownListFor(model => model.RollSheetId, Model.DDLPayrollShit, new { @class = "form-control", @style = "max-width: 100%;" })
                </div>
            </div>
            <div class="col-md-2">
                <span>&nbsp;</span>
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Is Bonus Allowed:</label>
                    @Html.CheckBoxFor(model => model.IsBonusAllowed, new { htmlAttributes = new { @class = "form-control customStyle", @id = "IsBonusAllowed", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-5"></div>
        <div class="col-md-2 " style="margin-top:20px">
            <input type="submit" value="Save" style="width:100%;height:45px" class="btn btn-primary" />
        </div>
        <div class="col-md-5 "></div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

<script>
    $(document).ready(function () {
        $("#EmployeeId").change((e) => {
            let result = e.target.value;
            $.ajax({
                type: "GET",
                url: "/PRoll_Salary_Configuration/GetEmployeePRollSheetIdByEmployeeId",
                datatype: "Json",
                data: { empId: result },
                success: function (data) {
                    if (data>0) {
                        $("#RollSheetId").val(data);
                    } 
                }
            });
            
        })

        $("#CompanyId").change(function () {
            let compID = $("#CompanyId").val();
            if (compID != "") {
                HttpRequest.DropDown("GET", "/PRoll_Salary_Configuration/GetEmployeePRollSheetIdByCompany", { ComId: compID }, 'RollSheetId', true);
                $("#RollSheetId").trigger('change');
            } else {
                HttpRequest.DropDownDefault("RollSheetId");
            }
        });

        $('#IsBonusAllowed').prop('checked', true);
            getEmployee();
            $("#Gross").keyup(function () {
                var res = $("#Gross").val();
                var basic = (54 / 100) * res;
                $("#Basic").val(basic.toFixed(0));
                var Provident = (10 / 100) * basic;
                $("#ProvidentFund_D").val(10);
                $("#ProvidentFund_DValue").text(Provident);
                var HouseRent = (40 / 100) * basic;
                $("#HouseRent").val(HouseRent.toFixed(0));
                var Medical = (10 / 100) * basic;
                $("#Medical").val(Medical.toFixed(0));
                var Transportation = (10 / 100) * basic;
                $("#Transportation").val(Transportation.toFixed(0));
                var totalGross = res - (basic + HouseRent + Medical + Transportation).toFixed(0)
                $("#MobileBill").val(totalGross);
            });

            $("#ProvidentFund_D").keyup(function () {
                var res = $("#Gross").val();
                var basic = (54 / 100) * Number( res);
                var provPerc = $("#ProvidentFund_D").val();
                var Provident = (Number(provPerc) / 100) * Number( basic);

                $("#ProvidentFund_DValue").text(Provident);

            });

            $("#Welfare_D").keyup(function () {
                var res = $("#Gross").val();
                console.log(res);
                var basic = $("#Basic").val();
                var Provident = (10 / 100) * basic;
                var HouseRent = $("#HouseRent").val();
                var Medical = $("#Medical").val();
                var Transportation = $("#Transportation").val();
                var Welfare = $("#Welfare_D").val();
                var mobile = res - (basic + HouseRent + Medical + Transportation + Welfare + Provident).toFixed(0)

                $("#MobileBill").val(mobile);

                //if (wd > 0) {
                //    if (totalGross > wd) {
                //        var newres = totalGross - wd;
                //        $("#MobileBill").val(newres);
                //    } else {
                //        $("#Welfare_D").val(totalGross);
                //        $("#MobileBill").val(0);
                //    }

                //} else {
                //    $("#MobileBill").val(totalGross);
                //}

            })
        });

function getEmployee() {
                var companyId = $("#CompanyId option:selected").val();
                //console.log(companyId);
                $.ajax({
                    type: "GET",
                    url: "/FoodBill/GetAllEmployeeinfoforConfiguration",
                    datatype: "Json",
                    data: { companyId: @Model.CompanyId },
                    success: function (data) {
                        $("#EmployeeId").empty();
                        $("#EmployeeId").append("<option value=''>==Select Employee==</option>");
                        $(data).each(function (index, item) {
                            $("#EmployeeId").append("<option value='" + item.Id + "'>" + item.Name + "(" + item.EmployeeId + ")</option>");
                        });
                    }
                });
            };
        $("#CompanyId").change(function () {
        var companyId = $("#CompanyId option:selected").val();
        $.ajax({
            type: "GET",
            url: "/FoodBill/GetEmployeeinfo",
            datatype: "Json",
            data: { companyId:companyId},
            success: function (data) {
            $("#EmployeeId").empty();
            $("#EmployeeId").append("<option value=''>==Select Employee==</option>");
            $(data).each(function (index, item) {
            $("#EmployeeId").append("<option value='" + item.Id + "'>" + item.Name + "(" + item.EmployeeId + ")</option>");
            });
            }
            });
    });


</script>

}
