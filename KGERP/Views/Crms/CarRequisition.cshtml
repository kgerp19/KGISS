@model KGERP.Data.CustomModel.VehicleVm
@{
    ViewBag.Title = "CarRequisition";
    Layout = "~/Views/Shared/_LayoutCrm.cshtml";
}


<style>
    .gradient-custom {
        background: -webkit-linear-gradient(left, #3931af, #00c6ff);
    }

    .card-custom {
        border-bottom-left-radius: 10% 50%;
        border-top-left-radius: 10% 50%;
        background-color: #f8f9fa;
    }


    .input-container {
        width: 300px;
        background-color: #ffffff;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
    }

    .label-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 15px;
    }

    .label {
        background-color: #007bff;
        color: #ffffff;
        border-radius: 5px;
        padding: 5px 10px;
        font-weight: bold;
    }

    input[type="text"] {
        width: 100%;
        padding: 10px;
        border: none;
        border-bottom: 2px solid #343A40;
        background-color: transparent;
        font-size: 16px;
        transition: border-bottom 0.3s ease;
    }

        input[type="text"]:focus {
            outline: none;
            border-bottom: 2px solid #343A40;
        }

    input::placeholder {
        color: #aaa;
        font-style: italic;
    }

    .white-text {
        color: hsl(52, 0%, 98%);
        font-weight: 100;
        font-size: 14px;
    }

    .back-button {
        background-color: hsl(52, 0%, 98%);
        font-weight: 700;
        color: black;
        margin-top: 50px;
    }

    .custom-heading {
        font-family: 'Arial', sans-serif;
        font-size: 20px;
        color: #343A40;
        text-transform: uppercase;
        text-align: center;
        padding: 20px;
        background-color: #f0f0f0;
    }

    .buttonSubmit {
        background-color: #ddd;
        border: none;
        color: black;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 16px;
    }

        .buttonSubmit:hover {
            background-color: #f1f1f1;
        }
</style>

<div class="row mt-3 mx-3 bg-dark " style="margin-top: 25px; ">
    <div class="col-md-3">
        <div style="margin-top: 50px; margin-left: 10px;" class="text-center">
            <i id="animationDemo" data-mdb-animation="slide-right" data-mdb-toggle="animation"
               data-mdb-animation-reset="true" data-mdb-animation-start="onScroll"
               data-mdb-animation-on-scroll="repeat" class="fas fa-3x fa-shipping-fast text-white hvr-forward"></i>
            <h3 class="mt-3 text-white">Welcome</h3>
            <p class="white-text">In Order to check your requision list, click here</p>
        </div>
        <div class="text-center">
            <a href="CarRequisitionListIdividual?CompanyId=@Model.CompanyId" class="btn btn-light hvr-skew-backward">My Requision</a>
        </div>


    </div>

    <div class="col-md-9 justify-content-center">
        <div class="card card-custom pb-4">
            <div class="card-body mt-0 mx-5">
                <div class="text-center mb-3 pb-2 mt-3">
                    <h4 class="custom-heading">Create Car Requisition</h4>
                </div>

                @using (Html.BeginForm("CarRequisition", "Crms", FormMethod.Post, new { id = "CarReq", @class = "formValidator" }))
                {
                    @Html.HiddenFor(x => x.CompanyId)
                    @Html.HiddenFor(x => x.ResponsibleOfficerId)
                    @Html.HiddenFor(x => x.VehicleRequisitionId)

                    <div class="row mb-4">
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.OfficerName, new { htmlAttributes = new { @class = "form-control input-custom", @readonly = "readonly" }, rows = "1" })
                                <label class="form-label" for="form9Example1">Officer Name</label>
                            </div>

                        </div>
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control input-custom", @id = "timePicker" }, rows = "1" })
                                <label class="form-label" for="timePicker">Time</label>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control input-custom" }, rows = "1" })
                                <label class="form-label" for="form9Example3">Location</label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.TotalPersion, new { htmlAttributes = new { @class = "form-control input-custom" }, rows = "1" })
                                <label class="form-label" for="form9Example4">Total Persion</label>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.Strdate, new { htmlAttributes = new { @id = "datepicker", @class = "form-control input-custom" }, rows = "1" })
                                <label class="form-label" for="datepicker">Date</label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-outline">
                                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @id = "Reason", @class = "form-control input-custom" }, rows = "1" })
                                <label class="form-label" for="datepicker">Reason</label>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-6">
                            <div class="form-outline">
                                <select required class=" form-control col-md-12  " name="PrijectId" id="ProjectId">
                                    <option value="0">---Select Project--- </option>
                                    @{
                                        foreach (var item in Model.ProjectList)
                                        {
                                            if (item.Id == Model.PrijectId)
                                            {
                                                <option value="@item.Id" selected>@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.Id">@item.Name</option>
                                            }

                                        }


}
                                </select>
                                <label class="form-label" for="datepicker">Project</label>
                            </div>
                        </div>

                    </div><div class="text-center">
    <!-- Submit button -->
    @if (Model.VehicleRequisitionId == 0)
    {


        <button type="submit" class="btn  text-light  buttonSubmit"
                style="background-color: #343A40;">
            Save
        </button>
    }
    else
    {
        <button type="submit" class="btn  text-light  buttonSubmit"
                style="background-color: #343A40;">
            Update
        </button>
    }

</div>

                }
            </div>
        </div>
    </div>

</div>

@section scripts {
    <!-- jQuery -->



    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.3.5/jquery.timepicker.min.js"></script>
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        // Your custom JavaScript code here
        flatpickr("#timePicker", {
            enableTime: true, // Allow time selection
            noCalendar: true, // Hide the calendar
            dateFormat: "h:i K", // 12-hour format (e.g., "2:30 PM")
        });
        // Initialize the datepicker
        $(function () {


            $("#datepicker").datepicker({
                dateFormat: "dd/mm/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });
    </script>
}




