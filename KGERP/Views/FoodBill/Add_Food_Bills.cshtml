@model KGERP.Service.HR_Pay_Roll_Service.Food_Bill_Services.FoodBillViewModel
@{
    ViewBag.Title = "Add_Food_Bills";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    input, select, textarea {
        max-width: 100%;
    }

    .content-header {
        padding: 10px 0.5rem;
    }

        .content-header .breadcrumb {
            background-color: white;
            line-height: 1.8rem;
            margin-bottom: 0;
            padding: 5px;
        }

    content-header .breadcrumb {
        line-height: 1.5rem;
    }

    .shadow {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important;
    }

    .align-items-center {
        -webkit-align-items: center !important;
        -ms-flex-align: center !important;
        align-items: center !important;
    }

    .justify-content-between {
        -webkit-justify-content: space-between !important;
        -ms-flex-pack: justify !important;
        justify-content: space-between !important;
    }

    .d-flex {
        display: -webkit-flex !important;
        display: -ms-flexbox !important;
        display: flex !important;
    }

    .breadcrumb {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        padding: 0.75rem 1rem;
        margin-bottom: 1rem;
        list-style: none;
        background-color: #e9ecef;
        border-radius: 0.25rem;
    }

    .card {
        box-shadow: 0 0 1px rgb(0 0 0 / 13%), 0 1px 3px rgb(0 0 0 / 20%);
        margin-bottom: 1rem;
    }

    .card {
        position: relative;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: 0.25rem;
    }

    .card-header:first-child {
        border-radius: calc(.25rem - 0) calc(.25rem - 0) 0 0;
    }

    .card-header {
        background-color: transparent;
        border-bottom: 1px solid rgba(0,0,0,.125);
        padding: 0.75rem 1.25rem;
        position: relative;
        border-top-left-radius: 0.25rem;
        border-top-right-radius: 0.25rem;
    }

    .card-header {
        padding: 0.75rem 1.25rem;
        margin-bottom: 0;
        background-color: #3f51b51f;
        border-bottom: 0 solid rgba(0,0,0,.125);
    }

    .card-body {
        -webkit-flex: 1 1 auto;
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        min-height: 1px;
        padding: 1.25rem;
    }

    .text-sm .card-title {
        font-size: 1rem;
    }

    .card-title {
        float: left;
        font-size: 2.1rem;
        font-weight: 400;
        margin: 0;
    }

    .card-title {
        margin-bottom: 0.75rem;
    }

    .mt-2 {
        margin-top: 15px
    }

    .mt-3 {
        margin-top: 20px
    }

    element.style {
        max-width: 100%;
    }

    .form-control:not(select) {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .form-control:not(select) {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .form-control {
        border-radius: 0;
        box-shadow: none;
        border-color: #d2d6de;
    }

        .form-control.intro {
            border: 1px solid #db1a1a !important;
        }

    .ui-datepicker-trigger .fa {
        padding: 10px;
        background: #ff9800;
        color: #fff;
    }

    .ui-datepicker-trigger {
        background: #ff9800;
        border: none;
    }

    .bg-div {
        padding: 0.75rem 1.25rem;
        margin-bottom: 0;
        background-color: #3f51b51f;
        border-bottom: 0 solid rgba(0,0,0,.125);
    }
</style>
<div class="content-header">
    <div class="container-fluid ">
        <div class="breadcrumb d-flex justify-content-between align-items-center pl-3 pr-3">
            <ol class="breadcrumb mb-0 p-0">
                <li class="breadcrumb-item active">  <b style="font-size:27px;"> Add New Food Bills </b>  </li>
            </ol>
        </div>
    </div>
</div>



@using (Html.BeginForm("Add_Food_Bills", "FoodBill", FormMethod.Post))
{

    <div class="container-fluid" style="margin-top: 20px; border: 1px solid #f0ffff; padding: 28px 18px 21px 18px; background: #fff ">

        <div class="row">
            @*<div class="col-md-4">
            <div class="form-group">
                <label class="control-label">Companies<b style="color:red"> *</b> </label>
                @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select Company---", new { id = "CompanyId", @class = "searchingDropdown  customStyle", @style = "width: 100%;", required = "required" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })

            </div>
        </div>*@
            @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyId" })

            <div class="col-md-3">
                <div class="form-group">
                    <label> Months </label>
                    @Html.DropDownListFor(model => model.Month, Model.MonthList as SelectList, "==Select Month ==", new { id = "ddlMonth", @class = "form-control ddlReset", style = "width:100%", required = "required" })
                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label class="control-label"> Years<b style="color:red"> *</b> </label>
                    @Html.DropDownListFor(model => model.Year, new SelectList(Model.YearsList, "Value", "Text"), "---Select Years---", new { id = "Year", @class = "searchingDropdown  customStyle", @style = "width: 100%;", required = "required" })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Lunch Rate:</label>
                    @Html.EditorFor(model => model.LunchRate, new { htmlAttributes = new { @class = "form-control customStyle", @id = "LunchRate", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.LunchRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Breakfast Rate:</label>
                    @Html.EditorFor(model => model.BreakfastRate, new { htmlAttributes = new { @class = "form-control customStyle", @id = "BreakfastRate", @autocomplete = "off", @style = "max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(model => model.BreakfastRate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Remarks: <i title="Use it if you want to add the food bill for the same month." onclick="disableRemove()" class="fa fa-info-circle fa-sm" aria-hidden="true"></i></label>
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control customStyle", @id = "txtRemarks", @autocomplete = "off", @style = "max-width: 100%;" } })
                </div>
            </div>
        </div>

        <div class="row">
            <table class="table">
                <thead>
                    <tr>
                        <th style="width:10%;">SL</th>
                        <th style="width:10%;">Employee Id</th>
                        <th style="width:10%;">Name</th>
                        <th style="width:10%;">No Of Lunch</th>
                        <th style="width:10%;">No Of Breakfast</th>
                    </tr>
                </thead>
                <tbody id="sowData">
                </tbody>
            </table>

        </div>


        <div class="row">
            <div class="col-md-5"></div>
            <div class="col-md-2 " style="margin-top:20px">
                <input type="submit" value="Food Bill Submit" style="width:100%;height:45px" class="btn btn-primary" />
            </div>
            <div class="col-md-5 "></div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

<script>
    // A $( document ).ready() block.

    const disableRemove = () => {
        const $element = $("#txtRemarks");
        if ($element.is("[disabled]")) {
            $element.removeAttr("disabled");
        } else {
            $element.attr("disabled", "disabled");
        }
    }
    $(document).ready(function () {
        var companyId = @Model.CompanyId;
        $("#sowData").empty();
        console.log(companyId);
        $.ajax({
            type: "GET",
            url: "/FoodBill/GetEmployeeinfo",
            datatype: "Json",
            data: { companyId: companyId },
            success: function (data) {
                console.log("data", data);
                var tag = '';
                $.each(data, function (key, item) {
                    tag += '<tr id="' + key + '">';
                    tag += '<td> ' + (key + 1) + '</td>';
                    tag += '<td> <input type="hidden" id="' + key + item.Id + '" name="FoodBillDetalies[' + key + '].EmployeeId" value="' + item.Id + '"/> ' + item.EmployeeId + '</td>';
                    tag += '<td> ' + item.Name + '</td>';
                    tag += '<td> <input id="' + key + item.NoOfLunch + '" name="FoodBillDetalies[' + key + '].NoOfLunch" value="' + item.NoOfLunch + '"/></td>';
                    tag += '<td> <input id="' + key + item.NoOfBreakfast + '" name="FoodBillDetalies[' + key + '].NoOfBreakfast" value="' + item.NoOfBreakfast + '"/> </td>';
                    tag += '</tr>';
                })
                $('#sowData').html(tag);
            }
        });
    });
    $("#CompanyId").change(function () {
        var companyId = $("#CompanyId").val();
        $("#sowData").empty();
        console.log(companyId);
        $.ajax({
            type: "GET",
            url: "/FoodBill/GetEmployeeinfo",
            datatype: "Json",
            data: {companyId:companyId},
            success: function (data) {
                console.log("data", data);
                var tag = '';
                $.each(data, function (key, item) {
                    tag += '<tr id="' + key + '">';
                    tag += '<td> ' + (key + 1) + '</td>';
                    tag += '<td> <input type="hidden" id="' + key + item.Id + '" name="FoodBillDetalies[' + key + '].EmployeeId" value="' + item.Id + '"/> ' + item.EmployeeId + '</td>';
                    tag += '<td> ' + item.Name + '</td>';
                    tag += '<td> <input id="' + key + item.NoOfLunch + '" name="FoodBillDetalies[' + key + '].NoOfLunch" value="' + item.NoOfLunch + '"/></td>';
                    tag += '<td> <input id="' + key + item.NoOfBreakfast + '" name="FoodBillDetalies[' + key + '].NoOfBreakfast" value="' + item.NoOfBreakfast + '"/> </td>';
                    tag += '</tr>';
                })
                $('#sowData').html(tag);
            }
        });
        });

</script>

}