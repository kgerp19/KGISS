@model KGERP.Service.ServiceModel.RealState.MoneyReceiptViewModel
@using KGERP.Utility;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sl = 1;
}
<style>
    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }

    .bg-w2 {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 8px;
        font-weight: 900;
    }

    .form-control.input-validation-error:focus {
        border-color: red !important;
    }

    .chosen-container-multi .chosen-choices li.search-field input[type=text] {
        margin: 1px 0;
        padding: 0;
        height: 39px;
        outline: 0;
        border: 0 !important;
        background: transparent !important;
        box-shadow: none;
        color: #999;
        font-size: 100%;
        font-family: sans-serif;
        line-height: normal;
        border-radius: 0;
    }

    .box {
        position: relative;
        border-radius: 3px;
        background: #ffffff;
        border-top: 3px solid #ffffff;
        margin-bottom: 20px;
        width: 100%;
        box-shadow: 0 1px 1px rgb(0 0 0 / 10%);
    }

    .skin-blue .content-header {
        background: #ccffce;
    }

    .content-header {
        position: relative;
        padding: 15px 15px 15px 15px;
    }

    #IsApproveSMS {
        margin: 4px 0 0;
        margin-top: 1px \9;
        line-height: normal;
        width: 4.25rem !important;
        height: 4.25rem !important;
    }
</style>

@using (Html.BeginForm("Create", "Kfml_InstallmentCollaction", FormMethod.Post))
{    if (Model.MoneyReceiptId > 0)
    {
        <div class="row">
            <table class="table">

                <tr>
                    <th style="width:18%">
                        Money Receipt No
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        <label>@Model.MoneyReceiptNo</label>
                    </td>
                    <th style="width:18%"> Money Receipt Date</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @if (Model.MoneyReceiptDate == null)
                        { }
                        else
                        {@Model.MoneyReceiptDate.Value.ToLongDateString()
                    }
                    </td>
                </tr>


                <tr>
                    <th style="width:18%">
                        Client Name
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        <label>@Model.ClientName</label>
                    </td>
                    <th style="width:18%"> Purpose</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.AgainstString
                        @if (Model.IsShort == true && Model.IsSubmitted == false)
                        {
                            <br />
                            <b> <a style="font-size: 35px;" data-toggle="modal" data-target=".bd-example-modal-lg"> <i class="fa fa-edit"></i> </a></b>
                        }

                    </td>
                </tr>

                <tr>
                    <th style="width:18%">
                        Booking No
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        <label>@Model.BookingNo</label>
                    </td>
                    <th style="width:18%"> Product Categories </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.ProjectName
                    </td>
                </tr>

                <tr>
                    <th style="width:18%">
                        Pay Type
                    </th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @if (Model.PayTypeId == 1)
                        {<span> Cash</span> }
                        else
                        {
                            <span> Bank</span>
                        }

                    </td>
                    <th style="width:18%"> Amount</th>
                    <th style="width:2%">:</th>
                    <td style="width:30%">
                        @Model.Amount Tk
                        <input type="hidden" id="Amo" value="@Model.Amount" />
                    </td>
                </tr>

                <tr>
                    @if (Model.PayTypeId == 2)
                    {

                        <th style="width:18%">
                            Bank Name
                        </th>
                        <th style="width:2%">:</th>
                        <td style="width:30%">
                            <label>@Model.BankName</label>
                        </td>
                        <th style="width:18%"> Cheque Date </th>
                        <th style="width:2%">:</th>
                        <td style="width:30%">
                            @Model.ChequeDate.Value.ToLongDateString()
                        </td>
                    }
                </tr>

            </table>

            <div class="row">
                <div class="col-md-12">

                    <section style="margin-bottom:20px;font-size:25px">
                        <h3 class="bg-w2" style="padding-left:15px"><b>  Money Receipt Details</b> </h3>
                    </section>
                </div>
            </div>

            <div class="table-responsive" style="margin-bottom:30px">
                <table id="KgErpDataTable" class="table table-striped table-hover" style="margin-top:20px">
                    <thead>
                        <tr>
                            <th style="padding:5px;text-align:center;">SL</th>
                            <th style="padding:5px;text-align:left;">Collection From</th>

                            <th style="padding:5px;text-align:center;">Amount</th>
                            <th style="padding:5px;text-align:center;">Colledcted Amount</th>

                            @if (Model.IsSubmitted == false)
                            {
                                <th style="padding:5px;text-align:center;">Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.MoneyReceiptList)
                        {

                            <tr>
                                <td style="padding:5px">@(++sl)</td>
                                <td>@item.CollectionFrom</td>
                                <td style="text-align: center">@item.Amount</td>
                                <td style="text-align: center">@item.PaidAmount</td>

                                @if (Model.IsSubmitted == false)
                                {
                                    <td style="padding:5px;text-align:center;">
                                        <a id="@item.MoneyReceiptDetailId" data-toggle="modal" data-target="#exampleModal" onclick="makeEditble(@item.MoneyReceiptDetailId);" class="linkPointer" title="Edit"><i class="fa fa-edit" aria-hidden="true" style="font-size: 34px"></i></a>

                                    </td>
                                }

                            </tr>
                        }
                        <tr>
                            <td colspan="3" class="text-right"> Total Pay</td>
                            <td colspan="2" class="text-center">
                                <input type="hidden" id="TotalAmount" value="@Model.TotalAmount" />
                                <b id="paytext"> @Model.TotalAmount </b>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>



            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-4">
                    @*<a class="btn btn-info" target="_blank" style="width:100%" href="/Report/MoneyReceipts?companyId=@Model.CompanyId&&moneyReceiptId=@Model.MoneyReceiptId">Print Money Receipt</a>*@
                </div>
                <div class="col-md-5">
                    @if (Model.MoneyReceiptId > 0)
                    {
                        if (Model.TotalAmount == Model.Amount)
                        {
                            if (Model.IsSubmitted == true)
                            {
                                <input type="button" value="Submitted Successfully" disabled style="width:100%" class="btn btn-info" />
                            }
                            else
                            {
                                <input type="button" id="btnSubmitId" data-toggle="modal" value="Submit" data-target="#exampleModal2" style="width:100%" class="btn btn-success" />

                            }
                        }
                        else
                        {
                            <input type="button" value="Submit" disabled style="width:100%" class="btn btn-success" />

                        }
                    }
                </div>
            </div>
        </div>
    }
    else
      {
        <div class="card">
    <div class="card-body">
         @Html.HiddenFor(m => m.CompanyId, new { @id = "companyId" })
        <input type="hidden" name="ClientId" id="ClientId" />
        <input type="hidden" name="BookingId" id="BookingId" />
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label>Money Receipt Date</label>
                    <div style="display:flex">
                        <input name="ReceiptDateString" required value="@Model.ReceiptDateString" required class="form-control datepickeronPage" id="TransactionDateString" placeholder="--- Select Date ---" autocomplete="off">
                        @Html.ValidationMessageFor(model => model.ReceiptDateString, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

             <div class="col-md-3">
                  <div class="form-group">
                      <label class="control-label">Select Customer: <b style="color:red"> *</b> </label>
                            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @name = "ClientName", @id = "ClientNameId", @style = "max-width: 100%;" } })
                             @Html.HiddenFor(x => x.ClientId, new { @id = "ClientId", @name = "ClientId" })
                              @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                  </div>
             </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label>File Info</label>
                    @Html.DropDownListFor(model => model.CGId, Model.GroupList as SelectList, "---Select Item---", new { id = "ddlCGId", @class = "searchingDropdown  customStyle", @style = "width: 100%;", required = "required" })
                    @Html.ValidationMessageFor(model => model.CGId, "", new { @class = "text-danger" })

                </div>

            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="ClientName" class="col-form-label">Received With Thanks From Mr./Mrs</label>
                    <input type="hidden" name="ClientId" id="ClientId" />
                    @Html.TextBoxFor(model => model.ReceivedBy, new { id = "txtReceivedBy", @class = "form-control", placeholder = "Received By", required = "required", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="PlotName" class="col-form-label"> Serial Number  </label>
                    @Html.TextBoxFor(model => model.SerialNumber, new { id = "txtSerialNumber", @class = "form-control", placeholder = "Money Receipts Serial Number", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="ProjectName" class="col-form-label">  Product Catagory </label>
                    @Html.TextBoxFor(model => model.ProjectName, new { id = "txtProjectName", @class = "form-control", placeholder = "Product Catagory", @readonly = "readonly", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="ProjectName" class="col-form-label">  Product Sub Catagory </label>
                    @Html.TextBoxFor(model => model.ProjectName, new { id = "txtProjectsubName", @class = "form-control", placeholder = "Product Sub Catagory ", @readonly = "readonly", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="PlotName" class="col-form-label"> Product  </label>
                    @Html.TextBoxFor(model => model.PlotName, new { id = "txtPlotName", @class = "form-control", placeholder = " Plot Name", @readonly = "readonly", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.PlotName, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="col-md-3">
                <div class="form-group">
                    <label for="FileNo" class="col-form-label"> Booking No </label>
                    @Html.TextBoxFor(model => model.BookingNo, new { id = "txtBookingNo", @class = "form-control", placeholder = "Booking No", @readonly = "readonly", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.BookingNo, "", new { @class = "text-danger" })
                </div>
            </div>*@
        </div>
        <div class="row">
            <div class="col-md-3">

                <div class="form-group" style="margin-bottom:2px">
                    @Html.LabelFor(model => model.IsBookingAmount, htmlAttributes: new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.IsBookingAmount, htmlAttributes: new { id = "chkIsBookingAmount" })
                    @Html.ValidationMessageFor(model => model.IsBookingAmount, "", new { @class = "text-danger" })

                </div>
                <b id="bookingMonyId"> </b>
            </div>


            <div class="col-lg-3 col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Installment</label>
                    <select id="ddlInstallmentId" name="InstallmentId" class="form-control " multiple="multiple" data-placeholder="Select Item" data-dropdown-css-class="select2-purple" required style="max-width: 100%;">
                    </select>
                    @Html.ValidationMessageFor(model => model.InstallmentId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="ChequeNo" class="col-form-label">Amount</label>
                    @Html.TextBoxFor(model => model.Amount, new { id = "txtAmount", @class = "form-control", placeholder = "Amount", required = "required", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label>Select Payment Type</label>
                    @Html.DropDownListFor(model => model.PayTypeId, new SelectList(Model.PayType, "Value", "Text"), "==Select PayType==", new { id = "ddlPayTypeId", @class = "form-control  ddlReset", @required = "required", @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.PayTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3" id="hideIdbank">
                <div class="form-group">
                    <label>Select Bank</label>
                    @Html.DropDownListFor(model => model.BankName, new SelectList(Model.BankList, "Text", "Text"), "==Select Bank==", new { id = "ddlBank", @class = "form-control  ddlReset", @required = "required", @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-md-3" id="hideIdchequeNo">
                <div class="form-group">

                    <label for="ChequeNo" class="col-form-label">Cheque No</label>
                    @Html.TextBoxFor(model => model.ChequeNo, new { id = "txtChequeNo", @class = "form-control", placeholder = "Cheque No", required = "required", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.ChequeNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3" id="hideIdChequeDateString">
                <div class="form-group">
                    <label>Cheque Date</label>
                    <div style="display:flex">
                        <input name="ChequeDateString" required value="@Model.ChequeDateString" class="form-control datepickeronPage" id="txtChequeDateString" placeholder="--- Select Date ---" autocomplete="off">
                    </div>
                    @Html.ValidationMessageFor(model => model.ChequeDateString, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6" id="hideIdparticular">
                <div class="form-group">
                    <label for="Particular" class="col-form-label">Particular</label>
                    @Html.TextAreaFor(model => model.Particular, new { id = "txtParticular", @class = "form-control", style = "max-width:100%" })
                    @Html.ValidationMessageFor(model => model.Particular, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group" style="margin-bottom: 2px; display: flex; border: 1px solid #337ab7; padding: 8px; margin-top: 24px">
                    @Html.LabelFor(model => model.IsApproveSMS, htmlAttributes: new { @class = "control-label text-primary" })
                    @Html.CheckBoxFor(model => model.IsApproveSMS, htmlAttributes: new { id = "IsApproveSMS", @style = "margin-left:30px;margin-right:20px" })
                    @Html.ValidationMessageFor(model => model.IsApproveSMS, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
    </div>

    <div class="card-footer">
        <div class="row" style="margin-top:20px">
            <div class="col-sm-4"></div>
            <div class="col-sm-4">
                <input type="submit" value="Save" style="width:100%" class="btn btn-primary" />
            </div>
            <div class="col-sm-4">

            </div>

        </div>
    </div>
</div>
    }
    }




@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
    var datalist = @Html.Raw(Json.Encode(Model.MoneyReceiptList));
    console.log(datalist);
        $(document).ready(function () {
                $('.datepickeronPage').datepicker({
                    dateFormat: 'dd-M-yy',
                    showOn: 'both',
                    buttonText: "<i class='fa fa-calendar'></i>",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "1950:+150"
                });
          //  $('.select2').select2();
            amo();
            var res = $("#IsExisting").prop('checked');
            if (res == true) {
                $("#hideshwodive").show();
            } else {
                $("#hideshwodive").hide();
            }
        });


        $(document).ready(function () {
            $("#ClientNameId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/ProductBooking/CustomerAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "companyId":"' +@Model.CompanyId+'"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ClientId").val(i.item.val);

            $.ajax({
                 type: "GET",
                  url: "@Url.Action("GetVendorInformation", "ProductBooking")",
                  datatype: "Json",
                     data: { companyId: "@Model.CompanyId", vendorId: i.item.val },
                     success: function (data) {
                      if (data) {
                          console.log("hhhh", data);
                          $("#txtReceivedBy").val(data.Name);
                      }
                  }
                });

            $.ajax({
                  type: "GET",
                  url: "@Url.Action("Getfile", "Kfml_InstallmentCollaction")",
                  datatype: "Json",
                    data: { companyId: "@Model.CompanyId", vendorId: i.item.val },
                success: function (data) {
                    console.log(data);
                      if (data) {
                          $("#ddlCGId").empty();
                          $("#ddlCGId").append("<option value=''>==Select File No==</option>");
                          $(data).each(function (index, item) {
                              $("#ddlCGId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                          });

                    }
                  }
            })



                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
            });






        function amo() {
            var requrdAmo = $('#Amo').val();
            var PaidAmo = $('#TotalAmount').val();
            console.log(PaidAmo);
            if (parseFloat(PaidAmo) >= parseFloat(requrdAmo)) {
                $(".alert-success").show();
                $(".alert-danger").hide();
            } else {
                $(".alert-success").hide();
                $(".alert-danger").show();
            }
        }

        $('#AgainstId').chosen({
            allow_single_deselect: true
            //, width: "95%"
        });
        $('#ddlInstallmentId').chosen({
            allow_single_deselect: true
            //, width: "95%"
        });


        $("#ddlPayTypeId").change(function () {
            var id = $("#ddlPayTypeId").val();
            if (id == 1) {
                $("#hideIdbank").hide();
                $("#hideIdchequeNo").hide();
                $("#hideIdChequeDateString").hide();
                $("#hideIdparticular").show();
            } if (id == 2) {
                $("#hideIdbank").show();
                $("#hideIdchequeNo").show();
                $("#hideIdChequeDateString").show();
                $("#hideIdparticular").hide();
            }
            if (id == 3) {
                $("#hideIdbank").show();
                $("#hideIdchequeNo").hide();
                $("#hideIdChequeDateString").show();
                $("#hideIdparticular").hide();
            }
            if (id==4) {
                $("#hideIdbank").hide();
                $("#hideIdchequeNo").hide();
                $("#hideIdChequeDateString").hide();
                $("#hideIdparticular").show();
            }
            if (id == 0 || id == "") {
                $("#hideIdbank").show();
                $("#hideIdchequeNo").show();
                $("#hideIdChequeDateString").show();
                $("#hideIdparticular").show();
            }
        });




    $("#ClientName").change(function () {
        var ClientId = $("#ClientId").val();
        console.log(projectId);
            $.ajax({
                  type: "GET",
                  url: "@Url.Action("Getfile", "Kfml_InstallmentCollaction")",
                  datatype: "Json",
                    data: { companyId: "@Model.CompanyId", vendorId: ClientId },
                success: function (data) {
                    console.log(data);
                      if (data) {
                          $("#ddlCGId").empty();
                          $("#ddlCGId").append("<option value=''>==Select File No==</option>");
                          $(data).each(function (index, item) {
                              $("#ddlCGId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                          });

                    }
                  }
            });
        });

    $("#ddlCGId").change(function () {
        var cgId = $("#ddlCGId").val();
        $.ajax({
            type: "GET",
              url: "@Url.Action("GetClient", "Kfml_InstallmentCollaction")",
              datatype: "Json",
            data: { companyId: "@Model.CompanyId", CGId: cgId },
              success: function (data) {
                  if (data) {
                      console.log("hhhh", data);
                      $("#txtProjectName").val(data.ProductCatagoryName);
                      $("#txtProjectsubName").val(data.ProductSubCatagoryName);
                      $("#txtPlotName").val(data.ProductName);
                      $("#ClientId").val(data.ClientId);
                      $("#bookingMonyId").text(data.BookingMoney + "TK");
                      $("#BookingId").val(data.BookingId);
                      $("#ddlInstallmentId").empty();
                      if (data.BookingMoney == 0) {
                          $('#chkIsBookingAmount').attr("disabled", true);
                      }
                      else {
                          $('#chkIsBookingAmount').attr("disabled", false);
                      }

                      $(data.Schedule).each(function (index, item) {
                          $("#ddlInstallmentId").append("<option value='" + item.InstallmentId + "'>" + item.Title + "</option>");
                      });
                      $('#ddlInstallmentId').trigger("chosen:updated");
                  }
              }
          });
    });

    function makeEditble(id) {
        var list = datalist.find(f => f.MoneyReceiptDetailId === id);
        $('#Amount').val(list.Amount);
        $('#PaidAmount').val(list.PaidAmount);
        $('#MoneyReceiptDetailIdup').val(list.MoneyReceiptDetailId);
        $('#MoneyReceiptIdup').val(list.MoneyReceiptId);
        $('#CompanyIdup').val(@Model.CompanyId);
    }
        $('.from').submit(function (event) {

           var requrdAmo= $('#Amount').val();
            var PaidAmo=  $('#PaidAmount').val();
            if (parseFloat(PaidAmo) <= parseFloat(requrdAmo)) {
                return true;
            } else {
                alert("check your collection amount!");
                return false;
            }
        });


    $("#ddlAccounting_BankOrCashParantId").change(function () {
        var bankOrCashParantId = $("#ddlAccounting_BankOrCashParantId").val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("HeadGLByHead5ParentIdGet", "Vouchers")",
            datatype: "Json",
            data: { companyId: "@Model.CompanyId", parentId: bankOrCashParantId },
            success: function (data) {
                var items = "";
                if (data) {
                    $("#ddlAccounting_BankOrCashId").empty();
                    $(data).each(function (index, item) {
                        $("#ddlAccounting_BankOrCashId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });

                }
            }
        });
    })


        function GetValue() {
            //var res = $("#IsExisting").prop('checked');
            //if (res == true) {
            //    $("#hideshwodive").hide();
            //} else {
            //    $("#hideshwodive").show();
            //}

            var res = $("#IsExisting").prop('checked');
            if (res == true) {
                $("#hideshwodive").show();
            } else {
                $("#hideshwodive").hide();
            }
        }
    </script>
}