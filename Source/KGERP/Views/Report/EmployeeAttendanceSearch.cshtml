@model KGERP.Data.CustomModel.ReportCustomModel
@{
    ViewBag.Title = "EmployeeAttendanceSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2></h2>


<div class="row">
    <div class="col-md-12" style="background-color:#f1f1f1;padding:5px">
        <span style="font-size:20px;color:#000000;font-weight:700"> Employee Advance Search Report</span>
    </div>
</div>
<br />

@using (Html.BeginForm("EmployeeAttendanceSearch", "Report", FormMethod.Post, new { @id = "idForm" }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <label>Joining From Date</label>
            <div style="display:flex">
                @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off", @style = "max-width: 100%" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="col-md-3">
        <div class="form-group">
            <label>Joining To Date</label>
            <div style="display:flex">
                @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off", @style = "max-width: 100%" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">Employee Type </label>
            <select class="form-control" id="SalaryTag" name="SalaryTag" style="max-width:100%">
                <option value="0">Select Employee Type </option>
                <option value="1">Head Office</option>
                <option value="2"> Chatbari</option>
                <option value="3">Packaging</option>
                <option value="4">FeedMill</option>
                <option value="5">KBazaar and KSSL</option>
                <option value="6">Driver & Cleaner</option>
                <option value="7">Management</option>
            </select>


        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Company", htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select Company---", new { @id = "CompanyId", @class = "dropdownsize form-control" ,@data_val = "false", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>



<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Department", htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.Departments, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Designation", htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.DropDownListFor(model => model.DesignationId, new SelectList(Model.Designations, "Value", "Text"), "---Select---", new { @id = "designationId", @class = "dropdownsize form-control", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="col-md-3">
        <div class="form-group" style="padding:0px">
            <label for="message-text" class="col-form-label">Employee</label>
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Title", @id = "txtEmployeeKGId", @style = "max-width: 100%", @data_val = "false" } })
            @Html.HiddenFor(model => model.EmployeeId, new { id = "ddlREmployeeKGId" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Gender </label>
            @Html.DropDownListFor(model => model.GenderId, new SelectList(Model.Genders, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>




<div class="row">

    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">Employee Status </label>
            <select class="form-control" id="EmployeeStatus" name="EmployeeStatus" style="max-width:100%">
                <option value="0">Select Employee Status </option>
                <option value="1">Active</option>
                <option value="2">In-Active</option>
            </select>
        </div>
    </div>

    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">Division:</label>
            @Html.DropDownListFor(model => model.Common_DivisionFk, Model.DivisionList as SelectList, "--Division--", new { id = "ddlCommon_DivisionFk", @class = "form-control", @data_val = "false", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.Common_DivisionFk, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">District:</label>
            @Html.DropDownListFor(model => model.Common_DistrictsFk, Model.DistrictList as SelectList, "--District--", new { id = "ddlCommon_DistrictsFk", @class = "form-control", @data_val = "false", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.Common_DistrictsFk, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">Upazila:</label>
            @Html.DropDownListFor(model => model.Common_UpazilasFk, Model.UpazilasList as SelectList, "--Upazila--", new { id = "ddlCommon_UpazilasFk", @class = "form-control", @data_val = "false", @style = "max-width: 100%" })
            @Html.ValidationMessageFor(model => model.Common_UpazilasFk, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Blood Group   </label>
            @Html.DropDownListFor(model => model.BloodGroupId, new SelectList(Model.BloodGroups, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Religion  </label>
            @Html.DropDownListFor(model => model.ReligionId, new SelectList(Model.Religions, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Marital Type  </label>
            @Html.DropDownListFor(model => model.MaritalTypeId, new SelectList(Model.MaritalTypes, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>


    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Job Status </label>
            @Html.DropDownListFor(model => model.JobStatusId, new SelectList(Model.JobStatus, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label"> Service Type  </label>
            @Html.DropDownListFor(model => model.ServiceTypeId, new SelectList(Model.JobTypes, "Value", "Text"), "---Select---", new { @class = "form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="message-text" class="col-form-label">Office Type </label>
            @Html.DropDownListFor(model => model.OfficeTypeId, new SelectList(Model.OfficeTypes, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @data_val = "false", @style = "max-width: 100%" })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("Start Grade", htmlAttributes: new { @class = "control-label" })
            <br />
            @{
                var gradesWithConcatenatedTextStart = Model.Grades.Select(item => new SelectListItem
                {
                    Value = item.Value.ToString(),
                    Text = $"{item.Text} - [{item.Code}]"
                });
            }

            @Html.DropDownListFor(model => model.StartGradeId, new SelectList(gradesWithConcatenatedTextStart, "Value", "Text"), "---Select---", new { @id = "StartGradeId", @class = "dropdownsize form-control", @style = "max-width: 100%" })

            @Html.ValidationMessageFor(model => model.StartGradeId, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="col-md-3">
        <div class="form-group">
            @Html.Label("To Grade", htmlAttributes: new { @class = "control-label" })
            <br />
            @{
                var gradesWithConcatenatedText = Model.Grades.Select(item => new SelectListItem
                {
                    Value = item.Value.ToString(),
                    Text = $"{item.Text} - [{item.Code}]"
                });
            }

            @Html.DropDownListFor(model => model.EndGradeId, new SelectList(gradesWithConcatenatedText, "Value", "Text"), "---Select---", new { @id = "EndGradeId", @class = "dropdownsize form-control", @style = "max-width: 100%" })

            @Html.ValidationMessageFor(model => model.EndGradeId, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

        <div class="row">
            <div class="col-md-3"> </div>
            <div class="col-md-3"> </div>
            <div class="col-md-3">
                <div class="form-group pull-left">
                    <br />

                    <select class="pull-left" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px" name="ReportType" id="ReportType">
                        <option value="PDF">PDF</option>
                        <option value="EXCEL">EXCEL</option>
                        <option value="WORD">WORD</option>
                    </select>
                    <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-left" formtarget="_blank" />

                </div>
            </div>
        </div>

        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryui")
            @Styles.Render("~/Content/cssjqryUi")

            <script>
        $("#txtEmployeeKGId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                       url:"@Url.Action("getallEmployeeId", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            console.log('data',data)
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                console.log(i);
                $("#ddlREmployeeKGId").val(i.item.val);
                $('#txtEmployeeKGId').focus();

                },

                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });

         $("#ddlCommon_DivisionFk").change(function (e) {
                var commonDivisionFk = $("#ddlCommon_DivisionFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonDistrictsGet","Configuration")",
                datatype: "Json",
                data: { id:  commonDivisionFk },
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_DistrictsFk").empty();
                            $("#ddlCommon_DistrictsFk").append("<option value=''>==Select District==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_DistrictsFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
       });


        $("#ddlCommon_DistrictsFk").change(function (e) {
                var commonDistrictsFk = $("#ddlCommon_DistrictsFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonUpazilasGet", "Configuration")",
                datatype: "Json",
                data: { id:  commonDistrictsFk},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_UpazilasFk").empty();
                            $("#ddlCommon_UpazilasFk").append("<option value=''>==Select Police Station==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_UpazilasFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
        });

            </script>
        }



