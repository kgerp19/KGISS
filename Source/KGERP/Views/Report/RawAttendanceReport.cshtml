@model KGERP.Data.CustomModel.ReportCustomModel


<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Raw Attendance Reports
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">  Raw Attendance Reports</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("RawAttendanceReport", "Report", FormMethod.Post, new { id = "AccountingMovementformId", @class = "formValidator", @target = "_blank", @enctype = "multipart/form-data" }))
            {
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-danger">

                        <!-- /.box-header -->
                        <div class="box-body">
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.CompanyId, new { @id = "CompanyId" })
                            @Html.HiddenFor(model => model.ReportName)
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>From Date</label>
                                        <div style="display:flex">
                                            @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Hours</label>
                                        @Html.DropDownListFor(model => model.FromHour, Model.HoursList as SelectList, "==Select Hours==", new { id = "ddlCustomerId", @class = "form-control", @required = "required", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.FromHour, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-group">
                                            <label>Minutes</label>
                                            @Html.DropDownListFor(model => model.FromMinut, Model.Minutes as SelectList, "==Select Minutes==", new { id = "ddlCustomerId", @class = "form-control", style = "width:100%", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.FromMinut, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                \
                                <div class="col-md-2"></div>
                            </div>

                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>To Date</label>
                                        <div style="display:flex">
                                            @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Hours</label>
                                        @Html.DropDownListFor(model => model.ToHour, Model.HoursList as SelectList, "==Select Hours==", new { id = "ddlCustomerId", @required = "required", @class = "form-control", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.ToHour, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="form-group">
                                            <label>Minutes</label>
                                            @Html.DropDownListFor(model => model.ToMinut, Model.Minutes as SelectList, "==Select Minutes==", new { id = "ddlCustomerId", @class = "form-control", style = "width:100%", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.ToMinut, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-2"></div>
                            </div>





                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label>Employee Name</label>
                                        <div style="display:flex">
                                            @Html.TextBox("EmployeeName", "", new { @autocomplete = "on", @placeholder = "KG ID", @data_val = "false" , @class="form-control"})
                                            @Html.HiddenFor(x=> x.EmployeeId)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2"></div>
                            </div>



                        </div>
                        <div class="box-footer">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-3">
                                <select class="pull-right" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px;width:100%;" name="ReportType" id="ReportType">
                                    <option value="PDF">PDF</option>
                                    <option value="EXCEL">EXCEL</option>
                                    <option value="WORD">WORD</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-right" style="width:100%" formtarget="_blank" />
                            </div>
                            <div class="col-md-2">
                            </div>
                        </div>

                    </div>
                </div>
            }


        </div>

    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")



    <script>
        $(document).ready(function () {
            $("form").on("submit", function () {
                $("#EmployeeName").val("");
            });
            $(function () {
                $("#EmployeeName").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            type: "GET",
                            url: "/AutoComplete/GetAllEmployeeAutoComplete",
                            dataType: "json",
                            data: { prefix: request.term },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return { label: item.Name, value: item.Name, id: item.Id };
                                }));
                            },
                            error: function (e) {
                                // Handle error, if needed
                            }
                        });
                    },
                    minLength: 1,
                    delay: 500,
                    autoFocus: true,
                    select: function (event, ui) {
                        $("#EmployeeId").val(ui.item.id);
                        //LoadDesignation(ui.item.id);
                    }
                });
            });
        });


    </script>
}





