@model KGERP.Service.Implementation.Production.VMProdReferenceSlave
@using KGERP.Utility;


@{
    ViewData["Title"] = "Packaging";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
    decimal TotalPrice = 0;
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.ProdReferenceId > 0)
        {
            <span>
                Packaging Detail of: <a target="_blank" href="~/Report/KPLProdReferenceReport?prodReferenceId=@Model.ProdReferenceId&companyId=@Model.CompanyFK">@Model.ReferenceNo</a>
            </span>
        }
        else
        {
            <span>
                Packaging : @DateTime.Today.ToString("dd-MM-yyyy")
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Packaging</li>
        <li class="active">

            <a class="btn-link btn btn-primary btn-xs" target="_blank" href="~/Production/ProdReferenceSlave?companyId=@Model.CompanyFK">Add New Packaging</a>

        </li>
    </ol>
</section>
@using (Html.BeginForm("ProdReferenceSlave", "Production", FormMethod.Post, new { id = "procurementPurchaseOrderSlaveFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ProdReferenceId, new { id = "hidProdReferenceId" })
                @Html.HiddenFor(model => model.ProdReferenceSlaveID, new { id = "hidProdReferenceSlaveID" })

                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">

                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.ProdReferenceId > 0)
                        {


                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                <table class="table">
                                    <tr>
                                        <th style="width:18%">
                                            Packaging No
                                        </th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">
                                            <label class="col-form-label">@Model.ReferenceNo</label>


                                        </td>
                                        <th style="width:18%"> Packaging Date</th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">@Model.ReferenceDate.ToString("dd-MM-yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th style="width:18%">
                                            Created By
                                        </th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">
                                            <label class="col-form-label">@Model.CreatedBy</label>


                                        </td>
                                        <th style="width:18%"> Created Date</th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">@Model.CreatedDate.ToString("dd-MM-yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th style="width:18%">
                                            Remarks
                                        </th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">
                                            <label class="col-form-label">@Model.Remarks</label>

                                        </td>
                                        <th style="width:18%">
                                            Submission
                                        </th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">
                                            @if (Model.IsSubmitted)
                                            {
                                                <span class="btn btn-success btn-xs">
                                                    Submitted
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="btn btn-xs btn-warning">
                                                    Submission Pending
                                                </span>
                                            }

                                        </td>
                                    </tr>

                                </table>
                            </div>
                            <div class="col-md-1"> </div>
                        }

                    </div>
                    <div class="box-body">
                        @*@if (Model.ProdReferenceId == 0)
        {
            <div class="row">
                <div class="form-group" style="padding:0px">
                    @Html.CheckBoxFor(model => model.MakeFinishInventory, new { htmlAttributes = new { @id = "txtMakeFinishInventory" } }) Is Opening Stock

                </div>
            </div>
        }*@

                        @if (Model.ProdReferenceId == 0)
                        {
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <label>Packaging Date</label>
                                        <input name="ReferenceDate" asp-for="ReferenceDate" type="text" value="@DateTime.Today.ToString("yyyy-MM-dd")" style="width:100%;border:1px black solid" required="required" class="datePicker form-control" id="txtReferenceDate" placeholder="Date" autocomplete="off">
                                        @Html.ValidationMessageFor(model => model.ReferenceDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <label>Remarks</label>
                                        @Html.TextAreaFor(model => model.Remarks, new { @autocomplete = "on", @style = "width:100%;border:1px black solid", @class = "form-control", @id = "txtRemarks", Rows = 1 })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (!Model.IsSubmitted)
                        {
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Finish Item:</label>
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @autocomplete = "on", @style = "width:100%;border:1px black solid", @class = "form-control", @name = "Product Name", @id = "txtProductName" } })

                                        @Html.HiddenFor(model => model.FProductId, new { id = "ddlRProductFK" })
                                        @Html.ValidationMessageFor(model => model.FProductId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Production Qty</label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.Quantity, new { id = "txtQuantity", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Quantity", required = "Required" })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                                            <div class="input-group-addon" style="border:1px black solid">
                                                <span class="txtUnitName"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-2">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Packaging Formula:</label>
                                        <a class="btn-link btn btn-default" id="linkProductFormulaId" target="_blank" href="~/Production/ProdReferenceSlave?companyId=@Model.CompanyFK">Formula & RM Stock</a>

                                    </div>
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-md-4">

                                </div>
                                <div class="col-lg-8 col-md-8">
                                    <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                        <i class='fa fa-plus'></i>
                                        @if (Model.ProdReferenceId > 0)
                                        {
                                            <span>Add Finished Product</span>
                                        }
                                        else
                                        {
                                            <span>Packaging</span>
                                        }
                                    </button>
                                </div>
                            </div>
                        }

                    </div>
                    

                    <!--Body Will by Start Here-->
                    @{
                        if (Model.ProdReferenceId > 0)
                        {

                            decimal GrossTotal = 0;
                            decimal GrossRMCOGSTotal = 0;
                            @Html.HiddenFor(model => model.ID, new { id = "hidSlaveID" })
                            <h4>
                                Finished Goods
                            </h4>
                            <div class="table-responsive col-md-12  text-nowrap">
                                <table id="" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th style="padding:5px;text-align:center;">SL</th>
                                            <th style="padding:5px;text-align:left;">Product</th>
                                            <th style="padding:5px;text-align:center;">Packaging Qty</th>
                                            <th style="padding:5px;text-align:right;">COGS</th>
                                            <th style="padding:5px;text-align:right;">Total COGS</th>

                                            @if (Model.IsSubmitted == false)
                                            {
                                                <th style="padding:5px;text-align:center;">Action</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DataListSlave)
                                        {
                                            GrossTotal += item.TotalPrice;
                                            <tr>
                                                <td style="padding:5px">@(++sl)</td>
                                                <td style="padding:5px;text-align:left;">@item.ProductName</td>



                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.Quantity) @item.UnitName</td>
                                                <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.CostingPrice)</td>
                                                <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.TotalPrice)</td>


                                                @{ if (Model.IsSubmitted == false)
                                                    {
                                                        <td style="padding:5px;text-align:center;">
                                                            @*<a id="@item.ID" onclick=" makeEditble(@item.ProdReferenceSlaveID);" class="linkPointer" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></a>*@

                                                            <a id="@item.ID" onclick="makeDeletale(@item.ProdReferenceSlaveID)" class="linkPointer" data-toggle="modal" data-target="#ReferenceSlaveDeleteModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                        </td>
                                                    }
                                                }
                                            </tr>
                                        }


                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td></td>
                                            <td colspan="3"><strong>Gross COGS</strong></td>
                                            <td style="padding:5px;text-align:right;"><strong>@String.Format("{0:0.00}", GrossTotal)</strong></td>

                                        </tr>
                                    </tfoot>

                                </table>
                            </div>
                            <h4>
                                Raw Materials
                            </h4>
                            <div class="table-responsive col-md-12  text-nowrap">
                                <table id="" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th style="padding:5px;text-align:center;">SL</th>
                                            <th style="padding:5px;text-align:left;">Finished Goods</th>
                                            <th style="padding:5px;text-align:left;">Raw Materials</th>
                                            <th style="padding:5px;text-align:center;">Consumed Qty</th>
                                            <th style="padding:5px;text-align:right;">COGS</th>
                                            <th style="padding:5px;text-align:right;">Total COGS</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.RowProductConsumeList)
                                        {
                                            GrossRMCOGSTotal += item.TotalCOGS;
                                            <tr>
                                                <td style="padding:5px">@(++sl)</td>
                                                <td style="padding:5px;text-align:left;">@item.FProductName</td>
                                                <td style="padding:5px;text-align:left;">@item.RProductName</td>



                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.TotalConsumeQuantity) @item.UnitName</td>

                                                <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.COGS)</td>
                                                <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.TotalCOGS)</td>


                                            </tr>
                                        }


                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td></td>
                                            <td colspan="4"><strong>Gross COGS</strong></td>
                                            <td style="padding:5px;text-align:right;"><strong>@String.Format("{0:0.00}", GrossRMCOGSTotal)</strong></td>

                                        </tr>
                                    </tfoot>

                                </table>
                            </div>
                        }
                    }
                    <div class="box-footer">
                        @if (Model.ProdReferenceId > 0)
                        {
                            <div class="row">
                                <div class="col-md-4">

                                </div>
                                <div class="col-md-4">
                                    <a style="width:100%" class="btn btn-info" target="_blank" href="~/Report/KPLProdReferenceReport?prodReferenceId=@Model.ProdReferenceId&companyId=@Model.CompanyFK">Print Packaging</a>

                                </div>
                                <div class="col-md-4">

                                    @if (Model.IsSubmitted)
                                    {
                                        <span style="width:100%" class="btn btn-success"> Submitted Successfully</span>


                                    }
                                    else
                                    {
                                        <a style="width: 100%"   class="linkPointer btn btn-warning" data-toggle="modal" data-target="#SubmitModal" data-placement="top"> <i class="glyphicon glyphicon-ok" aria-hidden="true"></i> Submit Packaging </a>

                                    }



                                </div>

                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
}



@using (Html.BeginForm("ReferenceSlaveDelete", "Production", FormMethod.Post, new { id = "deleteProcurementPurchaseOrderSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="ReferenceSlaveDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Packaging</b></h5>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.ProdReferenceSlaveID, new { id = "hidDeleteProdReferenceSlaveID" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "deleteCompanyFK" })

                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this Packaging?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("ISSProdReferenceSubmit", "Production", FormMethod.Post))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="SubmitModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b id="modSubmitTitle">Are Your Sure To Submit This !</b><span></span></h5>
                </div>
                <div class="modal-body">


                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ProdReferenceId, new { id = "subProdReferenceId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "subCompanyFK" })
                   


                    <div style="text-align:center">
                        <h3 id="modSubmitBodyText"></h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" style="width:100%" class="btn btn-danger fa fa-check"><b id="btnModSubmit"> Submit</b></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section scripts {

    <script type="text/javascript">

        function makeDeletale(referenceSlaveID) {
            $('#hidDeleteProdReferenceSlaveID').val(referenceSlaveID);
            $('#deleteActionId').val(3);
                                                    }
                                                    function resetProcurementPurchaseRequisitionSlaveForm() {
          $('#procurementPurchaseRequisitionSlaveFormId')[0].reset();
          $('#ActionId').val(1);
                                                    }

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();

            $("#ddlFinalDestinationCountryFk").val(19).change();
              $("#txtProductName").autocomplete({
                source: function (request, response) {
                    //console.log(request);
                    //console.log(response);

                    $.ajax({
                        url:"@Url.Action("AutoCompleteFinishedGoodsGet", "Configuration")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                console.log(i);
                $("#ddlRProductFK").val(i.item.val);
                $('#linkProductFormulaId').attr('href', '../Configuration/CommonFinishProductBOM?companyId=' + @Model.CompanyFK + '&productId=' + i.item.val);




                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CommonProductByID", "Configuration")",
                        datatype: "Json",
                        data: { id: i.item.val },
                        success: function (data) {
                            console.log(data);
                            var items = "";
                            if (data) {

                                $('.txtUnitName').text(data.UnitName);

                            }
                        }
                    });
                $('#txtQuantity').focus();

                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });


        });
        function makeEditble(rowId) {

            $.ajax({

                  type: "POST",
                  url: "@Url.Action("SingleProdReferenceSlave", "Production")",
                  datatype: "Json",
                  data: { id: rowId },
                  success: function (data) {
                      console.log(data);
                      $('#poCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                      $("#hidProdReferenceId").val(data.ProdReferenceId);
                      $('#ActionId').val(2);
                      $("#CompanyFK").val(data.CompanyFK);
                      $("#txtProductName").val(data.ProductName);
                      $("#ddlRProductFK").val(data.FProductId);
                      $("#txtQuantity").val(data.Quantity);
                      $("#hidProdReferenceSlaveID").val(data.ProdReferenceSlaveID)
                      $('.txtUnitName').text(data.UnitName);
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                  }
                 });
            }

        function makeSubmitble(rowId) {
                // console.log(rowId);
                
                $('#hidsubmitProcurementPurchaseOrderId').val(rowId);
            }
    </script>
}