@model KGERP.Service.ServiceModel.ExitInterviewVM
@using KGERP.Utility
@{
    ViewBag.Title = "Exit Interview";
}
<style>
    class {
        padding: 70px;
        border: 1px solid #4CAF50;
    }

    textarea {
        max-width: 100%;
    }
</style>

@using (Html.BeginForm("CreateExitInterview", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.JoiningDate)
    <div class="form-horizontal" style="padding-left:20px">
        @*<div class="row">
                <div class="header text-center"><h2>EMPLOYEE EXIT INTERVIEW</h2></div>
            </div>*@


        @Html.ValidationSummary(true, "Please select item", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)
        <div class="row" style="background-color:rgb(254, 254, 254)">
            <div class="col-md-12">
                <card class="card-header">
                    <h3 class="text-center">
                        EMPLOYEE EXIT INTERVIEW
                    </h3>
                </card>
                <hr style="border-color:forestgreen; padding:0px;margin-top: 08px;margin-bottom: 08px; border-width: 2px;" />
            </div>
        </div>


        <div class="row" aria-label="Form Inputs">
            @*<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />*@
            <div>
                <div>
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Employee Basic Information</b></div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ManagerName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.ManagerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @*@Html.DropDownListFor(model =>model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm", @data_show_subtext = "true", @data_live_search = "true" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DesignationName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.DesignationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.JoiningDateString, new { htmlAttributes = new { @class = "form-control", @data_val = "false", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Service Length", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(x => x.ServiceLength, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" style="display:flex;">
                                        @Html.LabelFor(model => model.ResignDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.ResignDateString, new { htmlAttributes = new { @style = "width:240px", @data_val = "false", @autocomplete = "off" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Resign for Leaving", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.ReasonForLeaving,2,200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="header"><h4 style="padding-left:30px;">REASONS FOR LEAVING</h4></div>
                                    <hr style="border-color:green; padding:0px;margin-top: 5px;margin-bottom: 10px; border-width: 2px;" />
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Have you accepted another position?", htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            <p class="form-control">

                                                @(Model.IsAcceptedAnotherPosition?"Yes":"No")
                                            </p>
                                            @*@Html.DropDownListFor(x=> x.IsAcceptedAnotherPosition, new List<SelectListItem> { new SelectListItem { Text = "--Please Select--", Value = "" }, new SelectListItem { Text = "True", Value = "1" }, new SelectListItem { Text = "False", Value = "2" } }, new { @class = "form-control" })*@

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What prompted you to seek another job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatPromptedToSeekAnotherJOb, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("When did you begin searching for another job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhenBeginSearchingAnotherJob,2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes the new job more attractive than your current position?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakeNewJobMoreAttractive, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What made you decide that your career goals could be better achieved elsewhere?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMadeCareerGoalsBetter,2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Have you spoken with anyone, either your director or any of the partners about your career goals? ", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.HaveUShereUrGoal,2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("In your opinion, have there been adequate career opportunities available within company?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.PromotionalOpportunities, new { @class = "form-check-input", @id = "careerOpportunity_1" })
                                                <label class="form-check-label" for="careerOpportunity_1">
                                                    Promotional Opportunities
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.PositionRotations, new { @class = "form-check-input", @id = "careerOpportunity_2" })
                                                <label class="form-check-label" for="careerOpportunity_2">
                                                    Position Rotations
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.IncreasedResponsibilities, new { @class = "form-check-input", @id = "careerOpportunity_3" })
                                                <label class="form-check-label" for="careerOpportunity_3">
                                                    Increased Responsiblities
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.SpecialProjects, new { @class = "form-check-input", @id = "careerOpportunity_4" })
                                                <label class="form-check-label" for="careerOpportunity_4">
                                                    Special Projects
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.Overseas, new { @class = "form-check-input", @id = "careerOpportunity_5" })
                                                <label class="form-check-label" for="careerOpportunity_5">
                                                    Overseas
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.NoProgression, new { @class = "form-check-input", @id = "careerOpportunity_6" })
                                                <label class="form-check-label" for="careerOpportunity_6">
                                                    Not looking for any progression
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.Other, new { @class = "form-check-input", @id = "careerOpportunity_7" })
                                                <label class="form-check-label" for="careerOpportunity_7">
                                                    Other
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="header"><h4 style="padding-left:30px;">JOB SATISFACTION</h4></div>
                                    <hr style="border-color:green; padding:0px;margin-top: 5px;margin-bottom: 10px; border-width: 2px;" />
                                </div>
                                <style>
                                    .rating input {
                                        display: none;
                                    }

                                    .rating label {
                                        float: right;
                                        width: 30px; /* Set a fixed width */
                                        height: 30px; /* Set a fixed height */
                                        line-height: 30px; /* Center the text vertically */
                                        text-align: center; /* Center the text horizontally */
                                        margin: 0 2px;
                                        cursor: pointer;
                                        background-color: #f1f1f1;
                                        border: 1px solid #4CAF50;
                                        border-radius: 50%;
                                        transition: background-color 0.3s ease;
                                    }

                                    .rating input:checked + label {
                                        background-color: #4CAF50;
                                        color: white;
                                    }

                                    .rating label:hover {
                                        background-color: #ddd;
                                    }
                                </style>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Job Responsibilities", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating1_5" name="RatingJobResponsibility" value="5" @(Model.RatingJobResponsibility == 5 ? "checked" : "")><label for="rating1_5">5</label>
                                                    <input type="radio" id="rating1_4" name="RatingJobResponsibility" value="4" @(Model.RatingJobResponsibility == 4 ? "checked" : "")><label for="rating1_4">4</label>
                                                    <input type="radio" id="rating1_3" name="RatingJobResponsibility" value="3" @(Model.RatingJobResponsibility == 3 ? "checked" : "")><label for="rating1_3">3</label>
                                                    <input type="radio" id="rating1_2" name="RatingJobResponsibility" value="2" @(Model.RatingJobResponsibility == 2 ? "checked" : "")><label for="rating1_2">2</label>
                                                    <input type="radio" id="rating1_1" name="RatingJobResponsibility" value="1" @(Model.RatingJobResponsibility == 1 ? "checked" : "")><label for="rating1_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Opportunity for Achieving Goals", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating2_5" name="RatingAchievingGoal" value="5" @(Model.RatingAchievingGoal == 5 ? "checked" : "")><label for="rating2_5">5</label>
                                                    <input type="radio" id="rating2_4" name="RatingAchievingGoal" value="4" @(Model.RatingAchievingGoal == 4 ? "checked" : "")><label for="rating2_4">4</label>
                                                    <input type="radio" id="rating2_3" name="RatingAchievingGoal" value="3" @(Model.RatingAchievingGoal == 3 ? "checked" : "")><label for="rating2_3">3</label>
                                                    <input type="radio" id="rating2_2" name="RatingAchievingGoal" value="2" @(Model.RatingAchievingGoal == 2 ? "checked" : "")><label for="rating2_2">2</label>
                                                    <input type="radio" id="rating2_1" name="RatingAchievingGoal" value="1" @(Model.RatingAchievingGoal == 1 ? "checked" : "")><label for="rating2_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Work Environment", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating3_5" name="RatingWorkEnvironment" value="5" @(Model.RatingWorkEnvironment == 5 ? "checked" : "")><label for="rating3_5">5</label>
                                                    <input type="radio" id="rating3_4" name="RatingWorkEnvironment" value="4" @(Model.RatingWorkEnvironment == 4 ? "checked" : "")><label for="rating3_4">4</label>
                                                    <input type="radio" id="rating3_3" name="RatingWorkEnvironment" value="3" @(Model.RatingWorkEnvironment == 3 ? "checked" : "")><label for="rating3_3">3</label>
                                                    <input type="radio" id="rating3_2" name="RatingWorkEnvironment" value="2" @(Model.RatingWorkEnvironment == 2 ? "checked" : "")><label for="rating3_2">2</label>
                                                    <input type="radio" id="rating3_1" name="RatingWorkEnvironment" value="1" @(Model.RatingWorkEnvironment == 1 ? "checked" : "")><label for="rating3_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Director/ Manager", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating4_5" name="RatingDirectorOrManager" value="5" @(Model.RatingDirectorOrManager == 5 ? "checked" : "")><label for="rating4_5">5</label>
                                                    <input type="radio" id="rating4_4" name="RatingDirectorOrManager" value="4" @(Model.RatingDirectorOrManager == 4 ? "checked" : "")><label for="rating4_4">4</label>
                                                    <input type="radio" id="rating4_3" name="RatingDirectorOrManager" value="3" @(Model.RatingDirectorOrManager == 3 ? "checked" : "")><label for="rating4_3">3</label>
                                                    <input type="radio" id="rating4_2" name="RatingDirectorOrManager" value="2" @(Model.RatingDirectorOrManager == 2 ? "checked" : "")><label for="rating4_2">2</label>
                                                    <input type="radio" id="rating4_1" name="RatingDirectorOrManager" value="1" @(Model.RatingDirectorOrManager == 1 ? "checked" : "")><label for="rating4_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Pay", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating5_5" name="RatingPay" value="5" @(Model.RatingPay == 5 ? "checked" : "")><label for="rating5_5">5</label>
                                                    <input type="radio" id="rating5_4" name="RatingPay" value="4" @(Model.RatingPay == 4 ? "checked" : "")><label for="rating5_4">4</label>
                                                    <input type="radio" id="rating5_3" name="RatingPay" value="3" @(Model.RatingPay == 3 ? "checked" : "")><label for="rating5_3">3</label>
                                                    <input type="radio" id="rating5_2" name="RatingPay" value="2" @(Model.RatingPay == 2 ? "checked" : "")><label for="rating5_2">2</label>
                                                    <input type="radio" id="rating5_1" name="RatingPay" value="1" @(Model.RatingPay == 1 ? "checked" : "")><label for="rating5_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Benefits", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating6_5" name="RatingBenefits" value="5" @(Model.RatingBenefits == 5 ? "checked" : "")><label for="rating6_5">5</label>
                                                    <input type="radio" id="rating6_4" name="RatingBenefits" value="4" @(Model.RatingBenefits == 4 ? "checked" : "")><label for="rating6_4">4</label>
                                                    <input type="radio" id="rating6_3" name="RatingBenefits" value="3" @(Model.RatingBenefits == 3 ? "checked" : "")><label for="rating6_3">3</label>
                                                    <input type="radio" id="rating6_2" name="RatingBenefits" value="2" @(Model.RatingBenefits == 2 ? "checked" : "")><label for="rating6_2">2</label>
                                                    <input type="radio" id="rating6_1" name="RatingBenefits" value="1" @(Model.RatingBenefits == 1 ? "checked" : "")><label for="rating6_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>


                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What did you enjoy most about your job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatDidEnjoyMostAboutYourJob, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What did you enjoy least about your job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatDidEnjoyLeastAboutYourJob, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes Krhishibid Group a good place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakesKrishibidGroupGoodPlaceToWork, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes Krishibid Group a poor place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakesKrishibidGroupPoorPlaceToWork, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What recommendation would you have for making the company as a whole a better place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatRecommendationToMakingBetterToWork, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex; justify-content:left;">
                                        @Html.Label("Would you have stayed if a more satisfactory arrangement could have been worked out?", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-7">
                                            @*@Html.DropDownListFor( x => x.WouldHaveUStatyedIfMoreStatisfactoryArrangementWorkedOUt, new List<SelectListItem> { new SelectListItem { Text = "--Please Select--", Value = "" }, new SelectListItem { Text = "Yes", Value = "1" }, new SelectListItem { Text = "No", Value = "2" } }, new { @class = "form-control" })*@
                                            <p class="form-control">
                                                @(Model.WouldHaveUStatyedIfMoreStatisfactoryArrangementWorkedOUt? "Yes":"No")
                                            </p>                             
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Please sign and date this form below authorizing the placement of this Exit Interview form within your personal file.", htmlAttributes: new { @class = "control-label col-md-12" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                @*<div class="col-md-4">@Html.ActionLink("Back to Index", "ExitInterview", "Employee", new { @class = "btn btn-primary" })</div>*@
                <div class="col-md-4">
                    <a href="#" class="btn btn-primary" onclick="goBack()">Back to Index</a>
                </div>
                <div class="col-md-4"></div>
                <div class="col-md-3">
                </div>
                <div class="col-md-1"></div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            // Get all input fields, textareas, and select elements
            const inputFields = document.querySelectorAll('input, textarea, select,p');

            // Make all elements readonly
            inputFields.forEach(element => {
                element.setAttribute('disabled', true);
                element.style.color = '#888888';
                element.style.backgroundColor = '#f2f2f2';
               // background - color: #f2f2f2; /* Change the background color for disabled elements */
                //color: #888888; /* Change the text color for disabled elements */
                //cursor: not - allowed; /* 
                
            });

            // Enable Live Search.
            $('#designationId').attr('data-live-search', true);

            //// Enable multiple select.
            //$('#CountryList').attr('multiple', true);
            //$('#CountryList').attr('data-selected-text-format', 'count');

            $('.select').selectpicker(
                {
                    width: '100%',
                    style: 'btn-warning',
                    size: 6,
                    iconBase: 'fa',
                    tickIcon: 'fa-check'
                });
        });


        function goBack() {
            window.history.back();
        }

        $(function () {
            $("#managerName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#managerId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        $('#ddlBank').change(function () {
            $.ajax({
                type: "post",
                url: "/BankBranch/GetBranchByBank",
                data: { bankId: $('#ddlBank').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var bankBranch = "<select>";
                    bankBranch = bankBranch + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        bankBranch = bankBranch + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    bankBranch = bankBranch + '</select>';
                    $('#ddlBankBranch').html(bankBranch);
                }
            });
        });

        $(document).ready(function () {
            $('.selectpicker').selectpicker({
                liveSearch: true,
                width: 270,
                showSubtext: true
            });
        });


        $('#ddlDivision').change(function () {
            //var text = $('#ddlDivision option:selected').text();
            $.ajax({
                type: "post",
                url: "/Employee/GetDistrictByDivisionId",
                data: { divisionId: $('#ddlDivision').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var district = "<select>";
                    district = district + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#ddlDistrict').html(district);
                }
            });
        });

        //Bind Upzila base on District Selection
        $('#ddlDistrict').change(function () {
            //data: { districtId: $('#ddlDistrict option:selected').text() },
            $.ajax({
                type: "post",
                url: "/Employee/GetUpzilaByDistrictId",
                data: { districtId: $('#ddlDistrict').val() },

                datatype: "json",
                traditional: true,
                success: function (data) {
                    var upazila = "<select>";
                    upazila = upazila + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        upazila = upazila + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    upazila = upazila + '</select>';
                    $('#ddlThanaUpazila').html(upazila);
                }
            });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        function checkServiceLength() {

            var JoiningDateString = $("#JoiningDateString").val();

            var EndDate = $("#ResignDate").val();
            // Parse input strings into Date objects
            var joiningDate = new Date(JoiningDateString);
            joiningDate.setDate(joiningDate.getDate() - 1);//decrease by one daayy  ffoorr  aaccuurraattee  ccaallccuullaattee
            //// var endDate = new Date(EndDate);
            var endDate = moment(EndDate, 'DD-MM-YYYY').toDate();


            // Calculate the difference in milliseconds
            var difference = endDate - joiningDate;
            //// alert("OK" + difference);
            // Convert milliseconds to years, months, and days
            var years = Math.floor(difference / (365.25 * 24 * 60 * 60 * 1000));
            //// alert(years);
            difference -= years * (365.25 * 24 * 60 * 60 * 1000);
            var months = Math.floor(difference / (30.44 * 24 * 60 * 60 * 1000));
            //// alert(months);
            difference -= months * (30.44 * 24 * 60 * 60 * 1000);
            var days = Math.floor(difference / (24 * 60 * 60 * 1000));


            // Display the result
            $("#ServiceLength").val(years + " years, " + months + " months, and " + days + " days");
        }
    </script>

}