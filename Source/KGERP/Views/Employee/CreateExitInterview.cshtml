@model KGERP.Service.ServiceModel.ExitInterviewVM
@using KGERP.Utility
@{
    ViewBag.Title = "Exit Interview";
    string actionBtn = "Save";
    if (Model.ActionType == ActionEnum.Edit)
    {
        actionBtn = "Update";
    }
}
<style>
    class {
        padding: 70px;
        border: 1px solid #4CAF50;
    }

    textarea {
        max-width: 100%;
    }
</style>

@using (Html.BeginForm("CreateExitInterview", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.JoiningDate)
    @Html.HiddenFor(x => x.Id);
    <div class="form-horizontal" style="padding-left:20px">
        @*<div class="row">
                <div class="header text-center"><h2>EMPLOYEE EXIT INTERVIEW</h2></div>
            </div>*@


        @Html.ValidationSummary(true, "Please select item", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.ActionType)
        <div class="row" style="background-color:rgb(254, 254, 254)">
            <div class="col-md-12">
                <card class="card-header">
                    <h3 class="text-center">
                        EMPLOYEE EXIT INTERVIEW
                    </h3>
                </card>
                <hr style="border-color:forestgreen; padding:0px;margin-top: 08px;margin-bottom: 08px; border-width: 2px;" />
            </div>
            @if (Model.ActionType == ActionEnum.Add)
            {
                <div class="col-md-12">
                    <card class="card">
                        <div class="card-header">
                            PURPOSE
                        </div>
                        <div class="card-title">
                            The intent of this Exit Interview is to ensure that any employee is informed of his/her rights, benefits,
                            and the records are collected and maintained regarding the termination of employment.
                        </div>
                        <br />
                        <div class="card-title">
                            POLICY
                        </div>
                        <div class="card-body">
                            It is the policy of Krishibid Group to ensure that any employee whose employment is being terminated, whether voluntary or involuntarily, receives an exit interview. The exit interview shall be conducted by Sharon Williams and/ or Natalia Winfree. The objectives of the exit interview are as follows:
                            <ul>
                                <li>To determine and discuss the employee’s reason for resignation, if applicable.</li>
                                <li>To discover and discuss any misunderstandings the employee may have had about his/her job or with his/her manager.</li>
                                <li>To maintain good will and teamwork amongst current and future employees.</li>
                                <li> To review administrative details with the employee such as benefit continuation rights and conversion privileges, if any, final pay, re-employment policy, and employment compensation.</li>
                                <li>To arrange for the return of any company property to the operations team.</li>
                            </ul>
                        </div>
                        <br />
                        <div class="card-title">
                            PROCEDURE
                        </div>
                        <div class="card-body">
                            <p>
                                Upon an employee’s announcement of his/her intent to resign, the project director or manager shall schedule an exit interview for the employee with Human Resource Department as soon as possible.
                                <br />
                                In the event that a decision has been made to terminate an employee, the employee shall meet with HR for an exit interview as soon as possible, or as deemed appropriate.
                                <br />
                                Throughout the duration of the exit interview, HR shall seek to meet all objectives listed within the exit interview policy.
                                <br />
                                The departing employee shall complete the following exit interview form as thoroughly as possible.
                                <br />
                                Any information obtained during the exit interview may be disclosed to and/or discussed with the employee manager, the project Director and Partners, as deemed necessary, in order to investigate any allegations made or to inform them of any emerging problems.
                            </p>
                        </div>
                        <br />
                        <div class="card-title">
                            REMINDERS
                        </div>
                        <div class="card-body">
                            <p>
                                Please remember that your work with Acme Global Company was completed under a non-disclousure agreement. We highly value client confidentiality and all terms of the agreement. Feel free to request a copy for your reference if you do not already have one.
                                <br />
                                <br />
                                All Krishibid Group equipment must be returned to the main office in order to received final payment.
                            </p>
                        </div>
                    </card>
                </div>

            }
        </div>

        <div class="row">
            @*<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />*@
            <div>
                <div>
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Employee Basic Information</b></div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Employee Id", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Company Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @*@Html.DropDownListFor(model =>model.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm", @data_show_subtext = "true", @data_live_search = "true" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Employee Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Department Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Manager Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.ManagerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Designation Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.DesignationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Joining Date", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.JoiningDateString, new { htmlAttributes = new { @class = "form-control", @data_val = "false", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Resign Date", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.ResignDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @data_val = "false", @placeholder = "dd/mm/yyyy", @autocomplete = "off", @onchange = "checkServiceLength()" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Service Length", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(x => x.ServiceLength, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Reason for Leaving", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.ReasonForLeaving, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="header"><h4 style="padding-left:30px;">FEEDBACK ABOUT YOUR JOB</h4></div>
                                    <hr style="border-color:green; padding:0px;margin-top: 5px;margin-bottom: 10px; border-width: 2px;" />
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Have you accepted another position?", htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.DropDownListFor(x => x.IsAcceptedAnotherPosition, new List<SelectListItem> { new SelectListItem { Text = "--Please Select--", Value = "" }, new SelectListItem { Text = "Yes", Value = "true" }, new SelectListItem { Text = "No", Value = "false" } }, new { @class = "form-control" })

                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What prompted you to seek another job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatPromptedToSeekAnotherJOb, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("When did you begin searching for another job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhenBeginSearchingAnotherJob, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes the new job more attractive than your current position?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakeNewJobMoreAttractive, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What made you decide that your career goals could be better achieved elsewhere?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMadeCareerGoalsBetter, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Have you spoken with anyone, either your director or any of the partners about your career goals? ", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.HaveUShereUrGoal, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("In your opinion, have there been adequate career opportunities available within company?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.PromotionalOpportunities, new { @class = "form-check-input", @id = "careerOpportunity_1" })
                                                <label class="form-check-label" for="careerOpportunity_1">
                                                    Promotional Opportunities
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.PositionRotations, new { @class = "form-check-input", @id = "careerOpportunity_2" })
                                                <label class="form-check-label" for="careerOpportunity_2">
                                                    Position Rotations
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.IncreasedResponsibilities, new { @class = "form-check-input", @id = "careerOpportunity_3" })
                                                <label class="form-check-label" for="careerOpportunity_3">
                                                    Increased Responsiblities
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.SpecialProjects, new { @class = "form-check-input", @id = "careerOpportunity_4" })
                                                <label class="form-check-label" for="careerOpportunity_4">
                                                    Special Projects
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.Overseas, new { @class = "form-check-input", @id = "careerOpportunity_5" })
                                                <label class="form-check-label" for="careerOpportunity_5">
                                                    Overseas
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.NoProgression, new { @class = "form-check-input", @id = "careerOpportunity_6" })
                                                <label class="form-check-label" for="careerOpportunity_6">
                                                    Not looking for any progression
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.CareerOpportunities.Other, new { @class = "form-check-input", @id = "careerOpportunity_7" })
                                                <label class="form-check-label" for="careerOpportunity_7">
                                                    Other
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="header"><h4 style="padding-left:30px;">JOB SATISFACTION</h4></div>
                                    <hr style="border-color:green; padding:0px;margin-top: 5px;margin-bottom: 10px; border-width: 2px;" />
                                </div>
                                <style>
                                    .rating input {
                                        display: none;
                                    }

                                    .rating label {
                                        float: right;
                                        width: 30px; /* Set a fixed width */
                                        height: 30px; /* Set a fixed height */
                                        line-height: 30px; /* Center the text vertically */
                                        text-align: center; /* Center the text horizontally */
                                        margin: 0 2px;
                                        cursor: pointer;
                                        background-color: #f1f1f1;
                                        border: 1px solid #4CAF50;
                                        border-radius: 50%;
                                        transition: background-color 0.3s ease;
                                    }

                                    .rating input:checked + label {
                                        background-color: #4CAF50;
                                        color: white;
                                    }

                                    .rating label:hover {
                                        background-color: #ddd;
                                    }
                                </style>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Job Responsibilities", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating1_5" name="RatingJobResponsibility" value="5" @(Model.RatingJobResponsibility == 5 ? "checked" : "")><label for="rating1_5">5</label>
                                                    <input type="radio" id="rating1_4" name="RatingJobResponsibility" value="4" @(Model.RatingJobResponsibility == 4 ? "checked" : "")><label for="rating1_4">4</label>
                                                    <input type="radio" id="rating1_3" name="RatingJobResponsibility" value="3" @(Model.RatingJobResponsibility == 3 ? "checked" : "")><label for="rating1_3">3</label>
                                                    <input type="radio" id="rating1_2" name="RatingJobResponsibility" value="2" @(Model.RatingJobResponsibility == 2 ? "checked" : "")><label for="rating1_2">2</label>
                                                    <input type="radio" id="rating1_1" name="RatingJobResponsibility" value="1" @(Model.RatingJobResponsibility == 1 ? "checked" : "")><label for="rating1_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Opportunity for Achieving Goals", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating2_5" name="RatingAchievingGoal" value="5" @(Model.RatingAchievingGoal == 5 ? "checked" : "")><label for="rating2_5">5</label>
                                                    <input type="radio" id="rating2_4" name="RatingAchievingGoal" value="4" @(Model.RatingAchievingGoal == 4 ? "checked" : "")><label for="rating2_4">4</label>
                                                    <input type="radio" id="rating2_3" name="RatingAchievingGoal" value="3" @(Model.RatingAchievingGoal == 3 ? "checked" : "")><label for="rating2_3">3</label>
                                                    <input type="radio" id="rating2_2" name="RatingAchievingGoal" value="2" @(Model.RatingAchievingGoal == 2 ? "checked" : "")><label for="rating2_2">2</label>
                                                    <input type="radio" id="rating2_1" name="RatingAchievingGoal" value="1" @(Model.RatingAchievingGoal == 1 ? "checked" : "")><label for="rating2_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Work Environment", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating3_5" name="RatingWorkEnvironment" value="5" @(Model.RatingWorkEnvironment == 5 ? "checked" : "")><label for="rating3_5">5</label>
                                                    <input type="radio" id="rating3_4" name="RatingWorkEnvironment" value="4" @(Model.RatingWorkEnvironment == 4 ? "checked" : "")><label for="rating3_4">4</label>
                                                    <input type="radio" id="rating3_3" name="RatingWorkEnvironment" value="3" @(Model.RatingWorkEnvironment == 3 ? "checked" : "")><label for="rating3_3">3</label>
                                                    <input type="radio" id="rating3_2" name="RatingWorkEnvironment" value="2" @(Model.RatingWorkEnvironment == 2 ? "checked" : "")><label for="rating3_2">2</label>
                                                    <input type="radio" id="rating3_1" name="RatingWorkEnvironment" value="1" @(Model.RatingWorkEnvironment == 1 ? "checked" : "")><label for="rating3_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Director/ Manager", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating4_5" name="RatingDirectorOrManager" value="5" @(Model.RatingDirectorOrManager == 5 ? "checked" : "")><label for="rating4_5">5</label>
                                                    <input type="radio" id="rating4_4" name="RatingDirectorOrManager" value="4" @(Model.RatingDirectorOrManager == 4 ? "checked" : "")><label for="rating4_4">4</label>
                                                    <input type="radio" id="rating4_3" name="RatingDirectorOrManager" value="3" @(Model.RatingDirectorOrManager == 3 ? "checked" : "")><label for="rating4_3">3</label>
                                                    <input type="radio" id="rating4_2" name="RatingDirectorOrManager" value="2" @(Model.RatingDirectorOrManager == 2 ? "checked" : "")><label for="rating4_2">2</label>
                                                    <input type="radio" id="rating4_1" name="RatingDirectorOrManager" value="1" @(Model.RatingDirectorOrManager == 1 ? "checked" : "")><label for="rating4_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Pay", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating5_5" name="RatingPay" value="5" @(Model.RatingPay == 5 ? "checked" : "")><label for="rating5_5">5</label>
                                                    <input type="radio" id="rating5_4" name="RatingPay" value="4" @(Model.RatingPay == 4 ? "checked" : "")><label for="rating5_4">4</label>
                                                    <input type="radio" id="rating5_3" name="RatingPay" value="3" @(Model.RatingPay == 3 ? "checked" : "")><label for="rating5_3">3</label>
                                                    <input type="radio" id="rating5_2" name="RatingPay" value="2" @(Model.RatingPay == 2 ? "checked" : "")><label for="rating5_2">2</label>
                                                    <input type="radio" id="rating5_1" name="RatingPay" value="1" @(Model.RatingPay == 1 ? "checked" : "")><label for="rating5_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Benefits", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding:10px;" })
                                        <div class="col-md-9">
                                            <div class="col-md-3">
                                                <div class="rating" style="margin-top:4px;">
                                                    <input type="radio" id="rating6_5" name="RatingBenefits" value="5" @(Model.RatingBenefits == 5 ? "checked" : "")><label for="rating6_5">5</label>
                                                    <input type="radio" id="rating6_4" name="RatingBenefits" value="4" @(Model.RatingBenefits == 4 ? "checked" : "")><label for="rating6_4">4</label>
                                                    <input type="radio" id="rating6_3" name="RatingBenefits" value="3" @(Model.RatingBenefits == 3 ? "checked" : "")><label for="rating6_3">3</label>
                                                    <input type="radio" id="rating6_2" name="RatingBenefits" value="2" @(Model.RatingBenefits == 2 ? "checked" : "")><label for="rating6_2">2</label>
                                                    <input type="radio" id="rating6_1" name="RatingBenefits" value="1" @(Model.RatingBenefits == 1 ? "checked" : "")><label for="rating6_1">1</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">

                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What did you enjoy most about your job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatDidEnjoyMostAboutYourJob, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What did you enjoy least about your job?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatDidEnjoyLeastAboutYourJob, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes Krishibid Group a good place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakesKrishibidGroupGoodPlaceToWork, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What makes Krishibid Group a poor place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatMakesKrishibidGroupPoorPlaceToWork, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("What recommendation would you have for making the company as a whole a better place to work?", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.WhatRecommendationToMakingBetterToWork, 4, 200, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex; justify-content:left;">
                                        @Html.Label("Would you have stayed if a more satisfactory arrangement could have been worked out?", htmlAttributes: new { @class = "control-label col-md-4" })
                                        @*<div class="col-md-7">
                    <select class="form-control" name="IsConsideredStaying">
                        <option>--Please Select--</option>
                        <option value="1">Yes</option>
                        <option value="2">No</option>
                    </select>
                </div>*@
                                        @Html.DropDownListFor(x => x.WouldHaveUStatyedIfMoreStatisfactoryArrangementWorkedOUt, new List<SelectListItem> { new SelectListItem { Text = "--Please Select--", Value = "" }, new SelectListItem { Text = "Yes", Value = "true" }, new SelectListItem { Text = "No", Value = "false" } }, new { @class = "form-control" })

                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group" style="display:flex;">
                                        @Html.Label("Please sign and date this form below authorizing the placement of this Exit Interview form within your personal file.", htmlAttributes: new { @class = "control-label col-md-12" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">@Html.ActionLink("Back to Index", "ExitInterview", "Employee", new { @class = "btn btn-primary" })</div>
                <div class="col-md-4"></div>
                <div class="col-md-3"><input type="submit" value="@actionBtn" class="btn btn-primary" style="float:right;"/></div>
                <div class="col-md-1"></div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            // Enable Live Search.
            $('#designationId').attr('data-live-search', true);

            //// Enable multiple select.
            //$('#CountryList').attr('multiple', true);
            //$('#CountryList').attr('data-selected-text-format', 'count');

            $('.select').selectpicker(
                {
                    width: '100%',
                    style: 'btn-warning',
                    size: 6,
                    iconBase: 'fa',
                    tickIcon: 'fa-check'
                });
        });

        $(function () {
            $("#managerName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#managerId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        $('#ddlBank').change(function () {
            $.ajax({
                type: "post",
                url: "/BankBranch/GetBranchByBank",
                data: { bankId: $('#ddlBank').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var bankBranch = "<select>";
                    bankBranch = bankBranch + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        bankBranch = bankBranch + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    bankBranch = bankBranch + '</select>';
                    $('#ddlBankBranch').html(bankBranch);
                }
            });
        });

        $(document).ready(function () {
            $('.selectpicker').selectpicker({
                liveSearch: true,
                width: 270,
                showSubtext: true
            });
        });


        $('#ddlDivision').change(function () {
            //var text = $('#ddlDivision option:selected').text();
            $.ajax({
                type: "post",
                url: "/Employee/GetDistrictByDivisionId",
                data: { divisionId: $('#ddlDivision').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var district = "<select>";
                    district = district + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#ddlDistrict').html(district);
                }
            });
        });

        //Bind Upzila base on District Selection
        $('#ddlDistrict').change(function () {
            //data: { districtId: $('#ddlDistrict option:selected').text() },
            $.ajax({
                type: "post",
                url: "/Employee/GetUpzilaByDistrictId",
                data: { districtId: $('#ddlDistrict').val() },

                datatype: "json",
                traditional: true,
                success: function (data) {
                    var upazila = "<select>";
                    upazila = upazila + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        upazila = upazila + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    upazila = upazila + '</select>';
                    $('#ddlThanaUpazila').html(upazila);
                }
            });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        function checkServiceLength() {

            var JoiningDateString = $("#JoiningDateString").val();

            var EndDate = $("#ResignDate").val();
            // Parse input strings into Date objects
            var joiningDate = new Date(JoiningDateString);
            joiningDate.setDate(joiningDate.getDate() - 1);//decrease by one daayy  ffoorr  aaccuurraattee  ccaallccuullaattee
            //// var endDate = new Date(EndDate);
            var endDate = moment(EndDate, 'DD-MM-YYYY').toDate();


            // Calculate the difference in milliseconds
            var difference = endDate - joiningDate;
           //// alert("OK" + difference);
            // Convert milliseconds to years, months, and days
            var years = Math.floor(difference / (365.25 * 24 * 60 * 60 * 1000));
            //// alert(years);
            difference -= years * (365.25 * 24 * 60 * 60 * 1000);
            var months = Math.floor(difference / (30.44 * 24 * 60 * 60 * 1000));
            //// alert(months);
            difference -= months * (30.44 * 24 * 60 * 60 * 1000);
            var days = Math.floor(difference / (24 * 60 * 60 * 1000));


            // Display the result
            $("#ServiceLength").val(years + " Years, " + months + " Months, and " + days + " Days");
        }
    </script>

}