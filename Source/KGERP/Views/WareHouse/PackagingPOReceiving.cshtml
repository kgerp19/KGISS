@model KGERP.Services.WareHouse.VMWareHousePOReceivingSlave
@using KGERP.Utility;
@{
    ViewData["Title"] = "Material Received";
    Layout = "~/Views/Shared/_Layout.cshtml";

    decimal totalValue = 0;
    decimal? totalLandedValue = Math.Round(Model.TruckFare, 2) +
                                Math.Round(Model.LabourBill, 2);

}


<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>


<section class="content-header">
    <h1>

        <span>Material Received</span>

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li> Material Receive </li>
        <li class="active">
            <a class="btn-link btn btn-primary btn-xs" target="_blank" href="~/WareHouse/PackagingPOReceiving?companyId=@Model.CompanyId">Add New MR</a>

        </li>
    </ol>
</section>
@using (Html.BeginForm("PackagingPOReceiving", "WareHouse", FormMethod.Post, new { id = "wareHousePOReceivingSlaveFromID", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">
                    <div class="box-header">

                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.MaterialReceiveId > 0)
                        {
                            @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })


                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                <table class="table">
                                    <tr>
                                        <td><b>Supplier Name</b></td>
                                        <td>:</td>
                                        <td colspan="4">@Model.SupplierName</td>
                                    </tr>

                                    <tr>
                                        <td><b>MR No</b></td>
                                        <td>:</td>
                                        <td><b>@Model.ChallanCID</b></td>

                                        <td width="18%"><b>MR Date</b></td>
                                        <td width="5%">:</td>
                                        <td width="27%">@Model.ChallanDate</td>
                                    </tr>
                                    <tr>
                                        <td width="18%"><b>Challan No</b></td>
                                        <td width="5%">:</td>
                                        <td width="27%">@Model.Challan</td>
                                        <td width="18%"><b>Challan Date</b></td>
                                        <td width="5%">:</td>
                                        <td width="27%">@Model.ChallanDate</td>
                                    </tr>
                                    <tr>

                                        <td><b>PO NO</b></td>
                                        <td>:</td>
                                        <td><a href="~/Report/PackagingPurchaseOrderReports?purchaseOrderId=@Model.Procurement_PurchaseOrderFk&companyId=@Model.CompanyFK&reportName=ISSPurchaseOrderReports" target="_blank" title="PO Report">@Model.POCID</a> </td>

                                        <td><b>PO Date</b></td>
                                        <td>:</td>
                                        <td>@Model.PODate</td>
                                    </tr>
                                    <tr>
                                        <td><b>Warehouse</b></td>
                                        <td>:</td>
                                        <td>@Model.stockname</td>

                                        <td><b>Delivery Address</b></td>
                                        <td>:</td>
                                        <td>@Model.DeliveryAddress</td>
                                    </tr>
                                    <tr>

                                        <td><b>Transportation Cost</b></td>
                                        <td>:</td>
                                        <td>
                                            @Model.TruckFare BDT
                                        </td>

                                        <td><b>Load Unload Cost</b></td>
                                        <td>:</td>
                                        <td>
                                            @Model.LabourBill BDT

                                        </td>
                                    </tr>
                                      
                                </table>
                            </div>
                            <div class="col-md-1"> </div>

                            if (Model.MaterialReceiveId > 0)
                            {
                                <div class="box-header" style="clear:both">
                                    <h4><b>Received Item:</b> </h4>
                                    
                                </div>
                                <div class="table-responsive col-md-12 text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>
                                                <th>Raw Material </th>

                                                <th class="center">PO Quantity</th>
                                                <th class="center">Received Quantity</th>
                                                <th>Unit Price</th>
                                                <th>Total Price</th>
                                                <th>Discount</th>
                                                <th>Stock Price</th>
                                                <th class="center">Total Stock Amount</th>
                                                <th class="center">VAT Amount</th>
                                            </tr>
                                        </thead>
                                        @{
                                            int sl = 0;
                                            decimal totalProductDiscount = 0;
                                            decimal totalVATAddition = 0;
                                            decimal totalStockInValue = 0;

                                        }
                                        <tbody>
                                            @foreach (var item in Model.DataListSlave)
                                            {
                                                totalValue += item.StockInQty * item.PurchasingPrice;
                                                totalProductDiscount += item.ProductDiscount;
                                                totalVATAddition += item.VATAddition;

                                                totalStockInValue += (item.StockInQty * item.StockInRate);

                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td>@item.ProductSubCategory @item.ProductName</td>

                                                    <td>@item.POQuantity</td>
                                                    <th>@item.ReceivedQuantity</th>
                                                    <td>@item.PurchasingPrice @Model.CurancYName</td>
                                                    <td>@(String.Format("{00:00.00}",Math.Ceiling( Math.Round(item.ReceivedQuantity * item.PurchasingPrice,2)))) @Model.CurancYName</td>

                                                    <td>@item.ProductDiscount</td>
                                                    <td>@item.StockInRate</td>
                                                    <td>@(String.Format("{00:00.00}",Math.Ceiling( Math.Round(item.StockInQty * item.StockInRate,2))))</td>
                                                    <td>@item.VATAddition</td>
                                                   
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td></td>
                                                <th colspan="4">Total MRR Value</th>

                                                <th>@String.Format("{00:00.00}", Math.Ceiling(Math.Round(totalValue, 2)))</th>
                                                <th>@String.Format("{00:00.00}", Math.Round(totalProductDiscount, 2)) </th>
                                                <td></td>
                                                <th>@String.Format("{00:00.00}", Math.Round(totalStockInValue, 2)) </th>
                                                <th>@String.Format("{00:00.00}", Math.Round(totalVATAddition, 2)) </th>




                                            </tr>



                                        </tfoot>
                                    </table>
                                </div>
                            }

                        }
                        else
                        {


                            <div class="row">
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->
                                    <div class="box-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Challan No</label>
                                                    @Html.TextBoxFor(model => model.Challan, new { @class = "form-control ", @placeholder = "Challan No", @required = "required", data_bv_message = "Challan no is required.", })
                                                    @Html.ValidationMessageFor(model => model.Challan, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Challan Date</label>
                                                    <input name="ChallanDate" asp-for="ChallanDate" type="text" value="@DateTime.Now.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtDate" placeholder="Challan Date" autocomplete="on">
                                                    @Html.ValidationMessageFor(model => model.ChallanDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label">Warehouse:</label>
                                                    @Html.DropDownListFor(model => model.StockInfoId, Model.StockInfoList as SelectList, "==Warehouse==", new { id = "ddlStockInfoId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.StockInfoId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="message-text" class="col-form-label"> Receive By:</label>
                                                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @name = "receiverName", @id = "receiverName" , required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                                    @Html.HiddenFor(x => x.ReceivedBy, new { @id = "receivedBy", @name = "receivedBy" })
                                                    @Html.HiddenFor(x => x.Discount, new { @id = "invoiceDiscount", @name = "Discount" })
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div>
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label"> Transport Cost</label>
                                                        @Html.EditorFor(model => model.TruckFare, new { htmlAttributes = new { @class = "form-control", @name = "Transport", @id = "Transport" } })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div>
                                                    <div class="form-group">
                                                        <label for="message-text" class="col-form-label"> Load Unload Cost</label>
                                                        @Html.EditorFor(model => model.LabourBill, new { htmlAttributes = new { @class = "form-control", @name = "Unload", @id = "Unload" } })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- /.box-body -->
                                    <!-- /.box -->
                                </div>
                                <!--/.col (left) -->
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->

                                    <div class="box-body">
                                        <div class="form-group" style="padding:0px">
                                            <label>Supplier</label>
                                            @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @id = "txtSupplier" } })

                                            @Html.HiddenFor(model => model.Common_SupplierFK, new { id = "ddlCommon_SupplierFK" })
                                            @Html.HiddenFor(model => model.CurrenceyRate, new { id = "txtCurrenceyRate" })
                                            @Html.HiddenFor(model => model.LcID, new { id = "txtLcID" })
                                            @Html.ValidationMessageFor(model => model.Common_SupplierFK, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="form-group" style="padding:0px">
                                            <label>Purchase Order Number</label>
                                            @Html.DropDownListFor(model => model.Procurement_PurchaseOrderFk, Model.PoList as SelectList, new { id = "ddlPurchaseOrderFk", @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })

                                            @*@Html.EditorFor(model => model.POCID, new { htmlAttributes = new { @class = "form-control", @name = "Requisition CID", @id = "txtPOCID" } })

                                                @Html.HiddenFor(model => model.Procurement_PurchaseOrderFk, new { id = "ddlProcurementPurchaseOrderFk" })
                                                @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })*@

                                        </div>

                                        <table id="poDetailsTable" class="table">
                                            <tr>
                                                <td>Supplier</td>
                                                <td>
                                                    @Html.HiddenFor(x => x.Common_SupplierFK, new { id = "hiddenCommonSupplierFK" })
                                                    <span id="txtSupplierNaame"></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    PO Date
                                                </td>
                                                <td><span id="txtPODate"></span></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Delivery Address
                                                </td>
                                                <td><span id="txtDeliveryAddress"></span></td>
                                            </tr>


                                        </table>
                                    </div>


                                </div>


                                <div class="col-md-12">
                                    <div class="box">

                                        <div class="box-footer">
                                            <div id="procurementPurchaseOrderSlaveData"></div>
                                        </div>


                                    </div>

                                </div>



                            </div>

                        }

                        @if (Model.MaterialReceiveId > 0)
                        {
                            <div class="box-footer">
                                <div class="row">
                                    <div class="col-md-3">

                                        <a target="_blank" href="~/Report/PackagingBillReports?companyId=@Model.CompanyId&materialReceiveId=@Model.MaterialReceiveId&reportName=ISSBillReports" style="width:100%" class="btn btn-success">
                                            Bill

                                        </a>
                                    </div>
                                    <div class="col-md-4">
                                        <a href="~/Report/GetMRRReport?materialReceiveId=@Model.MaterialReceiveId&reportName=ISSMRRReport" target="_blank" style="width:100%" class="btn btn-primary">
                                            MRR
                                        </a>
                                    </div>
                                    <div class="col-md-5">
                                        @if (!Model.IsSubmitted)
                                        {
                                            <a onclick="makeMaterialReceiveSubmitable(@Model.MaterialReceiveId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitProdReferenceModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                                        }
                                        else
                                        {
                                            <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                                        }
                                        @*<button type="submit" id="sbmt" style="width:100%">Y</button>*@
                                        @*<button type="button"  id="sbmt" style="width:100%" >Y</button>*@

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Challan Item</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "challanSlaveId" })

                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btncloseandreset" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="btnsave" class="btn btn-primary">&nbsp;Delete</button>&nbsp;

                </div>
            </div>
        </div>
    </div>
}



@using (Html.BeginForm("PackagingPOReceiving", "WareHouse", FormMethod.Post, new { id = "submitGCCLPOReceivingSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProdReferenceModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Submit</b></h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                    @Html.HiddenFor(model => model.MaterialReceiveId, new { id = "submitMaterialReceiveId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })
                    @Html.HiddenFor(model => model.SupplierPaymentMethodEnumFK, new { id = "submitSupplierPaymentMethodEnumFK" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Submit this MR?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>

}

@section scripts {

    <script type="text/javascript">
        function makeMaterialReceiveSubmitable(rowId) {
            $("#submitMaterialReceiveId").val(rowId)
            $('#submitCompanyFK').val("@Model.CompanyFK");
            $('#submitActionId').val(10);
            $('#submitSupplierPaymentMethodEnumFK').val(@Model.SupplierPaymentMethodEnumFK);
        }
        var z = 1;

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
            $("#chkIsDefineBin input:checkbox").change(function () {
                var ischecked = $(this).is(':checked');
                if (ischecked) {
                    alert('uncheckd ' + $(this).val());
                }
                else {
                    alert('uncheckd ' + $(this).val());

                }


            });




            $('#txtSupplier').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("AutoCompleteSupplier", "Configuration")",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {

                        },
                        failure: function (response) {

                        },

                    });
                },
                select: function (e, i) {


                    var test = $('#ddlCommon_SupplierFK').val(i.item.val);
                    $.ajax({
               url: "@Url.Action("GetPurchaseOrder", "WareHouse")",
                        data: { id: i.item.val },
                        dataType: "json",
                        Method: "GET",
               success: function (data1) {
                   console.log(data1);

                   var select = $("#ddlPurchaseOrderFk");
                   select.children().remove();
                   select.append($("<option>").val('').text('Select'));
                   $(data1).each(function (index, item) {
                       select.append($("<option data-toggle='tooltip' title='" + item.PurchaseOrderId + "'>").val(item.PurchaseOrderId).text(item.PurchaseOrderNo));
                   });
                   return false;

                        },
               error: function (data1) {

                        },
               failure: function (data1) {

                        },

                    });

                },
                minLength: 1,
                cache : true
            });



            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoCompleteByCompany/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "CompanyId":@Model.CompanyFK}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
        function DateCustom(orderDate) {
            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }

            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#challanSlaveId').val(id);
                $('#ActionId').val(3);

            }
        }
        function resetForm() {
            $('#deliveryChallanSlaveFormId')[0].reset();
            $('#ActionId').val(1);
        }



        $("#ddlPurchaseOrderFk").change(function () {
            $('#EduInfo tbody').empty();
            var PoId = $("#ddlPurchaseOrderFk").find(":selected").val();
           $.ajax({
               url: "@Url.Action("PackagingWareHousePODetails", "WareHouse")",
               data: { id: PoId },
                        dataType: "json",
                        Method: "GET",
               success: function (data) {


                   $("#txtCurrenceyRate").val(data.CurrenceyRate)
                   $("#txtLcID").val(data.LcID)
                   $("#txtSupplierNaame").append(data.SupplierName);
                   var ppppODate = DateCustom(data.PODate);
                   $('#txtPODate').text(ppppODate);
                   $("#txtDeliveryAddress").append(data.DeliveryAddress);
                   $("#txtTDSDeduction").val(data.TDSDeduction);

                        },
               error: function (data1) {

                        },
               failure: function (data1) {

                        },
           });
                       $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetPackagingPurchaseOrderSlaveData", "WareHouse")",
                    datatype: "Json",
                           data: { poId: PoId },
                     success: function (data) {
                         console.log(data);
                         $("#procurementPurchaseOrderSlaveData").html(data);
                    }
                });
        });




        function DateCustom(orderDate) {
            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }
          $(function () {
            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoCompleteByCompany/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "CompanyId":@Model.CompanyFK}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });



    </script>
}