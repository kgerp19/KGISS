@model KGERP.Service.ServiceModel.EmployeeModel

@{
    ViewBag.Title = "Details";
}

<style>
    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }
    .shadow {
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important;
    }
    .card {
        position: relative;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0,0,0,.125);
        border-radius: 0.25rem;
    }
</style>

<div class="row">
    <table class="table table-striped table-bordered">
        <tbody>
            <tr>
                <td colspan="4">
                    <div style="width: 100px;">
                        <img style="margin: 2px;" alt="Picture" height="200" width="100" src="@Url.Content(Model.ImagePath)" />
                    </div>
                    <div style="width: 350px;float: left;margin-left: 104px;margin-top: -42px;">
                        <span><b>Name : </b></span> <span>@Model.Name</span><br />
                        <span><b>Employee ID: </b></span> <span >@Model.EmployeeId</span>
                    </div>
                    <div>
                        <span style="float:right;">
                            <a href="@Url.Action("Index", "EmployeeLogs")" class="btn btn-primary btn-xs " title="Employee Termination/Leave without Pay">
                                <i class="fa fa-plus" style="font-size:15px;" aria-hidden="true">Inventory</i>
                            </a>
                        </span>
                    </div>
                </td>
            </tr>

        </tbody>
    </table>
    <div style="background-color:#4CAF50;color:#FFFFFF;padding:2px;">
        <h4><b>Personal Details</b></h4>
    </div>
    <table class="table table-striped table-bordered">
        <tbody>
            <tr>
                <td style="font-weight:bold">Name</td>
                <td>@Model.Name</td>
                <td style="font-weight:bold">Nick Name</td>
                <td>@Model.ShortName</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Date of Birth</td>
                <td>
                    @if (Model.DateOfBirth.HasValue)
                    {
                        @Model.DateOfBirth.Value.ToString("dd-MMM-yyyy")
                    }
                </td>
                <td style="font-weight:bold">Gender</td>
                <td>@Html.DisplayFor(model => model.DropDownItem4.Name)</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Father Name</td>
                <td>@Model.FatherName</td>
                <td style="font-weight:bold">Mother Name</td>
                <td>@Model.MotherName</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Present Address</td>
                <td>@Model.PresentAddress</td>
                <td style="font-weight:bold">Permanent Address</td>
                <td>@Model.PermanentAddress</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Marital Status </td>
                <td>@Html.DisplayFor(model => model.DropDownItem7.Name)</td>
                <td style="font-weight:bold">Marriage Date</td>
                <td>
                    @if (Model.DateOfMarriage.HasValue)
                    {
                        @Model.DateOfMarriage.Value.ToString("dd-MMM-yyyy")
                    }
                </td>
            </tr>


            <tr>
                <td style="font-weight:bold">Spouse </td>
                <td>@Model.SpouseName</td>
                <td style="font-weight:bold">Blood Group</td>
                <td>@Html.DisplayFor(model => model.DropDownItem.Name)</td>

            </tr>

            <tr>
                <td style="font-weight:bold">Country</td>
                <td> @Html.DisplayFor(model => model.DropDownItem1.Name)</td>
                <td style="font-weight:bold">National Id</td>
                <td>@Model.NationalId</td>
            </tr>

            <tr>
                <td style="font-weight:bold">Religion</td>
                <td>
                    @if (Model.DropDownItem9 != null)
                    {
                        @Model.DropDownItem9.Name
                    }
                </td>
                <td style="font-weight:bold">District</td>
                <td>
                    @if (Model.District != null)
                    {
                        @Model.District.Name
                    }
                </td>
            </tr>
            <tr>
                <td style="font-weight:bold">Personal Email</td>
                <td>@Model.Email</td>
                <td style="font-weight:bold">Contact No</td>
                <td>@Model.MobileNo</td>
            </tr>

            <tr>
                <td style="font-weight:bold">Passport No</td>
                <td>@Model.PassportNo</td>
                <td style="font-weight:bold">Driving License</td>
                <td>@Model.DrivingLicenseNo</td>
            </tr>

        </tbody>
    </table>

    <div style="background-color:#4CAF50;color:#FFFFFF;padding:2px;">
        <h4><b>Service Information</b></h4>
    </div>

    <table class="table table-striped table-bordered">
        <tbody>
            <tr>
                <td style="font-weight:bold">Employee ID</td>
                <td>@Model.EmployeeId</td>
                <td style="font-weight:bold">Card ID</td>
                <td>@Model.CardId</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Department</td>
                <td>@Model.Department.Name</td>
                <td style="font-weight:bold">Designation</td>
                <td>@Model.Designation.Name</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Reporting Person</td>
                <td>@Model.Employee3.Name</td>
                <td style="font-weight:bold">Reporting Person ID</td>
                <td>@Model.Employee3.EmployeeId</td>
            </tr>

            <tr>
                <td style="font-weight:bold">Joining Date</td>
                <td>
                    @if (Model.JoiningDate.HasValue)
                    {
                        @Model.JoiningDate.Value.ToString("dd-MMM-yyyy")
                    }
                </td>
                <td style="font-weight:bold">Employee Category</td>
                <td>@Html.DisplayFor(model => model.DropDownItem3.Name)</td>

            </tr>

            <tr>
                <td style="font-weight:bold">Job Type</td>
                <td>@Html.DisplayFor(model => model.DropDownItem5.Name)</td>
                <td style="font-weight:bold">Office Type</td>
                <td>@Html.DisplayFor(model => model.DropDownItem8.Name)</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Office Email</td>
                <td>@Model.OfficeEmail</td>
                <td style="font-weight:bold">PABX</td>
                <td>@Model.PABX</td>

            </tr>


            <tr>
                <td style="font-weight:bold">Bank</td>
                <td>
                    @if (@Model.Bank != null)
                    {
                        @Model.Bank.Name
                    }

                </td>
                <td style="font-weight:bold">Bank Branch</td>
                <td>
                    @if (Model.BankBranch != null)
                    {
                        @Model.BankBranch.Name
                    }
                </td>
            </tr>

            <tr>
                <td style="font-weight:bold">Account No</td>
                <td>@Model.BankAccount</td>
                <td style="font-weight:bold">Shift</td>
                <td>@Model.Shift.Name</td>
            </tr>
            <tr>
                <td style="font-weight:bold">Social ID</td>
                <td></td>
                <td style="font-weight:bold">TIN No</td>
                <td>@Model.TinNo</td>
            </tr>


        </tbody>
    </table>
</div>

<div class="bg-w">
    <b>Employee Inventory </b>
</div>

<div id="showLog">

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

<script>
    $(document).ready(function () {
        ff();
    });

    function ff() {
         $.ajax({
    type: "GET",
    url: "@Url.Action("getloglistByEmp", "EmployeeLogs")",
    datatype: "json",
    data: {
        EmpId: @Model.Id
    },
    success: function (data) {
        if (data) {
            console.log("list444", data);

            var tag = '';
            var table = '<table style="border-collapse: collapse; width: 100%; border: 2px solid #000;">';

            // Add the table headers row
            table += '<tr>';
            table += '<th style="border: 2px solid #000; padding: 5px;">Inventory Type</th>';
            table += '<th style="border: 2px solid #000; padding: 5px;">Effective Date</th>';
            table += '<th style="border: 2px solid #000; padding: 5px;">Description</th>';
            table += '<th style="border: 2px solid #000; padding: 5px;">Attachments</th>';
            table += '<th style="border: 2px solid #000; padding: 5px;">Action</th>';
            table += '</tr>';

            $.each(data.models, function (key, item) {
                table += '<tr>';
                // Add a class for the Log Type cell and set a "type" attribute
                table += '<td class="log-type" type="' + item.logtypeName + '" style="border: 2px solid #000; padding: 5px;">' + item.logtypeName + '</td>';
                table += '<td style="border: 2px solid #000; padding: 5px;">' + item.stringlogdate + '</td>';
                table += '<td style="border: 2px solid #000; padding: 5px;">' + item.Description + '</td>';

                // Accumulate attachment data
                var attachmentData = '';
                $.each(item.Attachments2, function (index, attachment) {
                    attachmentData += (index + 1) + '. ';

                    if (attachment.Extension === ".jpg" || attachment.Extension === ".jpeg" || attachment.Extension === ".png") {
                        attachmentData += '<a href="/Upload/DownloadFTP?docid=' + attachment.DocId + '"><img width="40" style="height:70px;width:70px;" src="/Upload/DownloadFTP?docid=' + attachment.DocId + '" alt="' + attachment.Title + '"></a>';
                    } else {
                        attachmentData += '<a target="_blank" class="btn btn-primary btn-sm" title="Download File" href="/Upload/DownloadFTP?docid=' + attachment.DocId + '">' + attachment.Title + ' <i class="glyphicon glyphicon-download"></i></a>';
                    }

                    attachmentData += '<br>'; // Add a line break between attachment links
                    attachmentData += '<br>'; // Add a line break between attachment links
                });

                table += '<td style="border: 2px solid #000; padding: 5px;">' + attachmentData + '</td>';
                table += '</tr>';
            });

            table += '</table>';

            $('#showLog').empty();
            $('#showLog').html(table);


        }

        }


});
    }

</script>
}







