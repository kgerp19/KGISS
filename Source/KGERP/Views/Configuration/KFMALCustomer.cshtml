
@model KGERP.Service.Configuration.VMCommonSupplier

@{
    ViewData["Title"] = "Dealer / Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        Dealer / Customer 
        <a href="@Url.Action("ZoneWiseCustomer","Report", new { companyId = Request.QueryString["companyId"]})" target="_blank" class="btn btn-primary btn-xs">
            Export @Model.CompanyName Customer
        </a>
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">
        <a class="btn btn-link" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            <i class="fa fa-user "></i>Add Customer
        </a>
        </li>
    </ol>
</section>

<section class="content">

    @using (Html.BeginForm("KFMALCustomer", "Configuration", FormMethod.Post, new { id = "commonCustomerformId", @class = "formValidator", @enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID, new { id = "customerId" })
        @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
       
    <div class="collapse" id="collapseExample">
        <div class="bg-success">
            <span style="padding:15px;font-size:large;">
                Basic Information
            </span>

        </div>
        <br />
        <div class="row">


            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Dealer/Customer Name:</label>
                    @Html.TextBoxFor(model => model.Name, new { id = "txtCustomerName", @class = "form-control", @autocomplete = "off", @placeholder = "Customer Name", required = "required" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Propietor:</label>
                    @Html.TextBoxFor(model => model.Propietor, new { id = "txtPropietor", @class = "form-control", @placeholder = "Propietor" })
                    @Html.ValidationMessageFor(model => model.Propietor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Contact Person:</label>
                    @Html.TextBoxFor(model => model.ContactPerson, new { id = "txtContactPerson", @class = "form-control", @placeholder = "ContactPerson" })
                    @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Mobile:</label>
                    @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "form-control", @placeholder = "Mobile" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Email:</label>
                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", @autocomplete = "off", @placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Division:</label>
                    @Html.DropDownListFor(model => model.Common_DivisionFk, Model.DivisionList as SelectList, "--Division--", new { id = "ddlCommon_DivisionFk", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.Common_DivisionFk, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">District:</label>
                    @Html.DropDownListFor(model => model.Common_DistrictsFk, Model.DistrictList as SelectList, "--District--", new { id = "ddlCommon_DistrictsFk", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.Common_DistrictsFk, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Upazila:</label>
                    @Html.DropDownListFor(model => model.Common_UpazilasFk, Model.UpazilasList as SelectList, "--Upazila--", new { id = "ddlCommon_UpazilasFk", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.Common_UpazilasFk, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Zone:</label>
                    @Html.DropDownListFor(model => model.ZoneId, Model.ZoneListList as SelectList, "--Select Zone--", new { id = "ddlZoneId", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Territory:</label>
                    @Html.DropDownListFor(model => model.SubZoneId, Model.TerritoryList as SelectList, "--Select Territory--", new { id = "ddlSubZoneId", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.SubZoneId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Customer Type:</label>
                    @Html.DropDownListFor(model => model.CustomerTypeFk, Model.CustomerTypeList as SelectList, "--Customer Type--", new { id = "ddCustomerTypeFk", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.CustomerTypeFk, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Product Type:</label>
                    @Html.DropDownListFor(model => model.CustomerProductTypeFk, Model.KFMALCustomerTypeList as SelectList, "--Product Type--", new { id = "ddCustomerTypeFk", @class = "form-control", required = "true" })
                    @Html.ValidationMessageFor(model => model.CustomerProductTypeFk, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">NID NO:</label>
                    @Html.TextBoxFor(model => model.NID, new { id = "txtNID", @class = "form-control", @placeholder = "NID NO" })
                    @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Address:</label>
                    @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Address", @Rows = 1 })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Business Address:</label>
                    @Html.TextAreaFor(model => model.BusinessAddress, new { id = "txtBusinessAddress", @class = "form-control", @placeholder = "Business Address", @Rows = 1 })
                    @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">E-TIN:</label>
                    @Html.TextBoxFor(model => model.ETinNo, new { id = "txtETinNo", @class = "form-control", @placeholder = "E-TIN" })
                    @Html.ValidationMessageFor(model => model.ETinNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Trade License:</label>
                    @Html.TextBoxFor(model => model.TradeLicense, new { id = "txtTradeLicense", @class = "form-control", @placeholder = "Trade License" })
                    @Html.ValidationMessageFor(model => model.TradeLicense, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Security Cheque:</label>
                    @Html.TextAreaFor(model => model.CheckNo, new { id = "txtGurantorAddress", @class = "form-control", @placeholder = "GurantorAddress", @Rows = 1 })
                    @Html.ValidationMessageFor(model => model.CheckNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Security Amount:</label>
                    @Html.TextAreaFor(model => model.SecurityAmount, new { id = "txtGurantorAddress", @class = "form-control", @placeholder = "GurantorAddress", @Rows = 1 })
                    @Html.ValidationMessageFor(model => model.SecurityAmount, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Guarantor:</label>
                    @Html.TextBoxFor(model => model.GuarantorName, new { id = "txtGuarantorName", @class = "form-control", @placeholder = "Guarantor Name" })
                    @Html.ValidationMessageFor(model => model.GuarantorName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Guarantor Mobile NO:</label>
                    @Html.TextBoxFor(model => model.GurantorMobileNo, new { id = "txtGurantorMobileNo", @class = "form-control", @placeholder = "Guarantor Mobile NO" })
                    @Html.ValidationMessageFor(model => model.GurantorMobileNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Gurantor Address:</label>
                    @Html.TextAreaFor(model => model.GurantorAddress, new { id = "txtGurantorAddress", @class = "form-control", @placeholder = "GurantorAddress", @Rows = 1 })
                    @Html.ValidationMessageFor(model => model.GurantorAddress, "", new { @class = "text-danger" })
                </div>
            </div>
           

        </div>

        <div class="bg-warning">
            <span style="padding:15px;font-size:large;">
                Nominee Information
            </span>

        </div>
        <br />

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Nominee Name:</label>
                    @Html.TextBoxFor(model => model.NomineeName, new { id = "txtNomineeName", @class = "form-control", @placeholder = "Nominee Name" })
                    @Html.ValidationMessageFor(model => model.NomineeName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Nominee Phone:</label>
                    @Html.TextBoxFor(model => model.NomineePhone, new { id = "txtNomineePhone", @class = "form-control", @placeholder = "Nominee Phone" })
                    @Html.ValidationMessageFor(model => model.NomineePhone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Nominee Relation:</label>
                    @Html.DropDownListFor(model => model.NomineeRelation, Model.NomineeRelationList as SelectList, "--Select Relation--", new { id = "ddNomineeRelation", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NomineeRelation, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Nominee NID NO:</label>
                    @Html.TextBoxFor(model => model.NomineeNID, new { id = "txtNomineeNID", @class = "form-control", @placeholder = "Nominee NID NO" })
                    @Html.ValidationMessageFor(model => model.NomineeNID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>



        <div class="row">

            <div class="col-md-3">
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Payment Type :</label>
                    Cash
                    @Html.RadioButtonFor(model => model.PaymentType, "Cash", new { @id = "cash", @name = "Vendor.CustomerType", @checked = "checked" })
                    Credit
                    @Html.RadioButtonFor(model => model.PaymentType, "Credit", new { @id = "credit", @name = "Vendor.CustomerType" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">

                    <label for="message-text" class="col-form-label">Image Uplode:</label>
                    <input type="file" name="file" id="file" />
                </div>
            </div>
        </div>
        

        <div class="col-md-4" style="margin-left:400px; margin-top:30px;">
            <button type="submit" id="btnSave" class="btn btn-primary btn-block "><i class='fa fa-plus'></i> Save Customer</button>
        </div>

    </div>


            <div class="box-body">
                <table id="KgErpDataTable" style="background-color:#ddd;width:100%" class="table table-striped">
                    <thead>
                        <tr>
                            <th style="width:5%">SL</th>

                            <th style="width:15%">Code</th>
                            <th style="width:20%">

                                Name
                            </th>

                            <th style="width:10%">
                                Type
                            </th>
                            <th style="width:10%">
                                Phone
                            </th>
                            <th style="width:10%">
                                Email
                            </th>
                            <th style="width:10%">
                                Zone
                            </th>
                            <th style="width:10%">
                                NID
                            </th>




                            <th style="width:10%">Action</th>
                        </tr>
                    </thead>
                    @{int sl = 0;
                    }
                    <tbody>
                        @foreach (var item in Model.DataList)
                        {
                            <tr>
                                <td style="width:5%">@(++sl)</td>
                                @*<td>@item.Common_CountriesFk || @item.HeadGLId || @item.NomineeName</td>*@
                                <td style="width:15%">
                                    @item.Code
                                </td>
                                <td style="width:20%">
                                    @item.Name

                                </td>

                                <td style="width:10%">
                                    <span class="bg-gray-light">
                                        @item.CustomerType
                                    </span>
                                </td>

                                <td style="width:6%">
                                    @item.Phone
                                </td>
                                <td style="width:10%">
                                    @item.Email
                                </td>
                                <td style="width:10%">
                                    @item.ZoneName
                                </td>
                                <td style="width:10%">
                                    @item.NID
                                </td>


                                <td style="width:14%">
                                    @*<a href="~/Vendor/CreateVendorDeed?companyId=8&vendorDeedId=@item.VendorDeedId&customerId=@item.ID" target="_blank" class="linkPointer btn btn-default btn-xs" title="Deed Configuration"><i class="fa fa-cog"></i></a>*@

                                    <a href="~/Configuration/CustomerUplode?customerId=@item.ID" target="_blank" class="linkPointer btn btn-success btn-xs" title="File Upload"><i class="fa fa-file"></i></a>
                                    <button id="@item.ID" type="button" onclick="makeEditble(@item.ID);" class="linkPointer btn btn-warning btn-xs" title="Edit"><i class="fa fa-pencil-square-o"></i></button>
                                    <button id="@item.ID" type="button" onclick="makeDeletable(@item.ID);" class="linkPointer btn btn-danger btn-xs" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                            data-placement="top">
                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                    </button>

                                    @*@if (item.VendorTypeId == 2)
                                    {
                                        <a href="@Url.Action("Index","VendorOffer", new { vendorId = item.ID , productType ='F'})" title="Customer Offer" class="btn btn-primary btn-xs">
                                            <i class="fa fa-wrench" aria-hidden="true"></i>
                                        </a>
                                    }*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="box-footer">
            </div>
        }
</section>


@using (Html.BeginForm("CommonCustomer", "Configuration", FormMethod.Post, new { id = "commonCustomerformId", @class = "formValidator", @enctype = "multipart/form-data" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { Value = "", id = "customerIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Customer Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this customer?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i>Confirm</button>
                </div>
            </div>
        </div>
    </div>
}


@section scripts {

    <script type="text/javascript">

        $(function () {
            var inputValue = $('input[name="Vendor.CustomerType"]:checked').val();
            if (inputValue == '1') {

                $('.creditParty').show();
            }
            else {
                $('#txtCreditCommission').val(0);

                $('.creditParty').hide();
            }
        })

        $('input[type="radio"]').click(function () {
            var inputValue = $(this).attr("value");
            if (inputValue == '1') {
                $('#txtCreditCommission').val(0.5);

                $('.creditParty').show();
            }
            else {
                $('#txtCreditCommission').val(0);

                $('.creditParty').hide();
            }

        });
        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();


        });
        $("#ddlZoneId").change(function (e) {
            var zoneId = $("#ddlZoneId :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonSubZonesGet", "Configuration")",
                datatype: "Json",
                    data: { id: zoneId },
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlSubZoneId").empty();
                            $("#ddlSubZoneId").append("<option value=''>==Select Territory==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlSubZoneId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
       });

         $("#ddlCommon_DivisionFk").change(function (e) {
                var commonDivisionFk = $("#ddlCommon_DivisionFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonDistrictsGet","Configuration")",
                datatype: "Json",
                data: { id:  commonDivisionFk },
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_DistrictsFk").empty();
                            $("#ddlCommon_DistrictsFk").append("<option value=''>==Select District==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_DistrictsFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
       });


        $("#ddlCommon_DistrictsFk").change(function (e) {
                var commonDistrictsFk = $("#ddlCommon_DistrictsFk :selected").val();
                $.ajax({
                type: "GET",
                url: "@Url.Action("CommonUpazilasGet", "Configuration")",
                datatype: "Json",
                data: { id:  commonDistrictsFk},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            $("#ddlCommon_UpazilasFk").empty();
                            $("#ddlCommon_UpazilasFk").append("<option value=''>==Select Police Station==</option>");
                            $(data).each(function (index, item) {
                                $("#ddlCommon_UpazilasFk").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });

                        }
                    }
                });
        });


        



        function makeEditble(id) {
            console.log(id);
            if (id !== null) {
                $.ajax({
                type: "get",
                url: "@Url.Action("FeedCommonCustomerByIDGet", "Configuration")",
                    data: { id: id },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        console.log(data);

                        $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                        $('#customerId').val(data.ID);
                        $('#ActionId').val(2);
                        $('#CompanyFK').val(data.CompanyFK);
                        $('#txtCustomerName').val(data.Name);
                        $('#txtContactPerson').val(data.ContactPerson);
                        $('#txtPhone').val(data.Phone);


                        $('#txtEmail').val(data.Email);
                        $('#ddlCommon_DivisionFk').val(data.Common_DivisionFk);
                        $('#ddlSalesOfficerEmpId').val(data.SalesOfficerEmpId);

                        $('#ddlCommon_DistrictsFk').val(data.Common_DistrictsFk);
                        $('#ddlCommon_UpazilasFk').val(data.Common_UpazilasFk);
                        $('#ddlZoneId').val(data.ZoneId);
                        $('#ddlSubZoneId').val(data.SubZoneId);
                        $('#txtAddress').val(data.Address);
                        $('#txtNID').val(data.NID);
                        $('#txtCreditLimit').val(data.CreditLimit);
                        $('#ddCustomerTypeFk').val(data.CustomerTypeFk);
                        $('#ddNomineeRelation').val(data.NomineeRelation);
                        $('#txtSecurityAmount').val(data.SecurityAmount);
                        $('#ddlCustomerStatus').val(data.CustomerStatus);
                        $('#txtPropietor').val(data.Propietor);
                        $('#txtPaymentType').val(data.PaymentType);
                        $('#txtBusinessAddress').val(data.BusinessAddress);
                        $('#txtNomineeNID').val(data.NomineeNID);
                        $('#txtNomineePhone').val(data.NomineePhone);
                        $('#txtNomineeName').val(data.NomineeName);



                        window.scrollTo({ top: 0, behavior: 'smooth' });
                    },
                    error: function (error) {
                        console.error(error);
                    }

            });
            }
        }
        function resetForm() {
            $('#commonCustomerformId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#customerIdDelete').val(id);
                $('#ActionIdDelete').val(3);

            }
        }
        var fileIdCounter = 1;

        function addFileInput() {
            fileIdCounter++;

            var container = document.getElementById("file-container");
            var newInput = document.createElement("input");
            newInput.type = "file";
            newInput.id = "file-input-" + fileIdCounter;
            newInput.name = "Attachments";
            container.appendChild(newInput);
        }

    </script>
}

